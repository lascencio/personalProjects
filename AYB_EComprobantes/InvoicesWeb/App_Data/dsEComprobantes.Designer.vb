'------------------------------------------------------------------------------
' <auto-generated>
'     Este código fue generado por una herramienta.
'     Versión de runtime:4.0.30319.42000
'
'     Los cambios en este archivo podrían causar un comportamiento incorrecto y se perderán si
'     se vuelve a generar el código.
' </auto-generated>
'------------------------------------------------------------------------------

Option Strict Off
Option Explicit On



'''<summary>
'''Represents a strongly typed in-memory cache of data.
'''</summary>
<Global.System.Serializable(),  _
 Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
 Global.System.ComponentModel.ToolboxItem(true),  _
 Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema"),  _
 Global.System.Xml.Serialization.XmlRootAttribute("dsEComprobantes"),  _
 Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")>  _
Partial Public Class dsEComprobantes
    Inherits Global.System.Data.DataSet
    
    Private tableECOMPROBANTES_LISTA As ECOMPROBANTES_LISTADataTable
    
    Private tableECOMPROBANTES As ECOMPROBANTESDataTable
    
    Private tableECOMPROBANTES_FIRMA As ECOMPROBANTES_FIRMADataTable
    
    Private _schemaSerializationMode As Global.System.Data.SchemaSerializationMode = Global.System.Data.SchemaSerializationMode.IncludeSchema
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Sub New()
        MyBase.New
        Me.BeginInit
        Me.InitClass
        Dim schemaChangedHandler As Global.System.ComponentModel.CollectionChangeEventHandler = AddressOf Me.SchemaChanged
        AddHandler MyBase.Tables.CollectionChanged, schemaChangedHandler
        AddHandler MyBase.Relations.CollectionChanged, schemaChangedHandler
        Me.EndInit
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
        MyBase.New(info, context, false)
        If (Me.IsBinarySerialized(info, context) = true) Then
            Me.InitVars(false)
            Dim schemaChangedHandler1 As Global.System.ComponentModel.CollectionChangeEventHandler = AddressOf Me.SchemaChanged
            AddHandler Me.Tables.CollectionChanged, schemaChangedHandler1
            AddHandler Me.Relations.CollectionChanged, schemaChangedHandler1
            Return
        End If
        Dim strSchema As String = CType(info.GetValue("XmlSchema", GetType(String)),String)
        If (Me.DetermineSchemaSerializationMode(info, context) = Global.System.Data.SchemaSerializationMode.IncludeSchema) Then
            Dim ds As Global.System.Data.DataSet = New Global.System.Data.DataSet()
            ds.ReadXmlSchema(New Global.System.Xml.XmlTextReader(New Global.System.IO.StringReader(strSchema)))
            If (Not (ds.Tables("ECOMPROBANTES_LISTA")) Is Nothing) Then
                MyBase.Tables.Add(New ECOMPROBANTES_LISTADataTable(ds.Tables("ECOMPROBANTES_LISTA")))
            End If
            If (Not (ds.Tables("ECOMPROBANTES")) Is Nothing) Then
                MyBase.Tables.Add(New ECOMPROBANTESDataTable(ds.Tables("ECOMPROBANTES")))
            End If
            If (Not (ds.Tables("ECOMPROBANTES_FIRMA")) Is Nothing) Then
                MyBase.Tables.Add(New ECOMPROBANTES_FIRMADataTable(ds.Tables("ECOMPROBANTES_FIRMA")))
            End If
            Me.DataSetName = ds.DataSetName
            Me.Prefix = ds.Prefix
            Me.Namespace = ds.Namespace
            Me.Locale = ds.Locale
            Me.CaseSensitive = ds.CaseSensitive
            Me.EnforceConstraints = ds.EnforceConstraints
            Me.Merge(ds, false, Global.System.Data.MissingSchemaAction.Add)
            Me.InitVars
        Else
            Me.ReadXmlSchema(New Global.System.Xml.XmlTextReader(New Global.System.IO.StringReader(strSchema)))
        End If
        Me.GetSerializationData(info, context)
        Dim schemaChangedHandler As Global.System.ComponentModel.CollectionChangeEventHandler = AddressOf Me.SchemaChanged
        AddHandler MyBase.Tables.CollectionChanged, schemaChangedHandler
        AddHandler Me.Relations.CollectionChanged, schemaChangedHandler
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property ECOMPROBANTES_LISTA() As ECOMPROBANTES_LISTADataTable
        Get
            Return Me.tableECOMPROBANTES_LISTA
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property ECOMPROBANTES() As ECOMPROBANTESDataTable
        Get
            Return Me.tableECOMPROBANTES
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property ECOMPROBANTES_FIRMA() As ECOMPROBANTES_FIRMADataTable
        Get
            Return Me.tableECOMPROBANTES_FIRMA
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
     Global.System.ComponentModel.BrowsableAttribute(true),  _
     Global.System.ComponentModel.DesignerSerializationVisibilityAttribute(Global.System.ComponentModel.DesignerSerializationVisibility.Visible)>  _
    Public Overrides Property SchemaSerializationMode() As Global.System.Data.SchemaSerializationMode
        Get
            Return Me._schemaSerializationMode
        End Get
        Set
            Me._schemaSerializationMode = value
        End Set
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
     Global.System.ComponentModel.DesignerSerializationVisibilityAttribute(Global.System.ComponentModel.DesignerSerializationVisibility.Hidden)>  _
    Public Shadows ReadOnly Property Tables() As Global.System.Data.DataTableCollection
        Get
            Return MyBase.Tables
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
     Global.System.ComponentModel.DesignerSerializationVisibilityAttribute(Global.System.ComponentModel.DesignerSerializationVisibility.Hidden)>  _
    Public Shadows ReadOnly Property Relations() As Global.System.Data.DataRelationCollection
        Get
            Return MyBase.Relations
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Protected Overrides Sub InitializeDerivedDataSet()
        Me.BeginInit
        Me.InitClass
        Me.EndInit
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Overrides Function Clone() As Global.System.Data.DataSet
        Dim cln As dsEComprobantes = CType(MyBase.Clone,dsEComprobantes)
        cln.InitVars
        cln.SchemaSerializationMode = Me.SchemaSerializationMode
        Return cln
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Protected Overrides Function ShouldSerializeTables() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Protected Overrides Function ShouldSerializeRelations() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Protected Overrides Sub ReadXmlSerializable(ByVal reader As Global.System.Xml.XmlReader)
        If (Me.DetermineSchemaSerializationMode(reader) = Global.System.Data.SchemaSerializationMode.IncludeSchema) Then
            Me.Reset
            Dim ds As Global.System.Data.DataSet = New Global.System.Data.DataSet()
            ds.ReadXml(reader)
            If (Not (ds.Tables("ECOMPROBANTES_LISTA")) Is Nothing) Then
                MyBase.Tables.Add(New ECOMPROBANTES_LISTADataTable(ds.Tables("ECOMPROBANTES_LISTA")))
            End If
            If (Not (ds.Tables("ECOMPROBANTES")) Is Nothing) Then
                MyBase.Tables.Add(New ECOMPROBANTESDataTable(ds.Tables("ECOMPROBANTES")))
            End If
            If (Not (ds.Tables("ECOMPROBANTES_FIRMA")) Is Nothing) Then
                MyBase.Tables.Add(New ECOMPROBANTES_FIRMADataTable(ds.Tables("ECOMPROBANTES_FIRMA")))
            End If
            Me.DataSetName = ds.DataSetName
            Me.Prefix = ds.Prefix
            Me.Namespace = ds.Namespace
            Me.Locale = ds.Locale
            Me.CaseSensitive = ds.CaseSensitive
            Me.EnforceConstraints = ds.EnforceConstraints
            Me.Merge(ds, false, Global.System.Data.MissingSchemaAction.Add)
            Me.InitVars
        Else
            Me.ReadXml(reader)
            Me.InitVars
        End If
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Protected Overrides Function GetSchemaSerializable() As Global.System.Xml.Schema.XmlSchema
        Dim stream As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
        Me.WriteXmlSchema(New Global.System.Xml.XmlTextWriter(stream, Nothing))
        stream.Position = 0
        Return Global.System.Xml.Schema.XmlSchema.Read(New Global.System.Xml.XmlTextReader(stream), Nothing)
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Friend Overloads Sub InitVars()
        Me.InitVars(true)
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Friend Overloads Sub InitVars(ByVal initTable As Boolean)
        Me.tableECOMPROBANTES_LISTA = CType(MyBase.Tables("ECOMPROBANTES_LISTA"),ECOMPROBANTES_LISTADataTable)
        If (initTable = true) Then
            If (Not (Me.tableECOMPROBANTES_LISTA) Is Nothing) Then
                Me.tableECOMPROBANTES_LISTA.InitVars
            End If
        End If
        Me.tableECOMPROBANTES = CType(MyBase.Tables("ECOMPROBANTES"),ECOMPROBANTESDataTable)
        If (initTable = true) Then
            If (Not (Me.tableECOMPROBANTES) Is Nothing) Then
                Me.tableECOMPROBANTES.InitVars
            End If
        End If
        Me.tableECOMPROBANTES_FIRMA = CType(MyBase.Tables("ECOMPROBANTES_FIRMA"),ECOMPROBANTES_FIRMADataTable)
        If (initTable = true) Then
            If (Not (Me.tableECOMPROBANTES_FIRMA) Is Nothing) Then
                Me.tableECOMPROBANTES_FIRMA.InitVars
            End If
        End If
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Private Sub InitClass()
        Me.DataSetName = "dsEComprobantes"
        Me.Prefix = ""
        Me.Namespace = "http://tempuri.org/dsEComprobantes.xsd"
        Me.EnforceConstraints = true
        Me.SchemaSerializationMode = Global.System.Data.SchemaSerializationMode.IncludeSchema
        Me.tableECOMPROBANTES_LISTA = New ECOMPROBANTES_LISTADataTable()
        MyBase.Tables.Add(Me.tableECOMPROBANTES_LISTA)
        Me.tableECOMPROBANTES = New ECOMPROBANTESDataTable()
        MyBase.Tables.Add(Me.tableECOMPROBANTES)
        Me.tableECOMPROBANTES_FIRMA = New ECOMPROBANTES_FIRMADataTable()
        MyBase.Tables.Add(Me.tableECOMPROBANTES_FIRMA)
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Private Function ShouldSerializeECOMPROBANTES_LISTA() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Private Function ShouldSerializeECOMPROBANTES() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Private Function ShouldSerializeECOMPROBANTES_FIRMA() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Private Sub SchemaChanged(ByVal sender As Object, ByVal e As Global.System.ComponentModel.CollectionChangeEventArgs)
        If (e.Action = Global.System.ComponentModel.CollectionChangeAction.Remove) Then
            Me.InitVars
        End If
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Shared Function GetTypedDataSetSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
        Dim ds As dsEComprobantes = New dsEComprobantes()
        Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
        Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
        Dim any As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
        any.Namespace = ds.Namespace
        sequence.Items.Add(any)
        type.Particle = sequence
        Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
        If xs.Contains(dsSchema.TargetNamespace) Then
            Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
            Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
            Try 
                Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                dsSchema.Write(s1)
                Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                Do While schemas.MoveNext
                    schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                    s2.SetLength(0)
                    schema.Write(s2)
                    If (s1.Length = s2.Length) Then
                        s1.Position = 0
                        s2.Position = 0
                        
                        Do While ((s1.Position <> s1.Length)  _
                                    AndAlso (s1.ReadByte = s2.ReadByte))
                            
                            
                        Loop
                        If (s1.Position = s1.Length) Then
                            Return type
                        End If
                    End If
                    
                Loop
            Finally
                If (Not (s1) Is Nothing) Then
                    s1.Close
                End If
                If (Not (s2) Is Nothing) Then
                    s2.Close
                End If
            End Try
        End If
        xs.Add(dsSchema)
        Return type
    End Function
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Delegate Sub ECOMPROBANTES_LISTARowChangeEventHandler(ByVal sender As Object, ByVal e As ECOMPROBANTES_LISTARowChangeEvent)
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Delegate Sub ECOMPROBANTESRowChangeEventHandler(ByVal sender As Object, ByVal e As ECOMPROBANTESRowChangeEvent)
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Delegate Sub ECOMPROBANTES_FIRMARowChangeEventHandler(ByVal sender As Object, ByVal e As ECOMPROBANTES_FIRMARowChangeEvent)
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class ECOMPROBANTES_LISTADataTable
        Inherits Global.System.Data.TypedTableBase(Of ECOMPROBANTES_LISTARow)
        
        Private columnCOMPROBANTE_TIPO As Global.System.Data.DataColumn
        
        Private columnCOMPROBANTE_SERIE As Global.System.Data.DataColumn
        
        Private columnCOMPROBANTE_NUMERO As Global.System.Data.DataColumn
        
        Private columnCOMPROBANTE_FECHA As Global.System.Data.DataColumn
        
        Private columnCOMPROBANTE_VENCIMIENTO As Global.System.Data.DataColumn
        
        Private columnMONEDA As Global.System.Data.DataColumn
        
        Private columnVALOR_VENTA As Global.System.Data.DataColumn
        
        Private columnIGV As Global.System.Data.DataColumn
        
        Private columnIMPORTE_TOTAL As Global.System.Data.DataColumn
        
        Private columnNOMBRE_ARCHIVO As Global.System.Data.DataColumn
        
        Private columnRAZON_SOCIAL As Global.System.Data.DataColumn
        
        Private columnMENSAJE As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "ECOMPROBANTES_LISTA"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property COMPROBANTE_TIPOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCOMPROBANTE_TIPO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property COMPROBANTE_SERIEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCOMPROBANTE_SERIE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property COMPROBANTE_NUMEROColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCOMPROBANTE_NUMERO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property COMPROBANTE_FECHAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCOMPROBANTE_FECHA
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property COMPROBANTE_VENCIMIENTOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCOMPROBANTE_VENCIMIENTO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property MONEDAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnMONEDA
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property VALOR_VENTAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnVALOR_VENTA
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property IGVColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnIGV
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property IMPORTE_TOTALColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnIMPORTE_TOTAL
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property NOMBRE_ARCHIVOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnNOMBRE_ARCHIVO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property RAZON_SOCIALColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnRAZON_SOCIAL
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property MENSAJEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnMENSAJE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As ECOMPROBANTES_LISTARow
            Get
                Return CType(Me.Rows(index),ECOMPROBANTES_LISTARow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event ECOMPROBANTES_LISTARowChanging As ECOMPROBANTES_LISTARowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event ECOMPROBANTES_LISTARowChanged As ECOMPROBANTES_LISTARowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event ECOMPROBANTES_LISTARowDeleting As ECOMPROBANTES_LISTARowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event ECOMPROBANTES_LISTARowDeleted As ECOMPROBANTES_LISTARowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Sub AddECOMPROBANTES_LISTARow(ByVal row As ECOMPROBANTES_LISTARow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Function AddECOMPROBANTES_LISTARow(ByVal COMPROBANTE_TIPO As String, ByVal COMPROBANTE_SERIE As String, ByVal COMPROBANTE_NUMERO As String, ByVal COMPROBANTE_FECHA As Date, ByVal COMPROBANTE_VENCIMIENTO As Date, ByVal MONEDA As String, ByVal VALOR_VENTA As Decimal, ByVal IGV As Decimal, ByVal IMPORTE_TOTAL As Decimal, ByVal NOMBRE_ARCHIVO As String, ByVal RAZON_SOCIAL As String, ByVal MENSAJE As String) As ECOMPROBANTES_LISTARow
            Dim rowECOMPROBANTES_LISTARow As ECOMPROBANTES_LISTARow = CType(Me.NewRow,ECOMPROBANTES_LISTARow)
            Dim columnValuesArray() As Object = New Object() {COMPROBANTE_TIPO, COMPROBANTE_SERIE, COMPROBANTE_NUMERO, COMPROBANTE_FECHA, COMPROBANTE_VENCIMIENTO, MONEDA, VALOR_VENTA, IGV, IMPORTE_TOTAL, NOMBRE_ARCHIVO, RAZON_SOCIAL, MENSAJE}
            rowECOMPROBANTES_LISTARow.ItemArray = columnValuesArray
            Me.Rows.Add(rowECOMPROBANTES_LISTARow)
            Return rowECOMPROBANTES_LISTARow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As ECOMPROBANTES_LISTADataTable = CType(MyBase.Clone,ECOMPROBANTES_LISTADataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New ECOMPROBANTES_LISTADataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnCOMPROBANTE_TIPO = MyBase.Columns("COMPROBANTE_TIPO")
            Me.columnCOMPROBANTE_SERIE = MyBase.Columns("COMPROBANTE_SERIE")
            Me.columnCOMPROBANTE_NUMERO = MyBase.Columns("COMPROBANTE_NUMERO")
            Me.columnCOMPROBANTE_FECHA = MyBase.Columns("COMPROBANTE_FECHA")
            Me.columnCOMPROBANTE_VENCIMIENTO = MyBase.Columns("COMPROBANTE_VENCIMIENTO")
            Me.columnMONEDA = MyBase.Columns("MONEDA")
            Me.columnVALOR_VENTA = MyBase.Columns("VALOR_VENTA")
            Me.columnIGV = MyBase.Columns("IGV")
            Me.columnIMPORTE_TOTAL = MyBase.Columns("IMPORTE_TOTAL")
            Me.columnNOMBRE_ARCHIVO = MyBase.Columns("NOMBRE_ARCHIVO")
            Me.columnRAZON_SOCIAL = MyBase.Columns("RAZON_SOCIAL")
            Me.columnMENSAJE = MyBase.Columns("MENSAJE")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitClass()
            Me.columnCOMPROBANTE_TIPO = New Global.System.Data.DataColumn("COMPROBANTE_TIPO", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCOMPROBANTE_TIPO)
            Me.columnCOMPROBANTE_SERIE = New Global.System.Data.DataColumn("COMPROBANTE_SERIE", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCOMPROBANTE_SERIE)
            Me.columnCOMPROBANTE_NUMERO = New Global.System.Data.DataColumn("COMPROBANTE_NUMERO", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCOMPROBANTE_NUMERO)
            Me.columnCOMPROBANTE_FECHA = New Global.System.Data.DataColumn("COMPROBANTE_FECHA", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCOMPROBANTE_FECHA)
            Me.columnCOMPROBANTE_VENCIMIENTO = New Global.System.Data.DataColumn("COMPROBANTE_VENCIMIENTO", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCOMPROBANTE_VENCIMIENTO)
            Me.columnMONEDA = New Global.System.Data.DataColumn("MONEDA", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMONEDA)
            Me.columnVALOR_VENTA = New Global.System.Data.DataColumn("VALOR_VENTA", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnVALOR_VENTA)
            Me.columnIGV = New Global.System.Data.DataColumn("IGV", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnIGV)
            Me.columnIMPORTE_TOTAL = New Global.System.Data.DataColumn("IMPORTE_TOTAL", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnIMPORTE_TOTAL)
            Me.columnNOMBRE_ARCHIVO = New Global.System.Data.DataColumn("NOMBRE_ARCHIVO", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnNOMBRE_ARCHIVO)
            Me.columnRAZON_SOCIAL = New Global.System.Data.DataColumn("RAZON_SOCIAL", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRAZON_SOCIAL)
            Me.columnMENSAJE = New Global.System.Data.DataColumn("MENSAJE", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMENSAJE)
            Me.columnCOMPROBANTE_TIPO.AllowDBNull = false
            Me.columnCOMPROBANTE_TIPO.MaxLength = 2
            Me.columnCOMPROBANTE_SERIE.AllowDBNull = false
            Me.columnCOMPROBANTE_SERIE.MaxLength = 4
            Me.columnCOMPROBANTE_NUMERO.AllowDBNull = false
            Me.columnCOMPROBANTE_NUMERO.MaxLength = 10
            Me.columnCOMPROBANTE_FECHA.AllowDBNull = false
            Me.columnCOMPROBANTE_VENCIMIENTO.AllowDBNull = false
            Me.columnMONEDA.AllowDBNull = false
            Me.columnMONEDA.MaxLength = 3
            Me.columnVALOR_VENTA.ReadOnly = true
            Me.columnIGV.AllowDBNull = false
            Me.columnIMPORTE_TOTAL.AllowDBNull = false
            Me.columnNOMBRE_ARCHIVO.AllowDBNull = false
            Me.columnNOMBRE_ARCHIVO.MaxLength = 150
            Me.columnRAZON_SOCIAL.AllowDBNull = false
            Me.columnRAZON_SOCIAL.MaxLength = 100
            Me.columnMENSAJE.AllowDBNull = false
            Me.columnMENSAJE.MaxLength = 120
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function NewECOMPROBANTES_LISTARow() As ECOMPROBANTES_LISTARow
            Return CType(Me.NewRow,ECOMPROBANTES_LISTARow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New ECOMPROBANTES_LISTARow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(ECOMPROBANTES_LISTARow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.ECOMPROBANTES_LISTARowChangedEvent) Is Nothing) Then
                RaiseEvent ECOMPROBANTES_LISTARowChanged(Me, New ECOMPROBANTES_LISTARowChangeEvent(CType(e.Row,ECOMPROBANTES_LISTARow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.ECOMPROBANTES_LISTARowChangingEvent) Is Nothing) Then
                RaiseEvent ECOMPROBANTES_LISTARowChanging(Me, New ECOMPROBANTES_LISTARowChangeEvent(CType(e.Row,ECOMPROBANTES_LISTARow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.ECOMPROBANTES_LISTARowDeletedEvent) Is Nothing) Then
                RaiseEvent ECOMPROBANTES_LISTARowDeleted(Me, New ECOMPROBANTES_LISTARowChangeEvent(CType(e.Row,ECOMPROBANTES_LISTARow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.ECOMPROBANTES_LISTARowDeletingEvent) Is Nothing) Then
                RaiseEvent ECOMPROBANTES_LISTARowDeleting(Me, New ECOMPROBANTES_LISTARowChangeEvent(CType(e.Row,ECOMPROBANTES_LISTARow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub RemoveECOMPROBANTES_LISTARow(ByVal row As ECOMPROBANTES_LISTARow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As dsEComprobantes = New dsEComprobantes()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "ECOMPROBANTES_LISTADataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class ECOMPROBANTESDataTable
        Inherits Global.System.Data.TypedTableBase(Of ECOMPROBANTESRow)
        
        Private columnEMPRESA As Global.System.Data.DataColumn
        
        Private columnCUENTA_COMERCIAL As Global.System.Data.DataColumn
        
        Private columnCOMPROBANTE_TIPO As Global.System.Data.DataColumn
        
        Private columnCOMPROBANTE_SERIE As Global.System.Data.DataColumn
        
        Private columnCOMPROBANTE_NUMERO As Global.System.Data.DataColumn
        
        Private columnCOMPROBANTE_FECHA As Global.System.Data.DataColumn
        
        Private columnCOMPROBANTE_VENCIMIENTO As Global.System.Data.DataColumn
        
        Private columnEJERCICIO As Global.System.Data.DataColumn
        
        Private columnMES As Global.System.Data.DataColumn
        
        Private columnDIA As Global.System.Data.DataColumn
        
        Private columnTIPO_CAMBIO As Global.System.Data.DataColumn
        
        Private columnMONEDA As Global.System.Data.DataColumn
        
        Private columnVALOR_EXPORTACION As Global.System.Data.DataColumn
        
        Private columnBASE_IMPONIBLE_GRAVADA As Global.System.Data.DataColumn
        
        Private columnIMPORTE_EXONERADO As Global.System.Data.DataColumn
        
        Private columnIMPORTE_INAFECTO As Global.System.Data.DataColumn
        
        Private columnISC As Global.System.Data.DataColumn
        
        Private columnIGV As Global.System.Data.DataColumn
        
        Private columnIPM As Global.System.Data.DataColumn
        
        Private columnBASE_IMPONIBLE_GRAVADA2 As Global.System.Data.DataColumn
        
        Private columnIGV2 As Global.System.Data.DataColumn
        
        Private columnOTROS_TRIBUTOS As Global.System.Data.DataColumn
        
        Private columnDESCUENTO_GLOBAL As Global.System.Data.DataColumn
        
        Private columnIMPORTE_TOTAL As Global.System.Data.DataColumn
        
        Private columnREFERENCIA_TIPO As Global.System.Data.DataColumn
        
        Private columnREFERENCIA_SERIE As Global.System.Data.DataColumn
        
        Private columnREFERENCIA_NUMERO As Global.System.Data.DataColumn
        
        Private columnREFERENCIA_FECHA As Global.System.Data.DataColumn
        
        Private columnNOMBRE_ARCHIVO As Global.System.Data.DataColumn
        
        Private columnUSUARIO_ENVIO As Global.System.Data.DataColumn
        
        Private columnFECHA_ENVIO As Global.System.Data.DataColumn
        
        Private columnESTADO_TICKET As Global.System.Data.DataColumn
        
        Private columnESTADO_COMPROBANTE As Global.System.Data.DataColumn
        
        Private columnEMAIL_CONTACTO As Global.System.Data.DataColumn
        
        Private columnEMAIL_FACTURACION As Global.System.Data.DataColumn
        
        Private columnUSUARIO_DESCARGA_WEB As Global.System.Data.DataColumn
        
        Private columnFECHA_DESCARGA_WEB As Global.System.Data.DataColumn
        
        Private columnVENTA As Global.System.Data.DataColumn
        
        Private columnRAZON_SOCIAL As Global.System.Data.DataColumn
        
        Private columnMENSAJE As Global.System.Data.DataColumn
        
        Private columnDIGEST_VALUE As Global.System.Data.DataColumn
        
        Private columnSIGNATURE_VALUE As Global.System.Data.DataColumn
        
        Private columnUSUARIO_REGISTRO As Global.System.Data.DataColumn
        
        Private columnFECHA_REGISTRO As Global.System.Data.DataColumn
        
        Private columnUSUARIO_MODIFICA As Global.System.Data.DataColumn
        
        Private columnFECHA_MODIFICA As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "ECOMPROBANTES"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property EMPRESAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnEMPRESA
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CUENTA_COMERCIALColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCUENTA_COMERCIAL
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property COMPROBANTE_TIPOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCOMPROBANTE_TIPO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property COMPROBANTE_SERIEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCOMPROBANTE_SERIE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property COMPROBANTE_NUMEROColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCOMPROBANTE_NUMERO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property COMPROBANTE_FECHAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCOMPROBANTE_FECHA
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property COMPROBANTE_VENCIMIENTOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCOMPROBANTE_VENCIMIENTO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property EJERCICIOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnEJERCICIO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property MESColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnMES
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property DIAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDIA
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property TIPO_CAMBIOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTIPO_CAMBIO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property MONEDAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnMONEDA
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property VALOR_EXPORTACIONColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnVALOR_EXPORTACION
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property BASE_IMPONIBLE_GRAVADAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnBASE_IMPONIBLE_GRAVADA
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property IMPORTE_EXONERADOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnIMPORTE_EXONERADO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property IMPORTE_INAFECTOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnIMPORTE_INAFECTO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ISCColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnISC
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property IGVColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnIGV
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property IPMColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnIPM
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property BASE_IMPONIBLE_GRAVADA2Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnBASE_IMPONIBLE_GRAVADA2
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property IGV2Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnIGV2
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property OTROS_TRIBUTOSColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnOTROS_TRIBUTOS
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property DESCUENTO_GLOBALColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDESCUENTO_GLOBAL
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property IMPORTE_TOTALColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnIMPORTE_TOTAL
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property REFERENCIA_TIPOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnREFERENCIA_TIPO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property REFERENCIA_SERIEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnREFERENCIA_SERIE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property REFERENCIA_NUMEROColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnREFERENCIA_NUMERO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property REFERENCIA_FECHAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnREFERENCIA_FECHA
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property NOMBRE_ARCHIVOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnNOMBRE_ARCHIVO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property USUARIO_ENVIOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnUSUARIO_ENVIO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property FECHA_ENVIOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnFECHA_ENVIO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ESTADO_TICKETColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnESTADO_TICKET
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ESTADO_COMPROBANTEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnESTADO_COMPROBANTE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property EMAIL_CONTACTOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnEMAIL_CONTACTO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property EMAIL_FACTURACIONColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnEMAIL_FACTURACION
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property USUARIO_DESCARGA_WEBColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnUSUARIO_DESCARGA_WEB
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property FECHA_DESCARGA_WEBColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnFECHA_DESCARGA_WEB
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property VENTAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnVENTA
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property RAZON_SOCIALColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnRAZON_SOCIAL
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property MENSAJEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnMENSAJE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property DIGEST_VALUEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDIGEST_VALUE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property SIGNATURE_VALUEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSIGNATURE_VALUE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property USUARIO_REGISTROColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnUSUARIO_REGISTRO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property FECHA_REGISTROColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnFECHA_REGISTRO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property USUARIO_MODIFICAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnUSUARIO_MODIFICA
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property FECHA_MODIFICAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnFECHA_MODIFICA
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As ECOMPROBANTESRow
            Get
                Return CType(Me.Rows(index),ECOMPROBANTESRow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event ECOMPROBANTESRowChanging As ECOMPROBANTESRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event ECOMPROBANTESRowChanged As ECOMPROBANTESRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event ECOMPROBANTESRowDeleting As ECOMPROBANTESRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event ECOMPROBANTESRowDeleted As ECOMPROBANTESRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Sub AddECOMPROBANTESRow(ByVal row As ECOMPROBANTESRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Function AddECOMPROBANTESRow( _
                    ByVal EMPRESA As String,  _
                    ByVal CUENTA_COMERCIAL As String,  _
                    ByVal COMPROBANTE_TIPO As String,  _
                    ByVal COMPROBANTE_SERIE As String,  _
                    ByVal COMPROBANTE_NUMERO As String,  _
                    ByVal COMPROBANTE_FECHA As Date,  _
                    ByVal COMPROBANTE_VENCIMIENTO As Date,  _
                    ByVal EJERCICIO As String,  _
                    ByVal MES As String,  _
                    ByVal DIA As String,  _
                    ByVal TIPO_CAMBIO As Decimal,  _
                    ByVal MONEDA As String,  _
                    ByVal VALOR_EXPORTACION As Decimal,  _
                    ByVal BASE_IMPONIBLE_GRAVADA As Decimal,  _
                    ByVal IMPORTE_EXONERADO As Decimal,  _
                    ByVal IMPORTE_INAFECTO As Decimal,  _
                    ByVal ISC As Decimal,  _
                    ByVal IGV As Decimal,  _
                    ByVal IPM As Decimal,  _
                    ByVal BASE_IMPONIBLE_GRAVADA2 As Decimal,  _
                    ByVal IGV2 As Decimal,  _
                    ByVal OTROS_TRIBUTOS As Decimal,  _
                    ByVal DESCUENTO_GLOBAL As Decimal,  _
                    ByVal IMPORTE_TOTAL As Decimal,  _
                    ByVal REFERENCIA_TIPO As String,  _
                    ByVal REFERENCIA_SERIE As String,  _
                    ByVal REFERENCIA_NUMERO As String,  _
                    ByVal REFERENCIA_FECHA As Date,  _
                    ByVal NOMBRE_ARCHIVO As String,  _
                    ByVal USUARIO_ENVIO As String,  _
                    ByVal FECHA_ENVIO As Date,  _
                    ByVal ESTADO_TICKET As String,  _
                    ByVal ESTADO_COMPROBANTE As String,  _
                    ByVal EMAIL_CONTACTO As String,  _
                    ByVal EMAIL_FACTURACION As String,  _
                    ByVal USUARIO_DESCARGA_WEB As String,  _
                    ByVal FECHA_DESCARGA_WEB As Date,  _
                    ByVal VENTA As String,  _
                    ByVal RAZON_SOCIAL As String,  _
                    ByVal MENSAJE As String,  _
                    ByVal DIGEST_VALUE As String,  _
                    ByVal SIGNATURE_VALUE As String,  _
                    ByVal USUARIO_REGISTRO As String,  _
                    ByVal FECHA_REGISTRO As Date,  _
                    ByVal USUARIO_MODIFICA As String,  _
                    ByVal FECHA_MODIFICA As Date) As ECOMPROBANTESRow
            Dim rowECOMPROBANTESRow As ECOMPROBANTESRow = CType(Me.NewRow,ECOMPROBANTESRow)
            Dim columnValuesArray() As Object = New Object() {EMPRESA, CUENTA_COMERCIAL, COMPROBANTE_TIPO, COMPROBANTE_SERIE, COMPROBANTE_NUMERO, COMPROBANTE_FECHA, COMPROBANTE_VENCIMIENTO, EJERCICIO, MES, DIA, TIPO_CAMBIO, MONEDA, VALOR_EXPORTACION, BASE_IMPONIBLE_GRAVADA, IMPORTE_EXONERADO, IMPORTE_INAFECTO, ISC, IGV, IPM, BASE_IMPONIBLE_GRAVADA2, IGV2, OTROS_TRIBUTOS, DESCUENTO_GLOBAL, IMPORTE_TOTAL, REFERENCIA_TIPO, REFERENCIA_SERIE, REFERENCIA_NUMERO, REFERENCIA_FECHA, NOMBRE_ARCHIVO, USUARIO_ENVIO, FECHA_ENVIO, ESTADO_TICKET, ESTADO_COMPROBANTE, EMAIL_CONTACTO, EMAIL_FACTURACION, USUARIO_DESCARGA_WEB, FECHA_DESCARGA_WEB, VENTA, RAZON_SOCIAL, MENSAJE, DIGEST_VALUE, SIGNATURE_VALUE, USUARIO_REGISTRO, FECHA_REGISTRO, USUARIO_MODIFICA, FECHA_MODIFICA}
            rowECOMPROBANTESRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowECOMPROBANTESRow)
            Return rowECOMPROBANTESRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function FindByEMPRESACUENTA_COMERCIALCOMPROBANTE_TIPOCOMPROBANTE_SERIECOMPROBANTE_NUMERO(ByVal EMPRESA As String, ByVal CUENTA_COMERCIAL As String, ByVal COMPROBANTE_TIPO As String, ByVal COMPROBANTE_SERIE As String, ByVal COMPROBANTE_NUMERO As String) As ECOMPROBANTESRow
            Return CType(Me.Rows.Find(New Object() {EMPRESA, CUENTA_COMERCIAL, COMPROBANTE_TIPO, COMPROBANTE_SERIE, COMPROBANTE_NUMERO}),ECOMPROBANTESRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As ECOMPROBANTESDataTable = CType(MyBase.Clone,ECOMPROBANTESDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New ECOMPROBANTESDataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnEMPRESA = MyBase.Columns("EMPRESA")
            Me.columnCUENTA_COMERCIAL = MyBase.Columns("CUENTA_COMERCIAL")
            Me.columnCOMPROBANTE_TIPO = MyBase.Columns("COMPROBANTE_TIPO")
            Me.columnCOMPROBANTE_SERIE = MyBase.Columns("COMPROBANTE_SERIE")
            Me.columnCOMPROBANTE_NUMERO = MyBase.Columns("COMPROBANTE_NUMERO")
            Me.columnCOMPROBANTE_FECHA = MyBase.Columns("COMPROBANTE_FECHA")
            Me.columnCOMPROBANTE_VENCIMIENTO = MyBase.Columns("COMPROBANTE_VENCIMIENTO")
            Me.columnEJERCICIO = MyBase.Columns("EJERCICIO")
            Me.columnMES = MyBase.Columns("MES")
            Me.columnDIA = MyBase.Columns("DIA")
            Me.columnTIPO_CAMBIO = MyBase.Columns("TIPO_CAMBIO")
            Me.columnMONEDA = MyBase.Columns("MONEDA")
            Me.columnVALOR_EXPORTACION = MyBase.Columns("VALOR_EXPORTACION")
            Me.columnBASE_IMPONIBLE_GRAVADA = MyBase.Columns("BASE_IMPONIBLE_GRAVADA")
            Me.columnIMPORTE_EXONERADO = MyBase.Columns("IMPORTE_EXONERADO")
            Me.columnIMPORTE_INAFECTO = MyBase.Columns("IMPORTE_INAFECTO")
            Me.columnISC = MyBase.Columns("ISC")
            Me.columnIGV = MyBase.Columns("IGV")
            Me.columnIPM = MyBase.Columns("IPM")
            Me.columnBASE_IMPONIBLE_GRAVADA2 = MyBase.Columns("BASE_IMPONIBLE_GRAVADA2")
            Me.columnIGV2 = MyBase.Columns("IGV2")
            Me.columnOTROS_TRIBUTOS = MyBase.Columns("OTROS_TRIBUTOS")
            Me.columnDESCUENTO_GLOBAL = MyBase.Columns("DESCUENTO_GLOBAL")
            Me.columnIMPORTE_TOTAL = MyBase.Columns("IMPORTE_TOTAL")
            Me.columnREFERENCIA_TIPO = MyBase.Columns("REFERENCIA_TIPO")
            Me.columnREFERENCIA_SERIE = MyBase.Columns("REFERENCIA_SERIE")
            Me.columnREFERENCIA_NUMERO = MyBase.Columns("REFERENCIA_NUMERO")
            Me.columnREFERENCIA_FECHA = MyBase.Columns("REFERENCIA_FECHA")
            Me.columnNOMBRE_ARCHIVO = MyBase.Columns("NOMBRE_ARCHIVO")
            Me.columnUSUARIO_ENVIO = MyBase.Columns("USUARIO_ENVIO")
            Me.columnFECHA_ENVIO = MyBase.Columns("FECHA_ENVIO")
            Me.columnESTADO_TICKET = MyBase.Columns("ESTADO_TICKET")
            Me.columnESTADO_COMPROBANTE = MyBase.Columns("ESTADO_COMPROBANTE")
            Me.columnEMAIL_CONTACTO = MyBase.Columns("EMAIL_CONTACTO")
            Me.columnEMAIL_FACTURACION = MyBase.Columns("EMAIL_FACTURACION")
            Me.columnUSUARIO_DESCARGA_WEB = MyBase.Columns("USUARIO_DESCARGA_WEB")
            Me.columnFECHA_DESCARGA_WEB = MyBase.Columns("FECHA_DESCARGA_WEB")
            Me.columnVENTA = MyBase.Columns("VENTA")
            Me.columnRAZON_SOCIAL = MyBase.Columns("RAZON_SOCIAL")
            Me.columnMENSAJE = MyBase.Columns("MENSAJE")
            Me.columnDIGEST_VALUE = MyBase.Columns("DIGEST_VALUE")
            Me.columnSIGNATURE_VALUE = MyBase.Columns("SIGNATURE_VALUE")
            Me.columnUSUARIO_REGISTRO = MyBase.Columns("USUARIO_REGISTRO")
            Me.columnFECHA_REGISTRO = MyBase.Columns("FECHA_REGISTRO")
            Me.columnUSUARIO_MODIFICA = MyBase.Columns("USUARIO_MODIFICA")
            Me.columnFECHA_MODIFICA = MyBase.Columns("FECHA_MODIFICA")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitClass()
            Me.columnEMPRESA = New Global.System.Data.DataColumn("EMPRESA", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnEMPRESA)
            Me.columnCUENTA_COMERCIAL = New Global.System.Data.DataColumn("CUENTA_COMERCIAL", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCUENTA_COMERCIAL)
            Me.columnCOMPROBANTE_TIPO = New Global.System.Data.DataColumn("COMPROBANTE_TIPO", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCOMPROBANTE_TIPO)
            Me.columnCOMPROBANTE_SERIE = New Global.System.Data.DataColumn("COMPROBANTE_SERIE", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCOMPROBANTE_SERIE)
            Me.columnCOMPROBANTE_NUMERO = New Global.System.Data.DataColumn("COMPROBANTE_NUMERO", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCOMPROBANTE_NUMERO)
            Me.columnCOMPROBANTE_FECHA = New Global.System.Data.DataColumn("COMPROBANTE_FECHA", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCOMPROBANTE_FECHA)
            Me.columnCOMPROBANTE_VENCIMIENTO = New Global.System.Data.DataColumn("COMPROBANTE_VENCIMIENTO", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCOMPROBANTE_VENCIMIENTO)
            Me.columnEJERCICIO = New Global.System.Data.DataColumn("EJERCICIO", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnEJERCICIO)
            Me.columnMES = New Global.System.Data.DataColumn("MES", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMES)
            Me.columnDIA = New Global.System.Data.DataColumn("DIA", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDIA)
            Me.columnTIPO_CAMBIO = New Global.System.Data.DataColumn("TIPO_CAMBIO", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTIPO_CAMBIO)
            Me.columnMONEDA = New Global.System.Data.DataColumn("MONEDA", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMONEDA)
            Me.columnVALOR_EXPORTACION = New Global.System.Data.DataColumn("VALOR_EXPORTACION", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnVALOR_EXPORTACION)
            Me.columnBASE_IMPONIBLE_GRAVADA = New Global.System.Data.DataColumn("BASE_IMPONIBLE_GRAVADA", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnBASE_IMPONIBLE_GRAVADA)
            Me.columnIMPORTE_EXONERADO = New Global.System.Data.DataColumn("IMPORTE_EXONERADO", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnIMPORTE_EXONERADO)
            Me.columnIMPORTE_INAFECTO = New Global.System.Data.DataColumn("IMPORTE_INAFECTO", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnIMPORTE_INAFECTO)
            Me.columnISC = New Global.System.Data.DataColumn("ISC", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnISC)
            Me.columnIGV = New Global.System.Data.DataColumn("IGV", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnIGV)
            Me.columnIPM = New Global.System.Data.DataColumn("IPM", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnIPM)
            Me.columnBASE_IMPONIBLE_GRAVADA2 = New Global.System.Data.DataColumn("BASE_IMPONIBLE_GRAVADA2", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnBASE_IMPONIBLE_GRAVADA2)
            Me.columnIGV2 = New Global.System.Data.DataColumn("IGV2", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnIGV2)
            Me.columnOTROS_TRIBUTOS = New Global.System.Data.DataColumn("OTROS_TRIBUTOS", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnOTROS_TRIBUTOS)
            Me.columnDESCUENTO_GLOBAL = New Global.System.Data.DataColumn("DESCUENTO_GLOBAL", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDESCUENTO_GLOBAL)
            Me.columnIMPORTE_TOTAL = New Global.System.Data.DataColumn("IMPORTE_TOTAL", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnIMPORTE_TOTAL)
            Me.columnREFERENCIA_TIPO = New Global.System.Data.DataColumn("REFERENCIA_TIPO", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnREFERENCIA_TIPO)
            Me.columnREFERENCIA_SERIE = New Global.System.Data.DataColumn("REFERENCIA_SERIE", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnREFERENCIA_SERIE)
            Me.columnREFERENCIA_NUMERO = New Global.System.Data.DataColumn("REFERENCIA_NUMERO", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnREFERENCIA_NUMERO)
            Me.columnREFERENCIA_FECHA = New Global.System.Data.DataColumn("REFERENCIA_FECHA", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnREFERENCIA_FECHA)
            Me.columnNOMBRE_ARCHIVO = New Global.System.Data.DataColumn("NOMBRE_ARCHIVO", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnNOMBRE_ARCHIVO)
            Me.columnUSUARIO_ENVIO = New Global.System.Data.DataColumn("USUARIO_ENVIO", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnUSUARIO_ENVIO)
            Me.columnFECHA_ENVIO = New Global.System.Data.DataColumn("FECHA_ENVIO", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFECHA_ENVIO)
            Me.columnESTADO_TICKET = New Global.System.Data.DataColumn("ESTADO_TICKET", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnESTADO_TICKET)
            Me.columnESTADO_COMPROBANTE = New Global.System.Data.DataColumn("ESTADO_COMPROBANTE", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnESTADO_COMPROBANTE)
            Me.columnEMAIL_CONTACTO = New Global.System.Data.DataColumn("EMAIL_CONTACTO", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnEMAIL_CONTACTO)
            Me.columnEMAIL_FACTURACION = New Global.System.Data.DataColumn("EMAIL_FACTURACION", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnEMAIL_FACTURACION)
            Me.columnUSUARIO_DESCARGA_WEB = New Global.System.Data.DataColumn("USUARIO_DESCARGA_WEB", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnUSUARIO_DESCARGA_WEB)
            Me.columnFECHA_DESCARGA_WEB = New Global.System.Data.DataColumn("FECHA_DESCARGA_WEB", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFECHA_DESCARGA_WEB)
            Me.columnVENTA = New Global.System.Data.DataColumn("VENTA", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnVENTA)
            Me.columnRAZON_SOCIAL = New Global.System.Data.DataColumn("RAZON_SOCIAL", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRAZON_SOCIAL)
            Me.columnMENSAJE = New Global.System.Data.DataColumn("MENSAJE", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMENSAJE)
            Me.columnDIGEST_VALUE = New Global.System.Data.DataColumn("DIGEST_VALUE", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDIGEST_VALUE)
            Me.columnSIGNATURE_VALUE = New Global.System.Data.DataColumn("SIGNATURE_VALUE", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSIGNATURE_VALUE)
            Me.columnUSUARIO_REGISTRO = New Global.System.Data.DataColumn("USUARIO_REGISTRO", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnUSUARIO_REGISTRO)
            Me.columnFECHA_REGISTRO = New Global.System.Data.DataColumn("FECHA_REGISTRO", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFECHA_REGISTRO)
            Me.columnUSUARIO_MODIFICA = New Global.System.Data.DataColumn("USUARIO_MODIFICA", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnUSUARIO_MODIFICA)
            Me.columnFECHA_MODIFICA = New Global.System.Data.DataColumn("FECHA_MODIFICA", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFECHA_MODIFICA)
            Me.Constraints.Add(New Global.System.Data.UniqueConstraint("Constraint1", New Global.System.Data.DataColumn() {Me.columnEMPRESA, Me.columnCUENTA_COMERCIAL, Me.columnCOMPROBANTE_TIPO, Me.columnCOMPROBANTE_SERIE, Me.columnCOMPROBANTE_NUMERO}, true))
            Me.columnEMPRESA.AllowDBNull = false
            Me.columnEMPRESA.MaxLength = 3
            Me.columnCUENTA_COMERCIAL.AllowDBNull = false
            Me.columnCUENTA_COMERCIAL.MaxLength = 18
            Me.columnCOMPROBANTE_TIPO.AllowDBNull = false
            Me.columnCOMPROBANTE_TIPO.MaxLength = 2
            Me.columnCOMPROBANTE_SERIE.AllowDBNull = false
            Me.columnCOMPROBANTE_SERIE.MaxLength = 4
            Me.columnCOMPROBANTE_NUMERO.AllowDBNull = false
            Me.columnCOMPROBANTE_NUMERO.MaxLength = 10
            Me.columnCOMPROBANTE_FECHA.AllowDBNull = false
            Me.columnCOMPROBANTE_VENCIMIENTO.AllowDBNull = false
            Me.columnEJERCICIO.AllowDBNull = false
            Me.columnEJERCICIO.MaxLength = 4
            Me.columnMES.AllowDBNull = false
            Me.columnMES.MaxLength = 2
            Me.columnDIA.AllowDBNull = false
            Me.columnDIA.MaxLength = 2
            Me.columnTIPO_CAMBIO.AllowDBNull = false
            Me.columnMONEDA.AllowDBNull = false
            Me.columnMONEDA.MaxLength = 3
            Me.columnVALOR_EXPORTACION.AllowDBNull = false
            Me.columnBASE_IMPONIBLE_GRAVADA.AllowDBNull = false
            Me.columnIMPORTE_EXONERADO.AllowDBNull = false
            Me.columnIMPORTE_INAFECTO.AllowDBNull = false
            Me.columnISC.AllowDBNull = false
            Me.columnIGV.AllowDBNull = false
            Me.columnIPM.AllowDBNull = false
            Me.columnBASE_IMPONIBLE_GRAVADA2.AllowDBNull = false
            Me.columnIGV2.AllowDBNull = false
            Me.columnOTROS_TRIBUTOS.AllowDBNull = false
            Me.columnDESCUENTO_GLOBAL.AllowDBNull = false
            Me.columnIMPORTE_TOTAL.AllowDBNull = false
            Me.columnREFERENCIA_TIPO.AllowDBNull = false
            Me.columnREFERENCIA_TIPO.MaxLength = 2
            Me.columnREFERENCIA_SERIE.AllowDBNull = false
            Me.columnREFERENCIA_SERIE.MaxLength = 4
            Me.columnREFERENCIA_NUMERO.AllowDBNull = false
            Me.columnREFERENCIA_NUMERO.MaxLength = 10
            Me.columnNOMBRE_ARCHIVO.AllowDBNull = false
            Me.columnNOMBRE_ARCHIVO.MaxLength = 150
            Me.columnUSUARIO_ENVIO.AllowDBNull = false
            Me.columnUSUARIO_ENVIO.MaxLength = 12
            Me.columnESTADO_TICKET.AllowDBNull = false
            Me.columnESTADO_TICKET.MaxLength = 2
            Me.columnESTADO_COMPROBANTE.AllowDBNull = false
            Me.columnESTADO_COMPROBANTE.MaxLength = 4
            Me.columnEMAIL_CONTACTO.AllowDBNull = false
            Me.columnEMAIL_CONTACTO.MaxLength = 70
            Me.columnEMAIL_FACTURACION.AllowDBNull = false
            Me.columnEMAIL_FACTURACION.MaxLength = 70
            Me.columnUSUARIO_DESCARGA_WEB.AllowDBNull = false
            Me.columnUSUARIO_DESCARGA_WEB.MaxLength = 15
            Me.columnVENTA.AllowDBNull = false
            Me.columnVENTA.MaxLength = 12
            Me.columnRAZON_SOCIAL.AllowDBNull = false
            Me.columnRAZON_SOCIAL.MaxLength = 100
            Me.columnMENSAJE.AllowDBNull = false
            Me.columnMENSAJE.MaxLength = 120
            Me.columnDIGEST_VALUE.AllowDBNull = false
            Me.columnDIGEST_VALUE.MaxLength = 50
            Me.columnSIGNATURE_VALUE.AllowDBNull = false
            Me.columnSIGNATURE_VALUE.MaxLength = 400
            Me.columnUSUARIO_REGISTRO.AllowDBNull = false
            Me.columnUSUARIO_REGISTRO.MaxLength = 20
            Me.columnFECHA_REGISTRO.AllowDBNull = false
            Me.columnUSUARIO_MODIFICA.AllowDBNull = false
            Me.columnUSUARIO_MODIFICA.MaxLength = 20
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function NewECOMPROBANTESRow() As ECOMPROBANTESRow
            Return CType(Me.NewRow,ECOMPROBANTESRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New ECOMPROBANTESRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(ECOMPROBANTESRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.ECOMPROBANTESRowChangedEvent) Is Nothing) Then
                RaiseEvent ECOMPROBANTESRowChanged(Me, New ECOMPROBANTESRowChangeEvent(CType(e.Row,ECOMPROBANTESRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.ECOMPROBANTESRowChangingEvent) Is Nothing) Then
                RaiseEvent ECOMPROBANTESRowChanging(Me, New ECOMPROBANTESRowChangeEvent(CType(e.Row,ECOMPROBANTESRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.ECOMPROBANTESRowDeletedEvent) Is Nothing) Then
                RaiseEvent ECOMPROBANTESRowDeleted(Me, New ECOMPROBANTESRowChangeEvent(CType(e.Row,ECOMPROBANTESRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.ECOMPROBANTESRowDeletingEvent) Is Nothing) Then
                RaiseEvent ECOMPROBANTESRowDeleting(Me, New ECOMPROBANTESRowChangeEvent(CType(e.Row,ECOMPROBANTESRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub RemoveECOMPROBANTESRow(ByVal row As ECOMPROBANTESRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As dsEComprobantes = New dsEComprobantes()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "ECOMPROBANTESDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class ECOMPROBANTES_FIRMADataTable
        Inherits Global.System.Data.TypedTableBase(Of ECOMPROBANTES_FIRMARow)
        
        Private columnEMPRESA As Global.System.Data.DataColumn
        
        Private columnVENTA As Global.System.Data.DataColumn
        
        Private columnDIGEST_VALUE As Global.System.Data.DataColumn
        
        Private columnSIGNATURE_VALUE As Global.System.Data.DataColumn
        
        Private columnUSUARIO_REGISTRO As Global.System.Data.DataColumn
        
        Private columnFECHA_REGISTRO As Global.System.Data.DataColumn
        
        Private columnUSUARIO_MODIFICA As Global.System.Data.DataColumn
        
        Private columnFECHA_MODIFICA As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "ECOMPROBANTES_FIRMA"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property EMPRESAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnEMPRESA
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property VENTAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnVENTA
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property DIGEST_VALUEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDIGEST_VALUE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property SIGNATURE_VALUEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSIGNATURE_VALUE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property USUARIO_REGISTROColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnUSUARIO_REGISTRO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property FECHA_REGISTROColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnFECHA_REGISTRO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property USUARIO_MODIFICAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnUSUARIO_MODIFICA
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property FECHA_MODIFICAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnFECHA_MODIFICA
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As ECOMPROBANTES_FIRMARow
            Get
                Return CType(Me.Rows(index),ECOMPROBANTES_FIRMARow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event ECOMPROBANTES_FIRMARowChanging As ECOMPROBANTES_FIRMARowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event ECOMPROBANTES_FIRMARowChanged As ECOMPROBANTES_FIRMARowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event ECOMPROBANTES_FIRMARowDeleting As ECOMPROBANTES_FIRMARowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event ECOMPROBANTES_FIRMARowDeleted As ECOMPROBANTES_FIRMARowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Sub AddECOMPROBANTES_FIRMARow(ByVal row As ECOMPROBANTES_FIRMARow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Function AddECOMPROBANTES_FIRMARow(ByVal EMPRESA As String, ByVal VENTA As String, ByVal DIGEST_VALUE As String, ByVal SIGNATURE_VALUE As String, ByVal USUARIO_REGISTRO As String, ByVal FECHA_REGISTRO As Date, ByVal USUARIO_MODIFICA As String, ByVal FECHA_MODIFICA As Date) As ECOMPROBANTES_FIRMARow
            Dim rowECOMPROBANTES_FIRMARow As ECOMPROBANTES_FIRMARow = CType(Me.NewRow,ECOMPROBANTES_FIRMARow)
            Dim columnValuesArray() As Object = New Object() {EMPRESA, VENTA, DIGEST_VALUE, SIGNATURE_VALUE, USUARIO_REGISTRO, FECHA_REGISTRO, USUARIO_MODIFICA, FECHA_MODIFICA}
            rowECOMPROBANTES_FIRMARow.ItemArray = columnValuesArray
            Me.Rows.Add(rowECOMPROBANTES_FIRMARow)
            Return rowECOMPROBANTES_FIRMARow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function FindByEMPRESAVENTA(ByVal EMPRESA As String, ByVal VENTA As String) As ECOMPROBANTES_FIRMARow
            Return CType(Me.Rows.Find(New Object() {EMPRESA, VENTA}),ECOMPROBANTES_FIRMARow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As ECOMPROBANTES_FIRMADataTable = CType(MyBase.Clone,ECOMPROBANTES_FIRMADataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New ECOMPROBANTES_FIRMADataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnEMPRESA = MyBase.Columns("EMPRESA")
            Me.columnVENTA = MyBase.Columns("VENTA")
            Me.columnDIGEST_VALUE = MyBase.Columns("DIGEST_VALUE")
            Me.columnSIGNATURE_VALUE = MyBase.Columns("SIGNATURE_VALUE")
            Me.columnUSUARIO_REGISTRO = MyBase.Columns("USUARIO_REGISTRO")
            Me.columnFECHA_REGISTRO = MyBase.Columns("FECHA_REGISTRO")
            Me.columnUSUARIO_MODIFICA = MyBase.Columns("USUARIO_MODIFICA")
            Me.columnFECHA_MODIFICA = MyBase.Columns("FECHA_MODIFICA")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitClass()
            Me.columnEMPRESA = New Global.System.Data.DataColumn("EMPRESA", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnEMPRESA)
            Me.columnVENTA = New Global.System.Data.DataColumn("VENTA", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnVENTA)
            Me.columnDIGEST_VALUE = New Global.System.Data.DataColumn("DIGEST_VALUE", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDIGEST_VALUE)
            Me.columnSIGNATURE_VALUE = New Global.System.Data.DataColumn("SIGNATURE_VALUE", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSIGNATURE_VALUE)
            Me.columnUSUARIO_REGISTRO = New Global.System.Data.DataColumn("USUARIO_REGISTRO", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnUSUARIO_REGISTRO)
            Me.columnFECHA_REGISTRO = New Global.System.Data.DataColumn("FECHA_REGISTRO", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFECHA_REGISTRO)
            Me.columnUSUARIO_MODIFICA = New Global.System.Data.DataColumn("USUARIO_MODIFICA", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnUSUARIO_MODIFICA)
            Me.columnFECHA_MODIFICA = New Global.System.Data.DataColumn("FECHA_MODIFICA", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFECHA_MODIFICA)
            Me.Constraints.Add(New Global.System.Data.UniqueConstraint("Constraint1", New Global.System.Data.DataColumn() {Me.columnEMPRESA, Me.columnVENTA}, true))
            Me.columnEMPRESA.AllowDBNull = false
            Me.columnEMPRESA.MaxLength = 3
            Me.columnVENTA.AllowDBNull = false
            Me.columnVENTA.MaxLength = 12
            Me.columnDIGEST_VALUE.AllowDBNull = false
            Me.columnDIGEST_VALUE.MaxLength = 50
            Me.columnSIGNATURE_VALUE.AllowDBNull = false
            Me.columnSIGNATURE_VALUE.MaxLength = 400
            Me.columnUSUARIO_REGISTRO.AllowDBNull = false
            Me.columnUSUARIO_REGISTRO.MaxLength = 20
            Me.columnFECHA_REGISTRO.AllowDBNull = false
            Me.columnUSUARIO_MODIFICA.AllowDBNull = false
            Me.columnUSUARIO_MODIFICA.MaxLength = 20
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function NewECOMPROBANTES_FIRMARow() As ECOMPROBANTES_FIRMARow
            Return CType(Me.NewRow,ECOMPROBANTES_FIRMARow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New ECOMPROBANTES_FIRMARow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(ECOMPROBANTES_FIRMARow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.ECOMPROBANTES_FIRMARowChangedEvent) Is Nothing) Then
                RaiseEvent ECOMPROBANTES_FIRMARowChanged(Me, New ECOMPROBANTES_FIRMARowChangeEvent(CType(e.Row,ECOMPROBANTES_FIRMARow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.ECOMPROBANTES_FIRMARowChangingEvent) Is Nothing) Then
                RaiseEvent ECOMPROBANTES_FIRMARowChanging(Me, New ECOMPROBANTES_FIRMARowChangeEvent(CType(e.Row,ECOMPROBANTES_FIRMARow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.ECOMPROBANTES_FIRMARowDeletedEvent) Is Nothing) Then
                RaiseEvent ECOMPROBANTES_FIRMARowDeleted(Me, New ECOMPROBANTES_FIRMARowChangeEvent(CType(e.Row,ECOMPROBANTES_FIRMARow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.ECOMPROBANTES_FIRMARowDeletingEvent) Is Nothing) Then
                RaiseEvent ECOMPROBANTES_FIRMARowDeleting(Me, New ECOMPROBANTES_FIRMARowChangeEvent(CType(e.Row,ECOMPROBANTES_FIRMARow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub RemoveECOMPROBANTES_FIRMARow(ByVal row As ECOMPROBANTES_FIRMARow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As dsEComprobantes = New dsEComprobantes()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "ECOMPROBANTES_FIRMADataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class ECOMPROBANTES_LISTARow
        Inherits Global.System.Data.DataRow
        
        Private tableECOMPROBANTES_LISTA As ECOMPROBANTES_LISTADataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableECOMPROBANTES_LISTA = CType(Me.Table,ECOMPROBANTES_LISTADataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property COMPROBANTE_TIPO() As String
            Get
                Return CType(Me(Me.tableECOMPROBANTES_LISTA.COMPROBANTE_TIPOColumn),String)
            End Get
            Set
                Me(Me.tableECOMPROBANTES_LISTA.COMPROBANTE_TIPOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property COMPROBANTE_SERIE() As String
            Get
                Return CType(Me(Me.tableECOMPROBANTES_LISTA.COMPROBANTE_SERIEColumn),String)
            End Get
            Set
                Me(Me.tableECOMPROBANTES_LISTA.COMPROBANTE_SERIEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property COMPROBANTE_NUMERO() As String
            Get
                Return CType(Me(Me.tableECOMPROBANTES_LISTA.COMPROBANTE_NUMEROColumn),String)
            End Get
            Set
                Me(Me.tableECOMPROBANTES_LISTA.COMPROBANTE_NUMEROColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property COMPROBANTE_FECHA() As Date
            Get
                Return CType(Me(Me.tableECOMPROBANTES_LISTA.COMPROBANTE_FECHAColumn),Date)
            End Get
            Set
                Me(Me.tableECOMPROBANTES_LISTA.COMPROBANTE_FECHAColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property COMPROBANTE_VENCIMIENTO() As Date
            Get
                Return CType(Me(Me.tableECOMPROBANTES_LISTA.COMPROBANTE_VENCIMIENTOColumn),Date)
            End Get
            Set
                Me(Me.tableECOMPROBANTES_LISTA.COMPROBANTE_VENCIMIENTOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property MONEDA() As String
            Get
                Return CType(Me(Me.tableECOMPROBANTES_LISTA.MONEDAColumn),String)
            End Get
            Set
                Me(Me.tableECOMPROBANTES_LISTA.MONEDAColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property VALOR_VENTA() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableECOMPROBANTES_LISTA.VALOR_VENTAColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'VALOR_VENTA' de la tabla 'ECOMPROBANTES_LISTA' es DBNull."& _ 
                            "", e)
                End Try
            End Get
            Set
                Me(Me.tableECOMPROBANTES_LISTA.VALOR_VENTAColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property IGV() As Decimal
            Get
                Return CType(Me(Me.tableECOMPROBANTES_LISTA.IGVColumn),Decimal)
            End Get
            Set
                Me(Me.tableECOMPROBANTES_LISTA.IGVColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property IMPORTE_TOTAL() As Decimal
            Get
                Return CType(Me(Me.tableECOMPROBANTES_LISTA.IMPORTE_TOTALColumn),Decimal)
            End Get
            Set
                Me(Me.tableECOMPROBANTES_LISTA.IMPORTE_TOTALColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property NOMBRE_ARCHIVO() As String
            Get
                Return CType(Me(Me.tableECOMPROBANTES_LISTA.NOMBRE_ARCHIVOColumn),String)
            End Get
            Set
                Me(Me.tableECOMPROBANTES_LISTA.NOMBRE_ARCHIVOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property RAZON_SOCIAL() As String
            Get
                Return CType(Me(Me.tableECOMPROBANTES_LISTA.RAZON_SOCIALColumn),String)
            End Get
            Set
                Me(Me.tableECOMPROBANTES_LISTA.RAZON_SOCIALColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property MENSAJE() As String
            Get
                Return CType(Me(Me.tableECOMPROBANTES_LISTA.MENSAJEColumn),String)
            End Get
            Set
                Me(Me.tableECOMPROBANTES_LISTA.MENSAJEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsVALOR_VENTANull() As Boolean
            Return Me.IsNull(Me.tableECOMPROBANTES_LISTA.VALOR_VENTAColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetVALOR_VENTANull()
            Me(Me.tableECOMPROBANTES_LISTA.VALOR_VENTAColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class ECOMPROBANTESRow
        Inherits Global.System.Data.DataRow
        
        Private tableECOMPROBANTES As ECOMPROBANTESDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableECOMPROBANTES = CType(Me.Table,ECOMPROBANTESDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property EMPRESA() As String
            Get
                Return CType(Me(Me.tableECOMPROBANTES.EMPRESAColumn),String)
            End Get
            Set
                Me(Me.tableECOMPROBANTES.EMPRESAColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CUENTA_COMERCIAL() As String
            Get
                Return CType(Me(Me.tableECOMPROBANTES.CUENTA_COMERCIALColumn),String)
            End Get
            Set
                Me(Me.tableECOMPROBANTES.CUENTA_COMERCIALColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property COMPROBANTE_TIPO() As String
            Get
                Return CType(Me(Me.tableECOMPROBANTES.COMPROBANTE_TIPOColumn),String)
            End Get
            Set
                Me(Me.tableECOMPROBANTES.COMPROBANTE_TIPOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property COMPROBANTE_SERIE() As String
            Get
                Return CType(Me(Me.tableECOMPROBANTES.COMPROBANTE_SERIEColumn),String)
            End Get
            Set
                Me(Me.tableECOMPROBANTES.COMPROBANTE_SERIEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property COMPROBANTE_NUMERO() As String
            Get
                Return CType(Me(Me.tableECOMPROBANTES.COMPROBANTE_NUMEROColumn),String)
            End Get
            Set
                Me(Me.tableECOMPROBANTES.COMPROBANTE_NUMEROColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property COMPROBANTE_FECHA() As Date
            Get
                Return CType(Me(Me.tableECOMPROBANTES.COMPROBANTE_FECHAColumn),Date)
            End Get
            Set
                Me(Me.tableECOMPROBANTES.COMPROBANTE_FECHAColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property COMPROBANTE_VENCIMIENTO() As Date
            Get
                Return CType(Me(Me.tableECOMPROBANTES.COMPROBANTE_VENCIMIENTOColumn),Date)
            End Get
            Set
                Me(Me.tableECOMPROBANTES.COMPROBANTE_VENCIMIENTOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property EJERCICIO() As String
            Get
                Return CType(Me(Me.tableECOMPROBANTES.EJERCICIOColumn),String)
            End Get
            Set
                Me(Me.tableECOMPROBANTES.EJERCICIOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property MES() As String
            Get
                Return CType(Me(Me.tableECOMPROBANTES.MESColumn),String)
            End Get
            Set
                Me(Me.tableECOMPROBANTES.MESColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property DIA() As String
            Get
                Return CType(Me(Me.tableECOMPROBANTES.DIAColumn),String)
            End Get
            Set
                Me(Me.tableECOMPROBANTES.DIAColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property TIPO_CAMBIO() As Decimal
            Get
                Return CType(Me(Me.tableECOMPROBANTES.TIPO_CAMBIOColumn),Decimal)
            End Get
            Set
                Me(Me.tableECOMPROBANTES.TIPO_CAMBIOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property MONEDA() As String
            Get
                Return CType(Me(Me.tableECOMPROBANTES.MONEDAColumn),String)
            End Get
            Set
                Me(Me.tableECOMPROBANTES.MONEDAColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property VALOR_EXPORTACION() As Decimal
            Get
                Return CType(Me(Me.tableECOMPROBANTES.VALOR_EXPORTACIONColumn),Decimal)
            End Get
            Set
                Me(Me.tableECOMPROBANTES.VALOR_EXPORTACIONColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property BASE_IMPONIBLE_GRAVADA() As Decimal
            Get
                Return CType(Me(Me.tableECOMPROBANTES.BASE_IMPONIBLE_GRAVADAColumn),Decimal)
            End Get
            Set
                Me(Me.tableECOMPROBANTES.BASE_IMPONIBLE_GRAVADAColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property IMPORTE_EXONERADO() As Decimal
            Get
                Return CType(Me(Me.tableECOMPROBANTES.IMPORTE_EXONERADOColumn),Decimal)
            End Get
            Set
                Me(Me.tableECOMPROBANTES.IMPORTE_EXONERADOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property IMPORTE_INAFECTO() As Decimal
            Get
                Return CType(Me(Me.tableECOMPROBANTES.IMPORTE_INAFECTOColumn),Decimal)
            End Get
            Set
                Me(Me.tableECOMPROBANTES.IMPORTE_INAFECTOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ISC() As Decimal
            Get
                Return CType(Me(Me.tableECOMPROBANTES.ISCColumn),Decimal)
            End Get
            Set
                Me(Me.tableECOMPROBANTES.ISCColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property IGV() As Decimal
            Get
                Return CType(Me(Me.tableECOMPROBANTES.IGVColumn),Decimal)
            End Get
            Set
                Me(Me.tableECOMPROBANTES.IGVColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property IPM() As Decimal
            Get
                Return CType(Me(Me.tableECOMPROBANTES.IPMColumn),Decimal)
            End Get
            Set
                Me(Me.tableECOMPROBANTES.IPMColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property BASE_IMPONIBLE_GRAVADA2() As Decimal
            Get
                Return CType(Me(Me.tableECOMPROBANTES.BASE_IMPONIBLE_GRAVADA2Column),Decimal)
            End Get
            Set
                Me(Me.tableECOMPROBANTES.BASE_IMPONIBLE_GRAVADA2Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property IGV2() As Decimal
            Get
                Return CType(Me(Me.tableECOMPROBANTES.IGV2Column),Decimal)
            End Get
            Set
                Me(Me.tableECOMPROBANTES.IGV2Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property OTROS_TRIBUTOS() As Decimal
            Get
                Return CType(Me(Me.tableECOMPROBANTES.OTROS_TRIBUTOSColumn),Decimal)
            End Get
            Set
                Me(Me.tableECOMPROBANTES.OTROS_TRIBUTOSColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property DESCUENTO_GLOBAL() As Decimal
            Get
                Return CType(Me(Me.tableECOMPROBANTES.DESCUENTO_GLOBALColumn),Decimal)
            End Get
            Set
                Me(Me.tableECOMPROBANTES.DESCUENTO_GLOBALColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property IMPORTE_TOTAL() As Decimal
            Get
                Return CType(Me(Me.tableECOMPROBANTES.IMPORTE_TOTALColumn),Decimal)
            End Get
            Set
                Me(Me.tableECOMPROBANTES.IMPORTE_TOTALColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property REFERENCIA_TIPO() As String
            Get
                Return CType(Me(Me.tableECOMPROBANTES.REFERENCIA_TIPOColumn),String)
            End Get
            Set
                Me(Me.tableECOMPROBANTES.REFERENCIA_TIPOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property REFERENCIA_SERIE() As String
            Get
                Return CType(Me(Me.tableECOMPROBANTES.REFERENCIA_SERIEColumn),String)
            End Get
            Set
                Me(Me.tableECOMPROBANTES.REFERENCIA_SERIEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property REFERENCIA_NUMERO() As String
            Get
                Return CType(Me(Me.tableECOMPROBANTES.REFERENCIA_NUMEROColumn),String)
            End Get
            Set
                Me(Me.tableECOMPROBANTES.REFERENCIA_NUMEROColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property REFERENCIA_FECHA() As Date
            Get
                Try 
                    Return CType(Me(Me.tableECOMPROBANTES.REFERENCIA_FECHAColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'REFERENCIA_FECHA' de la tabla 'ECOMPROBANTES' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableECOMPROBANTES.REFERENCIA_FECHAColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property NOMBRE_ARCHIVO() As String
            Get
                Return CType(Me(Me.tableECOMPROBANTES.NOMBRE_ARCHIVOColumn),String)
            End Get
            Set
                Me(Me.tableECOMPROBANTES.NOMBRE_ARCHIVOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property USUARIO_ENVIO() As String
            Get
                Return CType(Me(Me.tableECOMPROBANTES.USUARIO_ENVIOColumn),String)
            End Get
            Set
                Me(Me.tableECOMPROBANTES.USUARIO_ENVIOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property FECHA_ENVIO() As Date
            Get
                Try 
                    Return CType(Me(Me.tableECOMPROBANTES.FECHA_ENVIOColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'FECHA_ENVIO' de la tabla 'ECOMPROBANTES' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableECOMPROBANTES.FECHA_ENVIOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ESTADO_TICKET() As String
            Get
                Return CType(Me(Me.tableECOMPROBANTES.ESTADO_TICKETColumn),String)
            End Get
            Set
                Me(Me.tableECOMPROBANTES.ESTADO_TICKETColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ESTADO_COMPROBANTE() As String
            Get
                Return CType(Me(Me.tableECOMPROBANTES.ESTADO_COMPROBANTEColumn),String)
            End Get
            Set
                Me(Me.tableECOMPROBANTES.ESTADO_COMPROBANTEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property EMAIL_CONTACTO() As String
            Get
                Return CType(Me(Me.tableECOMPROBANTES.EMAIL_CONTACTOColumn),String)
            End Get
            Set
                Me(Me.tableECOMPROBANTES.EMAIL_CONTACTOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property EMAIL_FACTURACION() As String
            Get
                Return CType(Me(Me.tableECOMPROBANTES.EMAIL_FACTURACIONColumn),String)
            End Get
            Set
                Me(Me.tableECOMPROBANTES.EMAIL_FACTURACIONColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property USUARIO_DESCARGA_WEB() As String
            Get
                Return CType(Me(Me.tableECOMPROBANTES.USUARIO_DESCARGA_WEBColumn),String)
            End Get
            Set
                Me(Me.tableECOMPROBANTES.USUARIO_DESCARGA_WEBColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property FECHA_DESCARGA_WEB() As Date
            Get
                Try 
                    Return CType(Me(Me.tableECOMPROBANTES.FECHA_DESCARGA_WEBColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'FECHA_DESCARGA_WEB' de la tabla 'ECOMPROBANTES' es DBNull"& _ 
                            ".", e)
                End Try
            End Get
            Set
                Me(Me.tableECOMPROBANTES.FECHA_DESCARGA_WEBColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property VENTA() As String
            Get
                Return CType(Me(Me.tableECOMPROBANTES.VENTAColumn),String)
            End Get
            Set
                Me(Me.tableECOMPROBANTES.VENTAColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property RAZON_SOCIAL() As String
            Get
                Return CType(Me(Me.tableECOMPROBANTES.RAZON_SOCIALColumn),String)
            End Get
            Set
                Me(Me.tableECOMPROBANTES.RAZON_SOCIALColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property MENSAJE() As String
            Get
                Return CType(Me(Me.tableECOMPROBANTES.MENSAJEColumn),String)
            End Get
            Set
                Me(Me.tableECOMPROBANTES.MENSAJEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property DIGEST_VALUE() As String
            Get
                Return CType(Me(Me.tableECOMPROBANTES.DIGEST_VALUEColumn),String)
            End Get
            Set
                Me(Me.tableECOMPROBANTES.DIGEST_VALUEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property SIGNATURE_VALUE() As String
            Get
                Return CType(Me(Me.tableECOMPROBANTES.SIGNATURE_VALUEColumn),String)
            End Get
            Set
                Me(Me.tableECOMPROBANTES.SIGNATURE_VALUEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property USUARIO_REGISTRO() As String
            Get
                Return CType(Me(Me.tableECOMPROBANTES.USUARIO_REGISTROColumn),String)
            End Get
            Set
                Me(Me.tableECOMPROBANTES.USUARIO_REGISTROColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property FECHA_REGISTRO() As Date
            Get
                Return CType(Me(Me.tableECOMPROBANTES.FECHA_REGISTROColumn),Date)
            End Get
            Set
                Me(Me.tableECOMPROBANTES.FECHA_REGISTROColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property USUARIO_MODIFICA() As String
            Get
                Return CType(Me(Me.tableECOMPROBANTES.USUARIO_MODIFICAColumn),String)
            End Get
            Set
                Me(Me.tableECOMPROBANTES.USUARIO_MODIFICAColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property FECHA_MODIFICA() As Date
            Get
                Try 
                    Return CType(Me(Me.tableECOMPROBANTES.FECHA_MODIFICAColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'FECHA_MODIFICA' de la tabla 'ECOMPROBANTES' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableECOMPROBANTES.FECHA_MODIFICAColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsREFERENCIA_FECHANull() As Boolean
            Return Me.IsNull(Me.tableECOMPROBANTES.REFERENCIA_FECHAColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetREFERENCIA_FECHANull()
            Me(Me.tableECOMPROBANTES.REFERENCIA_FECHAColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsFECHA_ENVIONull() As Boolean
            Return Me.IsNull(Me.tableECOMPROBANTES.FECHA_ENVIOColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetFECHA_ENVIONull()
            Me(Me.tableECOMPROBANTES.FECHA_ENVIOColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsFECHA_DESCARGA_WEBNull() As Boolean
            Return Me.IsNull(Me.tableECOMPROBANTES.FECHA_DESCARGA_WEBColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetFECHA_DESCARGA_WEBNull()
            Me(Me.tableECOMPROBANTES.FECHA_DESCARGA_WEBColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsFECHA_MODIFICANull() As Boolean
            Return Me.IsNull(Me.tableECOMPROBANTES.FECHA_MODIFICAColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetFECHA_MODIFICANull()
            Me(Me.tableECOMPROBANTES.FECHA_MODIFICAColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class ECOMPROBANTES_FIRMARow
        Inherits Global.System.Data.DataRow
        
        Private tableECOMPROBANTES_FIRMA As ECOMPROBANTES_FIRMADataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableECOMPROBANTES_FIRMA = CType(Me.Table,ECOMPROBANTES_FIRMADataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property EMPRESA() As String
            Get
                Return CType(Me(Me.tableECOMPROBANTES_FIRMA.EMPRESAColumn),String)
            End Get
            Set
                Me(Me.tableECOMPROBANTES_FIRMA.EMPRESAColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property VENTA() As String
            Get
                Return CType(Me(Me.tableECOMPROBANTES_FIRMA.VENTAColumn),String)
            End Get
            Set
                Me(Me.tableECOMPROBANTES_FIRMA.VENTAColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property DIGEST_VALUE() As String
            Get
                Return CType(Me(Me.tableECOMPROBANTES_FIRMA.DIGEST_VALUEColumn),String)
            End Get
            Set
                Me(Me.tableECOMPROBANTES_FIRMA.DIGEST_VALUEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property SIGNATURE_VALUE() As String
            Get
                Return CType(Me(Me.tableECOMPROBANTES_FIRMA.SIGNATURE_VALUEColumn),String)
            End Get
            Set
                Me(Me.tableECOMPROBANTES_FIRMA.SIGNATURE_VALUEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property USUARIO_REGISTRO() As String
            Get
                Return CType(Me(Me.tableECOMPROBANTES_FIRMA.USUARIO_REGISTROColumn),String)
            End Get
            Set
                Me(Me.tableECOMPROBANTES_FIRMA.USUARIO_REGISTROColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property FECHA_REGISTRO() As Date
            Get
                Return CType(Me(Me.tableECOMPROBANTES_FIRMA.FECHA_REGISTROColumn),Date)
            End Get
            Set
                Me(Me.tableECOMPROBANTES_FIRMA.FECHA_REGISTROColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property USUARIO_MODIFICA() As String
            Get
                Return CType(Me(Me.tableECOMPROBANTES_FIRMA.USUARIO_MODIFICAColumn),String)
            End Get
            Set
                Me(Me.tableECOMPROBANTES_FIRMA.USUARIO_MODIFICAColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property FECHA_MODIFICA() As Date
            Get
                Try 
                    Return CType(Me(Me.tableECOMPROBANTES_FIRMA.FECHA_MODIFICAColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'FECHA_MODIFICA' de la tabla 'ECOMPROBANTES_FIRMA' es DBNu"& _ 
                            "ll.", e)
                End Try
            End Get
            Set
                Me(Me.tableECOMPROBANTES_FIRMA.FECHA_MODIFICAColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsFECHA_MODIFICANull() As Boolean
            Return Me.IsNull(Me.tableECOMPROBANTES_FIRMA.FECHA_MODIFICAColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetFECHA_MODIFICANull()
            Me(Me.tableECOMPROBANTES_FIRMA.FECHA_MODIFICAColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Class ECOMPROBANTES_LISTARowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As ECOMPROBANTES_LISTARow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New(ByVal row As ECOMPROBANTES_LISTARow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Row() As ECOMPROBANTES_LISTARow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Class ECOMPROBANTESRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As ECOMPROBANTESRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New(ByVal row As ECOMPROBANTESRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Row() As ECOMPROBANTESRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Class ECOMPROBANTES_FIRMARowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As ECOMPROBANTES_FIRMARow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New(ByVal row As ECOMPROBANTES_FIRMARow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Row() As ECOMPROBANTES_FIRMARow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
End Class
