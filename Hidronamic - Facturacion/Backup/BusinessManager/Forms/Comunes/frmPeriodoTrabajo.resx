<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="btnAceptar.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        R0lGODlhJAAkAIcAAA8cDb7rtX/AdHFycU1qSMLCwv///zNmM+Pv35mZmarBpitKJlWKTHWobNHzyN7e
        3pm/k/T187XIsmZmZoWFhaamph41GkNwO2KVWYK4eO/v7729vTRWLtHU0I7Tg8rwwdr307HeqHSJcFZd
        VWB1XJ3cksjdw66uroq/gCRAIDhFNz9nOOf24+bm5mSbWq/kpYyiiO/37oudh7rhsZnVjhkoFqrhn9bs
        0VuNUtfi1Ul1Quz7536nd1KFSmukYX2GezBSKpPFieH422aBYTtUN7W2tcbuvVlxVVuRUXx9fIHDdiA4
        HMzMzGZmZpWtkqHXl9HezzxkNqLdlidEIrPmqOvw6pbYixYjE0p6Q5nPj3ezbThbMa3ZpJGYj0p7Sqas
        pWmNY4zQgF6DV/f399f2zkdjQoyMjH2SeWaZZo+xioO+eZnMmXGfafD87WOUUihHI2BtXbjTtEFKQUJT
        PyQ8IJLVhlRsUd3v2M3wxa3co8LnuYjGfTpiNI7Fhabfmx4oHnO1a256bd331kJrQtbW1q20rOX537Xm
        q+v653J9b4S1cxsxGNLpzMLtuFqMSoqxg5fOjFB5Srbdrq21pT9ZO5qzlTprOnmMdZ7UlGB6XLDHrFdf
        VobKe5Gui4nAf52gndzk2leHTkFsOjJaLLzns7zCu2meX0JzQjNYLhYpE2utY3Sta2aZZhIhD3y4cqbW
        nZmZmcTKw32vdNfm1db3xdHlzWOcUmaZZpnMmWaZZvT98p7El7fRs4+6iTtJOZGijlt7Vpa5kWOAXt7v
        3iUxIkVYQgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        ACH/C05FVFNDQVBFMi4wAwEBAAAh+QQAFAAAACwAAAAAJAAkAAAI/wANCBxIcOCYMRoSKowwpqDDhw4j
        VEGAAIRFEDdugAJVhSHEjwIlshhpSIgQQShR4jFBqIVHkATHxJiJCJGhkidRknGAR48kCYSqNIRpIMLM
        GDt23DSZciceIzO4vNpV6kEEmBGytmljs2RKQTs/GCEV4hWmICgKWf2YVZeupEpzgnXg4EOjAIfMonXV
        4MtahzKPJr3ZtK6RRqQO5XkCqU+GVT7QFHkwlGCVrVy75gxrJABeG4zBCNPiwxSGS0yEEowAV+lSlHTt
        4j1kQwoNNAMSdBHjAgeOT4SuDqwC9yZOEDw7431Rm0aDAZ86PIglDEePIQVaDI0wksXSnMk9U/+x4cf2
        ngkJOjSEgiNUpEjAhVcxznTu0+W1pVjZA8cMk6tVYBBKKFhgkUgsVRgwBgLf6WTYcuWVYIUHJFBQgAZF
        sWFdgaIcMdlBd5gkhEVk4IEHYoe84IeEdXiQSRJFJGhAMEi4p4MoURBQQXARgFAfXYclRl4JdbQIBowt
        CMQLBhtesMIWokSXEBkp8YTHGYmpyGIYpgxQwQMCzeICEj30oMMKfHCwQgJMTAnbU5ckIYOWE3qwCnSE
        NFTFmAyYeUEUWwARRRdtakDGoU91MsAJTFSypRLoqadgA0z2gIWTfKACBB+EJsQII09JAh1lLTxSRxgC
        9PefQBCMaSkWOAb/ugAlbCZUy30h/FCAcA/wwEmFFwoUB58cAsrBAlMUI2UEOXQ2QwiYFIKhgg/80sUG
        Ms5SabGyTpHCJjsy9MAMM+RhVh+TyDjGAy0JFKAjlmKqKbJL0AEjZWNUwYtZWQSxxx5OJFlQBGz0eamx
        QLyRwhKL+JIAgiF1kEUWfXiihitawCDwQGkY/Oe83jK8yABfBDdQCwpUnIEWq6jiwxnaCaRJmZc+mfDC
        DKciRxfZVRZBB72sDJkpLrgwBGVQvOqkrClYsEgqqRCTxAkmW1aKLA34UDQSSDAATCwFXvDnFscuvMgV
        rdQwwSepVSbQuoVozeSA8YqNJtn0ng3AFehtjkDZQxE88AUY1r0K692aAjEFw1cA8EfffwH+QBEiKD02
        KiDT8bTOSXzit3BsPcDEJ5mcmSkqCyzwxht0WGCBCgN0wWjkIOVLSAGfBGJHGXzwMcooRMwxQhIJfFFA
        UG4TFUELhMRSRAWf6NZFF59UUEQsLb1E1MBVsNsBE+Az0QEhD3SU/PYFHaTQQuc/FBAAOw==
</value>
  </data>
</root>