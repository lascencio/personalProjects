'------------------------------------------------------------------------------
' <auto-generated>
'     Este código fue generado por una herramienta.
'     Versión del motor en tiempo de ejecución:2.0.50727.8009
'
'     Los cambios en este archivo podrían causar un comportamiento incorrecto y se perderán si
'     se vuelve a generar el código.
' </auto-generated>
'------------------------------------------------------------------------------

Option Strict Off
Option Explicit On



'''<summary>
'''Represents a strongly typed in-memory cache of data.
'''</summary>
<Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0"),  _
 Global.System.Serializable(),  _
 Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
 Global.System.ComponentModel.ToolboxItem(true),  _
 Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema"),  _
 Global.System.Xml.Serialization.XmlRootAttribute("dsVentas"),  _
 Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")>  _
Partial Public Class dsVentas
    Inherits Global.System.Data.DataSet
    
    Private tableVENTAS As VENTASDataTable
    
    Private tableVENTAS_PRO As VENTAS_PRODataTable
    
    Private tableVENTAS_SER As VENTAS_SERDataTable
    
    Private tableVENTAS_PRODUCTOS As VENTAS_PRODUCTOSDataTable
    
    Private tableVENTAS_PEDIDO As VENTAS_PEDIDODataTable
    
    Private tableVENTAS_LISTA As VENTAS_LISTADataTable
    
    Private tableVENTAS_DETALLE As VENTAS_DETALLEDataTable
    
    Private _schemaSerializationMode As Global.System.Data.SchemaSerializationMode = Global.System.Data.SchemaSerializationMode.IncludeSchema
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Public Sub New()
        MyBase.New
        Me.BeginInit
        Me.InitClass
        Dim schemaChangedHandler As Global.System.ComponentModel.CollectionChangeEventHandler = AddressOf Me.SchemaChanged
        AddHandler MyBase.Tables.CollectionChanged, schemaChangedHandler
        AddHandler MyBase.Relations.CollectionChanged, schemaChangedHandler
        Me.EndInit
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
        MyBase.New(info, context, false)
        If (Me.IsBinarySerialized(info, context) = true) Then
            Me.InitVars(false)
            Dim schemaChangedHandler1 As Global.System.ComponentModel.CollectionChangeEventHandler = AddressOf Me.SchemaChanged
            AddHandler Me.Tables.CollectionChanged, schemaChangedHandler1
            AddHandler Me.Relations.CollectionChanged, schemaChangedHandler1
            Return
        End If
        Dim strSchema As String = CType(info.GetValue("XmlSchema", GetType(String)),String)
        If (Me.DetermineSchemaSerializationMode(info, context) = Global.System.Data.SchemaSerializationMode.IncludeSchema) Then
            Dim ds As Global.System.Data.DataSet = New Global.System.Data.DataSet
            ds.ReadXmlSchema(New Global.System.Xml.XmlTextReader(New Global.System.IO.StringReader(strSchema)))
            If (Not (ds.Tables("VENTAS")) Is Nothing) Then
                MyBase.Tables.Add(New VENTASDataTable(ds.Tables("VENTAS")))
            End If
            If (Not (ds.Tables("VENTAS_PRO")) Is Nothing) Then
                MyBase.Tables.Add(New VENTAS_PRODataTable(ds.Tables("VENTAS_PRO")))
            End If
            If (Not (ds.Tables("VENTAS_SER")) Is Nothing) Then
                MyBase.Tables.Add(New VENTAS_SERDataTable(ds.Tables("VENTAS_SER")))
            End If
            If (Not (ds.Tables("VENTAS_PRODUCTOS")) Is Nothing) Then
                MyBase.Tables.Add(New VENTAS_PRODUCTOSDataTable(ds.Tables("VENTAS_PRODUCTOS")))
            End If
            If (Not (ds.Tables("VENTAS_PEDIDO")) Is Nothing) Then
                MyBase.Tables.Add(New VENTAS_PEDIDODataTable(ds.Tables("VENTAS_PEDIDO")))
            End If
            If (Not (ds.Tables("VENTAS_LISTA")) Is Nothing) Then
                MyBase.Tables.Add(New VENTAS_LISTADataTable(ds.Tables("VENTAS_LISTA")))
            End If
            If (Not (ds.Tables("VENTAS_DETALLE")) Is Nothing) Then
                MyBase.Tables.Add(New VENTAS_DETALLEDataTable(ds.Tables("VENTAS_DETALLE")))
            End If
            Me.DataSetName = ds.DataSetName
            Me.Prefix = ds.Prefix
            Me.Namespace = ds.Namespace
            Me.Locale = ds.Locale
            Me.CaseSensitive = ds.CaseSensitive
            Me.EnforceConstraints = ds.EnforceConstraints
            Me.Merge(ds, false, Global.System.Data.MissingSchemaAction.Add)
            Me.InitVars
        Else
            Me.ReadXmlSchema(New Global.System.Xml.XmlTextReader(New Global.System.IO.StringReader(strSchema)))
        End If
        Me.GetSerializationData(info, context)
        Dim schemaChangedHandler As Global.System.ComponentModel.CollectionChangeEventHandler = AddressOf Me.SchemaChanged
        AddHandler MyBase.Tables.CollectionChanged, schemaChangedHandler
        AddHandler Me.Relations.CollectionChanged, schemaChangedHandler
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property VENTAS() As VENTASDataTable
        Get
            Return Me.tableVENTAS
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property VENTAS_PRO() As VENTAS_PRODataTable
        Get
            Return Me.tableVENTAS_PRO
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property VENTAS_SER() As VENTAS_SERDataTable
        Get
            Return Me.tableVENTAS_SER
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property VENTAS_PRODUCTOS() As VENTAS_PRODUCTOSDataTable
        Get
            Return Me.tableVENTAS_PRODUCTOS
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property VENTAS_PEDIDO() As VENTAS_PEDIDODataTable
        Get
            Return Me.tableVENTAS_PEDIDO
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property VENTAS_LISTA() As VENTAS_LISTADataTable
        Get
            Return Me.tableVENTAS_LISTA
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property VENTAS_DETALLE() As VENTAS_DETALLEDataTable
        Get
            Return Me.tableVENTAS_DETALLE
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.ComponentModel.BrowsableAttribute(true),  _
     Global.System.ComponentModel.DesignerSerializationVisibilityAttribute(Global.System.ComponentModel.DesignerSerializationVisibility.Visible)>  _
    Public Overrides Property SchemaSerializationMode() As Global.System.Data.SchemaSerializationMode
        Get
            Return Me._schemaSerializationMode
        End Get
        Set
            Me._schemaSerializationMode = value
        End Set
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.ComponentModel.DesignerSerializationVisibilityAttribute(Global.System.ComponentModel.DesignerSerializationVisibility.Hidden)>  _
    Public Shadows ReadOnly Property Tables() As Global.System.Data.DataTableCollection
        Get
            Return MyBase.Tables
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.ComponentModel.DesignerSerializationVisibilityAttribute(Global.System.ComponentModel.DesignerSerializationVisibility.Hidden)>  _
    Public Shadows ReadOnly Property Relations() As Global.System.Data.DataRelationCollection
        Get
            Return MyBase.Relations
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Protected Overrides Sub InitializeDerivedDataSet()
        Me.BeginInit
        Me.InitClass
        Me.EndInit
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Public Overrides Function Clone() As Global.System.Data.DataSet
        Dim cln As dsVentas = CType(MyBase.Clone,dsVentas)
        cln.InitVars
        cln.SchemaSerializationMode = Me.SchemaSerializationMode
        Return cln
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Protected Overrides Function ShouldSerializeTables() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Protected Overrides Function ShouldSerializeRelations() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Protected Overrides Sub ReadXmlSerializable(ByVal reader As Global.System.Xml.XmlReader)
        If (Me.DetermineSchemaSerializationMode(reader) = Global.System.Data.SchemaSerializationMode.IncludeSchema) Then
            Me.Reset
            Dim ds As Global.System.Data.DataSet = New Global.System.Data.DataSet
            ds.ReadXml(reader)
            If (Not (ds.Tables("VENTAS")) Is Nothing) Then
                MyBase.Tables.Add(New VENTASDataTable(ds.Tables("VENTAS")))
            End If
            If (Not (ds.Tables("VENTAS_PRO")) Is Nothing) Then
                MyBase.Tables.Add(New VENTAS_PRODataTable(ds.Tables("VENTAS_PRO")))
            End If
            If (Not (ds.Tables("VENTAS_SER")) Is Nothing) Then
                MyBase.Tables.Add(New VENTAS_SERDataTable(ds.Tables("VENTAS_SER")))
            End If
            If (Not (ds.Tables("VENTAS_PRODUCTOS")) Is Nothing) Then
                MyBase.Tables.Add(New VENTAS_PRODUCTOSDataTable(ds.Tables("VENTAS_PRODUCTOS")))
            End If
            If (Not (ds.Tables("VENTAS_PEDIDO")) Is Nothing) Then
                MyBase.Tables.Add(New VENTAS_PEDIDODataTable(ds.Tables("VENTAS_PEDIDO")))
            End If
            If (Not (ds.Tables("VENTAS_LISTA")) Is Nothing) Then
                MyBase.Tables.Add(New VENTAS_LISTADataTable(ds.Tables("VENTAS_LISTA")))
            End If
            If (Not (ds.Tables("VENTAS_DETALLE")) Is Nothing) Then
                MyBase.Tables.Add(New VENTAS_DETALLEDataTable(ds.Tables("VENTAS_DETALLE")))
            End If
            Me.DataSetName = ds.DataSetName
            Me.Prefix = ds.Prefix
            Me.Namespace = ds.Namespace
            Me.Locale = ds.Locale
            Me.CaseSensitive = ds.CaseSensitive
            Me.EnforceConstraints = ds.EnforceConstraints
            Me.Merge(ds, false, Global.System.Data.MissingSchemaAction.Add)
            Me.InitVars
        Else
            Me.ReadXml(reader)
            Me.InitVars
        End If
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Protected Overrides Function GetSchemaSerializable() As Global.System.Xml.Schema.XmlSchema
        Dim stream As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
        Me.WriteXmlSchema(New Global.System.Xml.XmlTextWriter(stream, Nothing))
        stream.Position = 0
        Return Global.System.Xml.Schema.XmlSchema.Read(New Global.System.Xml.XmlTextReader(stream), Nothing)
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Friend Overloads Sub InitVars()
        Me.InitVars(true)
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Friend Overloads Sub InitVars(ByVal initTable As Boolean)
        Me.tableVENTAS = CType(MyBase.Tables("VENTAS"),VENTASDataTable)
        If (initTable = true) Then
            If (Not (Me.tableVENTAS) Is Nothing) Then
                Me.tableVENTAS.InitVars
            End If
        End If
        Me.tableVENTAS_PRO = CType(MyBase.Tables("VENTAS_PRO"),VENTAS_PRODataTable)
        If (initTable = true) Then
            If (Not (Me.tableVENTAS_PRO) Is Nothing) Then
                Me.tableVENTAS_PRO.InitVars
            End If
        End If
        Me.tableVENTAS_SER = CType(MyBase.Tables("VENTAS_SER"),VENTAS_SERDataTable)
        If (initTable = true) Then
            If (Not (Me.tableVENTAS_SER) Is Nothing) Then
                Me.tableVENTAS_SER.InitVars
            End If
        End If
        Me.tableVENTAS_PRODUCTOS = CType(MyBase.Tables("VENTAS_PRODUCTOS"),VENTAS_PRODUCTOSDataTable)
        If (initTable = true) Then
            If (Not (Me.tableVENTAS_PRODUCTOS) Is Nothing) Then
                Me.tableVENTAS_PRODUCTOS.InitVars
            End If
        End If
        Me.tableVENTAS_PEDIDO = CType(MyBase.Tables("VENTAS_PEDIDO"),VENTAS_PEDIDODataTable)
        If (initTable = true) Then
            If (Not (Me.tableVENTAS_PEDIDO) Is Nothing) Then
                Me.tableVENTAS_PEDIDO.InitVars
            End If
        End If
        Me.tableVENTAS_LISTA = CType(MyBase.Tables("VENTAS_LISTA"),VENTAS_LISTADataTable)
        If (initTable = true) Then
            If (Not (Me.tableVENTAS_LISTA) Is Nothing) Then
                Me.tableVENTAS_LISTA.InitVars
            End If
        End If
        Me.tableVENTAS_DETALLE = CType(MyBase.Tables("VENTAS_DETALLE"),VENTAS_DETALLEDataTable)
        If (initTable = true) Then
            If (Not (Me.tableVENTAS_DETALLE) Is Nothing) Then
                Me.tableVENTAS_DETALLE.InitVars
            End If
        End If
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Private Sub InitClass()
        Me.DataSetName = "dsVentas"
        Me.Prefix = ""
        Me.Namespace = "http://tempuri.org/dsVentas.xsd"
        Me.EnforceConstraints = true
        Me.SchemaSerializationMode = Global.System.Data.SchemaSerializationMode.IncludeSchema
        Me.tableVENTAS = New VENTASDataTable
        MyBase.Tables.Add(Me.tableVENTAS)
        Me.tableVENTAS_PRO = New VENTAS_PRODataTable
        MyBase.Tables.Add(Me.tableVENTAS_PRO)
        Me.tableVENTAS_SER = New VENTAS_SERDataTable
        MyBase.Tables.Add(Me.tableVENTAS_SER)
        Me.tableVENTAS_PRODUCTOS = New VENTAS_PRODUCTOSDataTable
        MyBase.Tables.Add(Me.tableVENTAS_PRODUCTOS)
        Me.tableVENTAS_PEDIDO = New VENTAS_PEDIDODataTable
        MyBase.Tables.Add(Me.tableVENTAS_PEDIDO)
        Me.tableVENTAS_LISTA = New VENTAS_LISTADataTable
        MyBase.Tables.Add(Me.tableVENTAS_LISTA)
        Me.tableVENTAS_DETALLE = New VENTAS_DETALLEDataTable
        MyBase.Tables.Add(Me.tableVENTAS_DETALLE)
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Private Function ShouldSerializeVENTAS() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Private Function ShouldSerializeVENTAS_PRO() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Private Function ShouldSerializeVENTAS_SER() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Private Function ShouldSerializeVENTAS_PRODUCTOS() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Private Function ShouldSerializeVENTAS_PEDIDO() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Private Function ShouldSerializeVENTAS_LISTA() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Private Function ShouldSerializeVENTAS_DETALLE() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Private Sub SchemaChanged(ByVal sender As Object, ByVal e As Global.System.ComponentModel.CollectionChangeEventArgs)
        If (e.Action = Global.System.ComponentModel.CollectionChangeAction.Remove) Then
            Me.InitVars
        End If
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Public Shared Function GetTypedDataSetSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
        Dim ds As dsVentas = New dsVentas
        Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType
        Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence
        Dim any As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
        any.Namespace = ds.Namespace
        sequence.Items.Add(any)
        type.Particle = sequence
        Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
        If xs.Contains(dsSchema.TargetNamespace) Then
            Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
            Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
            Try 
                Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                dsSchema.Write(s1)
                Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                Do While schemas.MoveNext
                    schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                    s2.SetLength(0)
                    schema.Write(s2)
                    If (s1.Length = s2.Length) Then
                        s1.Position = 0
                        s2.Position = 0
                        
                        Do While ((s1.Position <> s1.Length)  _
                                    AndAlso (s1.ReadByte = s2.ReadByte))
                            
                            
                        Loop
                        If (s1.Position = s1.Length) Then
                            Return type
                        End If
                    End If
                    
                Loop
            Finally
                If (Not (s1) Is Nothing) Then
                    s1.Close
                End If
                If (Not (s2) Is Nothing) Then
                    s2.Close
                End If
            End Try
        End If
        xs.Add(dsSchema)
        Return type
    End Function
    
    Public Delegate Sub VENTASRowChangeEventHandler(ByVal sender As Object, ByVal e As VENTASRowChangeEvent)
    
    Public Delegate Sub VENTAS_PRORowChangeEventHandler(ByVal sender As Object, ByVal e As VENTAS_PRORowChangeEvent)
    
    Public Delegate Sub VENTAS_SERRowChangeEventHandler(ByVal sender As Object, ByVal e As VENTAS_SERRowChangeEvent)
    
    Public Delegate Sub VENTAS_PRODUCTOSRowChangeEventHandler(ByVal sender As Object, ByVal e As VENTAS_PRODUCTOSRowChangeEvent)
    
    Public Delegate Sub VENTAS_PEDIDORowChangeEventHandler(ByVal sender As Object, ByVal e As VENTAS_PEDIDORowChangeEvent)
    
    Public Delegate Sub VENTAS_LISTARowChangeEventHandler(ByVal sender As Object, ByVal e As VENTAS_LISTARowChangeEvent)
    
    Public Delegate Sub VENTAS_DETALLERowChangeEventHandler(ByVal sender As Object, ByVal e As VENTAS_DETALLERowChangeEvent)
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0"),  _
     Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class VENTASDataTable
        Inherits Global.System.Data.TypedTableBase(Of VENTASRow)
        
        Private columnEMPRESA As Global.System.Data.DataColumn
        
        Private columnVENTA As Global.System.Data.DataColumn
        
        Private columnEJERCICIO As Global.System.Data.DataColumn
        
        Private columnMES As Global.System.Data.DataColumn
        
        Private columnASIENTO_TIPO As Global.System.Data.DataColumn
        
        Private columnASIENTO_NUMERO As Global.System.Data.DataColumn
        
        Private columnASIENTO_FECHA As Global.System.Data.DataColumn
        
        Private columnCUENTA_COMERCIAL As Global.System.Data.DataColumn
        
        Private columnCOMPROBANTE_TIPO As Global.System.Data.DataColumn
        
        Private columnCOMPROBANTE_SERIE As Global.System.Data.DataColumn
        
        Private columnCOMPROBANTE_NUMERO As Global.System.Data.DataColumn
        
        Private columnCOMPROBANTE_FECHA As Global.System.Data.DataColumn
        
        Private columnCOMPROBANTE_VENCIMIENTO As Global.System.Data.DataColumn
        
        Private columnTIPO_CAMBIO As Global.System.Data.DataColumn
        
        Private columnTIPO_MONEDA As Global.System.Data.DataColumn
        
        Private columnALMACEN As Global.System.Data.DataColumn
        
        Private columnLISTA_PRECIO As Global.System.Data.DataColumn
        
        Private columnCENTRO_DISTRIBUCION As Global.System.Data.DataColumn
        
        Private columnCODIGO_DOMICILIO As Global.System.Data.DataColumn
        
        Private columnVALOR_EXPORTACION_ORIGEN As Global.System.Data.DataColumn
        
        Private columnBASE_IMPONIBLE_GRAVADA_ORIGEN As Global.System.Data.DataColumn
        
        Private columnimporte_exonerado_ORIGEN As Global.System.Data.DataColumn
        
        Private columnimporte_inafecto_ORIGEN As Global.System.Data.DataColumn
        
        Private columnISC_ORIGEN As Global.System.Data.DataColumn
        
        Private columnIGV_ORIGEN As Global.System.Data.DataColumn
        
        Private columnIPM_ORIGEN As Global.System.Data.DataColumn
        
        Private columnBASE_IMPONIBLE_GRAVADA2_ORIGEN As Global.System.Data.DataColumn
        
        Private columnIGV2_ORIGEN As Global.System.Data.DataColumn
        
        Private columnOTROS_TRIBUTOS_ORIGEN As Global.System.Data.DataColumn
        
        Private columnIMPORTE_TOTAL_ORIGEN As Global.System.Data.DataColumn
        
        Private columnVALOR_EXPORTACION_MN As Global.System.Data.DataColumn
        
        Private columnBASE_IMPONIBLE_GRAVADA_MN As Global.System.Data.DataColumn
        
        Private columnimporte_exonerado_MN As Global.System.Data.DataColumn
        
        Private columnimporte_inafecto_MN As Global.System.Data.DataColumn
        
        Private columnISC_MN As Global.System.Data.DataColumn
        
        Private columnIGV_MN As Global.System.Data.DataColumn
        
        Private columnIPM_MN As Global.System.Data.DataColumn
        
        Private columnBASE_IMPONIBLE_GRAVADA2_MN As Global.System.Data.DataColumn
        
        Private columnIGV2_MN As Global.System.Data.DataColumn
        
        Private columnOTROS_TRIBUTOS_MN As Global.System.Data.DataColumn
        
        Private columnIMPORTE_TOTAL_MN As Global.System.Data.DataColumn
        
        Private columnVALOR_EXPORTACION_ME As Global.System.Data.DataColumn
        
        Private columnBASE_IMPONIBLE_GRAVADA_ME As Global.System.Data.DataColumn
        
        Private columnimporte_exonerado_ME As Global.System.Data.DataColumn
        
        Private columnimporte_inafecto_ME As Global.System.Data.DataColumn
        
        Private columnISC_ME As Global.System.Data.DataColumn
        
        Private columnIGV_ME As Global.System.Data.DataColumn
        
        Private columnIPM_ME As Global.System.Data.DataColumn
        
        Private columnBASE_IMPONIBLE_GRAVADA2_ME As Global.System.Data.DataColumn
        
        Private columnIGV2_ME As Global.System.Data.DataColumn
        
        Private columnOTROS_TRIBUTOS_ME As Global.System.Data.DataColumn
        
        Private columnIMPORTE_TOTAL_ME As Global.System.Data.DataColumn
        
        Private columnREFERENCIA_CUO As Global.System.Data.DataColumn
        
        Private columnCONDICION_PAGO As Global.System.Data.DataColumn
        
        Private columnFECHA_ULTIMO_PAGO As Global.System.Data.DataColumn
        
        Private columnIMPORTE_SALDO As Global.System.Data.DataColumn
        
        Private columnCOMENTARIO As Global.System.Data.DataColumn
        
        Private columnTIPO_VENTA As Global.System.Data.DataColumn
        
        Private columnZONA_COMERCIAL As Global.System.Data.DataColumn
        
        Private columnCODIGO_VENDEDOR As Global.System.Data.DataColumn
        
        Private columnCODIGO_COBRADOR As Global.System.Data.DataColumn
        
        Private columnCENTRO_COSTO As Global.System.Data.DataColumn
        
        Private columnLETRA As Global.System.Data.DataColumn
        
        Private columnFACTORING As Global.System.Data.DataColumn
        
        Private columnPLANILLA_COBRANZA As Global.System.Data.DataColumn
        
        Private columnGUIA_REMITENTE As Global.System.Data.DataColumn
        
        Private columnGUIA_TRANSPORTISTA As Global.System.Data.DataColumn
        
        Private columnORDEN_PEDIDO As Global.System.Data.DataColumn
        
        Private columnUSUARIO_ENVIO As Global.System.Data.DataColumn
        
        Private columnFECHA_ENVIO As Global.System.Data.DataColumn
        
        Private columnFECHA_RECEPCION As Global.System.Data.DataColumn
        
        Private columnINDICA_SUJETA_DETRACCION As Global.System.Data.DataColumn
        
        Private columnPORCENTAJE_DETRACCION As Global.System.Data.DataColumn
        
        Private columnNUMERO_DETRACCION As Global.System.Data.DataColumn
        
        Private columnFECHA_DETRACCION As Global.System.Data.DataColumn
        
        Private columnORIGEN As Global.System.Data.DataColumn
        
        Private columnESTADO As Global.System.Data.DataColumn
        
        Private columnUBICACION_CUSTODIA As Global.System.Data.DataColumn
        
        Private columnUSUARIO_CUSTODIA As Global.System.Data.DataColumn
        
        Private columnFECHA_CUSTODIA As Global.System.Data.DataColumn
        
        Private columnREFERENCIA_TIPO As Global.System.Data.DataColumn
        
        Private columnREFERENCIA_SERIE As Global.System.Data.DataColumn
        
        Private columnREFERENCIA_NUMERO As Global.System.Data.DataColumn
        
        Private columnREFERENCIA_FECHA As Global.System.Data.DataColumn
        
        Private columnINDICA_EXPORTACION As Global.System.Data.DataColumn
        
        Private columnUSUARIO_REGISTRO As Global.System.Data.DataColumn
        
        Private columnFECHA_REGISTRO As Global.System.Data.DataColumn
        
        Private columnUSUARIO_MODIFICA As Global.System.Data.DataColumn
        
        Private columnFECHA_MODIFICA As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "VENTAS"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property EMPRESAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnEMPRESA
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property VENTAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnVENTA
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property EJERCICIOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnEJERCICIO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property MESColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnMES
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property ASIENTO_TIPOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnASIENTO_TIPO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property ASIENTO_NUMEROColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnASIENTO_NUMERO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property ASIENTO_FECHAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnASIENTO_FECHA
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property CUENTA_COMERCIALColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCUENTA_COMERCIAL
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property COMPROBANTE_TIPOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCOMPROBANTE_TIPO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property COMPROBANTE_SERIEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCOMPROBANTE_SERIE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property COMPROBANTE_NUMEROColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCOMPROBANTE_NUMERO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property COMPROBANTE_FECHAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCOMPROBANTE_FECHA
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property COMPROBANTE_VENCIMIENTOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCOMPROBANTE_VENCIMIENTO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property TIPO_CAMBIOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTIPO_CAMBIO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property TIPO_MONEDAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTIPO_MONEDA
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property ALMACENColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnALMACEN
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property LISTA_PRECIOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnLISTA_PRECIO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property CENTRO_DISTRIBUCIONColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCENTRO_DISTRIBUCION
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property CODIGO_DOMICILIOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCODIGO_DOMICILIO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property VALOR_EXPORTACION_ORIGENColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnVALOR_EXPORTACION_ORIGEN
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property BASE_IMPONIBLE_GRAVADA_ORIGENColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnBASE_IMPONIBLE_GRAVADA_ORIGEN
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property importe_exonerado_ORIGENColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnimporte_exonerado_ORIGEN
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property importe_inafecto_ORIGENColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnimporte_inafecto_ORIGEN
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property ISC_ORIGENColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnISC_ORIGEN
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property IGV_ORIGENColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnIGV_ORIGEN
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property IPM_ORIGENColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnIPM_ORIGEN
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property BASE_IMPONIBLE_GRAVADA2_ORIGENColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnBASE_IMPONIBLE_GRAVADA2_ORIGEN
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property IGV2_ORIGENColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnIGV2_ORIGEN
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property OTROS_TRIBUTOS_ORIGENColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnOTROS_TRIBUTOS_ORIGEN
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property IMPORTE_TOTAL_ORIGENColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnIMPORTE_TOTAL_ORIGEN
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property VALOR_EXPORTACION_MNColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnVALOR_EXPORTACION_MN
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property BASE_IMPONIBLE_GRAVADA_MNColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnBASE_IMPONIBLE_GRAVADA_MN
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property importe_exonerado_MNColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnimporte_exonerado_MN
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property importe_inafecto_MNColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnimporte_inafecto_MN
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property ISC_MNColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnISC_MN
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property IGV_MNColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnIGV_MN
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property IPM_MNColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnIPM_MN
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property BASE_IMPONIBLE_GRAVADA2_MNColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnBASE_IMPONIBLE_GRAVADA2_MN
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property IGV2_MNColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnIGV2_MN
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property OTROS_TRIBUTOS_MNColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnOTROS_TRIBUTOS_MN
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property IMPORTE_TOTAL_MNColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnIMPORTE_TOTAL_MN
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property VALOR_EXPORTACION_MEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnVALOR_EXPORTACION_ME
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property BASE_IMPONIBLE_GRAVADA_MEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnBASE_IMPONIBLE_GRAVADA_ME
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property importe_exonerado_MEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnimporte_exonerado_ME
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property importe_inafecto_MEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnimporte_inafecto_ME
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property ISC_MEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnISC_ME
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property IGV_MEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnIGV_ME
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property IPM_MEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnIPM_ME
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property BASE_IMPONIBLE_GRAVADA2_MEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnBASE_IMPONIBLE_GRAVADA2_ME
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property IGV2_MEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnIGV2_ME
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property OTROS_TRIBUTOS_MEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnOTROS_TRIBUTOS_ME
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property IMPORTE_TOTAL_MEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnIMPORTE_TOTAL_ME
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property REFERENCIA_CUOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnREFERENCIA_CUO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property CONDICION_PAGOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCONDICION_PAGO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property FECHA_ULTIMO_PAGOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnFECHA_ULTIMO_PAGO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property IMPORTE_SALDOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnIMPORTE_SALDO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property COMENTARIOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCOMENTARIO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property TIPO_VENTAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTIPO_VENTA
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property ZONA_COMERCIALColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnZONA_COMERCIAL
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property CODIGO_VENDEDORColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCODIGO_VENDEDOR
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property CODIGO_COBRADORColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCODIGO_COBRADOR
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property CENTRO_COSTOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCENTRO_COSTO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property LETRAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnLETRA
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property FACTORINGColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnFACTORING
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property PLANILLA_COBRANZAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPLANILLA_COBRANZA
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property GUIA_REMITENTEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnGUIA_REMITENTE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property GUIA_TRANSPORTISTAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnGUIA_TRANSPORTISTA
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property ORDEN_PEDIDOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnORDEN_PEDIDO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property USUARIO_ENVIOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnUSUARIO_ENVIO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property FECHA_ENVIOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnFECHA_ENVIO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property FECHA_RECEPCIONColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnFECHA_RECEPCION
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property INDICA_SUJETA_DETRACCIONColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnINDICA_SUJETA_DETRACCION
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property PORCENTAJE_DETRACCIONColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPORCENTAJE_DETRACCION
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property NUMERO_DETRACCIONColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnNUMERO_DETRACCION
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property FECHA_DETRACCIONColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnFECHA_DETRACCION
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property ORIGENColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnORIGEN
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property ESTADOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnESTADO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property UBICACION_CUSTODIAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnUBICACION_CUSTODIA
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property USUARIO_CUSTODIAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnUSUARIO_CUSTODIA
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property FECHA_CUSTODIAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnFECHA_CUSTODIA
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property REFERENCIA_TIPOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnREFERENCIA_TIPO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property REFERENCIA_SERIEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnREFERENCIA_SERIE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property REFERENCIA_NUMEROColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnREFERENCIA_NUMERO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property REFERENCIA_FECHAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnREFERENCIA_FECHA
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property INDICA_EXPORTACIONColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnINDICA_EXPORTACION
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property USUARIO_REGISTROColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnUSUARIO_REGISTRO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property FECHA_REGISTROColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnFECHA_REGISTRO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property USUARIO_MODIFICAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnUSUARIO_MODIFICA
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property FECHA_MODIFICAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnFECHA_MODIFICA
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As VENTASRow
            Get
                Return CType(Me.Rows(index),VENTASRow)
            End Get
        End Property
        
        Public Event VENTASRowChanging As VENTASRowChangeEventHandler
        
        Public Event VENTASRowChanged As VENTASRowChangeEventHandler
        
        Public Event VENTASRowDeleting As VENTASRowChangeEventHandler
        
        Public Event VENTASRowDeleted As VENTASRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Sub AddVENTASRow(ByVal row As VENTASRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Function AddVENTASRow( _
                    ByVal EMPRESA As String,  _
                    ByVal VENTA As String,  _
                    ByVal EJERCICIO As String,  _
                    ByVal MES As String,  _
                    ByVal ASIENTO_TIPO As String,  _
                    ByVal ASIENTO_NUMERO As String,  _
                    ByVal ASIENTO_FECHA As Date,  _
                    ByVal CUENTA_COMERCIAL As String,  _
                    ByVal COMPROBANTE_TIPO As String,  _
                    ByVal COMPROBANTE_SERIE As String,  _
                    ByVal COMPROBANTE_NUMERO As String,  _
                    ByVal COMPROBANTE_FECHA As Date,  _
                    ByVal COMPROBANTE_VENCIMIENTO As Date,  _
                    ByVal TIPO_CAMBIO As Decimal,  _
                    ByVal TIPO_MONEDA As String,  _
                    ByVal ALMACEN As String,  _
                    ByVal LISTA_PRECIO As String,  _
                    ByVal CENTRO_DISTRIBUCION As String,  _
                    ByVal CODIGO_DOMICILIO As String,  _
                    ByVal VALOR_EXPORTACION_ORIGEN As Decimal,  _
                    ByVal BASE_IMPONIBLE_GRAVADA_ORIGEN As Decimal,  _
                    ByVal importe_exonerado_ORIGEN As Decimal,  _
                    ByVal importe_inafecto_ORIGEN As Decimal,  _
                    ByVal ISC_ORIGEN As Decimal,  _
                    ByVal IGV_ORIGEN As Decimal,  _
                    ByVal IPM_ORIGEN As Decimal,  _
                    ByVal BASE_IMPONIBLE_GRAVADA2_ORIGEN As Decimal,  _
                    ByVal IGV2_ORIGEN As Decimal,  _
                    ByVal OTROS_TRIBUTOS_ORIGEN As Decimal,  _
                    ByVal IMPORTE_TOTAL_ORIGEN As Decimal,  _
                    ByVal VALOR_EXPORTACION_MN As Decimal,  _
                    ByVal BASE_IMPONIBLE_GRAVADA_MN As Decimal,  _
                    ByVal importe_exonerado_MN As Decimal,  _
                    ByVal importe_inafecto_MN As Decimal,  _
                    ByVal ISC_MN As Decimal,  _
                    ByVal IGV_MN As Decimal,  _
                    ByVal IPM_MN As Decimal,  _
                    ByVal BASE_IMPONIBLE_GRAVADA2_MN As Decimal,  _
                    ByVal IGV2_MN As Decimal,  _
                    ByVal OTROS_TRIBUTOS_MN As Decimal,  _
                    ByVal IMPORTE_TOTAL_MN As Decimal,  _
                    ByVal VALOR_EXPORTACION_ME As Decimal,  _
                    ByVal BASE_IMPONIBLE_GRAVADA_ME As Decimal,  _
                    ByVal importe_exonerado_ME As Decimal,  _
                    ByVal importe_inafecto_ME As Decimal,  _
                    ByVal ISC_ME As Decimal,  _
                    ByVal IGV_ME As Decimal,  _
                    ByVal IPM_ME As Decimal,  _
                    ByVal BASE_IMPONIBLE_GRAVADA2_ME As Decimal,  _
                    ByVal IGV2_ME As Decimal,  _
                    ByVal OTROS_TRIBUTOS_ME As Decimal,  _
                    ByVal IMPORTE_TOTAL_ME As Decimal,  _
                    ByVal REFERENCIA_CUO As String,  _
                    ByVal CONDICION_PAGO As String,  _
                    ByVal FECHA_ULTIMO_PAGO As Date,  _
                    ByVal IMPORTE_SALDO As Decimal,  _
                    ByVal COMENTARIO As String,  _
                    ByVal TIPO_VENTA As String,  _
                    ByVal ZONA_COMERCIAL As String,  _
                    ByVal CODIGO_VENDEDOR As String,  _
                    ByVal CODIGO_COBRADOR As String,  _
                    ByVal CENTRO_COSTO As String,  _
                    ByVal LETRA As String,  _
                    ByVal FACTORING As String,  _
                    ByVal PLANILLA_COBRANZA As String,  _
                    ByVal GUIA_REMITENTE As String,  _
                    ByVal GUIA_TRANSPORTISTA As String,  _
                    ByVal ORDEN_PEDIDO As String,  _
                    ByVal USUARIO_ENVIO As String,  _
                    ByVal FECHA_ENVIO As Date,  _
                    ByVal FECHA_RECEPCION As Date,  _
                    ByVal INDICA_SUJETA_DETRACCION As String,  _
                    ByVal PORCENTAJE_DETRACCION As Decimal,  _
                    ByVal NUMERO_DETRACCION As String,  _
                    ByVal FECHA_DETRACCION As Date,  _
                    ByVal ORIGEN As String,  _
                    ByVal ESTADO As String,  _
                    ByVal UBICACION_CUSTODIA As String,  _
                    ByVal USUARIO_CUSTODIA As String,  _
                    ByVal FECHA_CUSTODIA As Date,  _
                    ByVal REFERENCIA_TIPO As String,  _
                    ByVal REFERENCIA_SERIE As String,  _
                    ByVal REFERENCIA_NUMERO As String,  _
                    ByVal REFERENCIA_FECHA As Date,  _
                    ByVal INDICA_EXPORTACION As String,  _
                    ByVal USUARIO_REGISTRO As String,  _
                    ByVal FECHA_REGISTRO As Date,  _
                    ByVal USUARIO_MODIFICA As String,  _
                    ByVal FECHA_MODIFICA As Date) As VENTASRow
            Dim rowVENTASRow As VENTASRow = CType(Me.NewRow,VENTASRow)
            Dim columnValuesArray() As Object = New Object() {EMPRESA, VENTA, EJERCICIO, MES, ASIENTO_TIPO, ASIENTO_NUMERO, ASIENTO_FECHA, CUENTA_COMERCIAL, COMPROBANTE_TIPO, COMPROBANTE_SERIE, COMPROBANTE_NUMERO, COMPROBANTE_FECHA, COMPROBANTE_VENCIMIENTO, TIPO_CAMBIO, TIPO_MONEDA, ALMACEN, LISTA_PRECIO, CENTRO_DISTRIBUCION, CODIGO_DOMICILIO, VALOR_EXPORTACION_ORIGEN, BASE_IMPONIBLE_GRAVADA_ORIGEN, importe_exonerado_ORIGEN, importe_inafecto_ORIGEN, ISC_ORIGEN, IGV_ORIGEN, IPM_ORIGEN, BASE_IMPONIBLE_GRAVADA2_ORIGEN, IGV2_ORIGEN, OTROS_TRIBUTOS_ORIGEN, IMPORTE_TOTAL_ORIGEN, VALOR_EXPORTACION_MN, BASE_IMPONIBLE_GRAVADA_MN, importe_exonerado_MN, importe_inafecto_MN, ISC_MN, IGV_MN, IPM_MN, BASE_IMPONIBLE_GRAVADA2_MN, IGV2_MN, OTROS_TRIBUTOS_MN, IMPORTE_TOTAL_MN, VALOR_EXPORTACION_ME, BASE_IMPONIBLE_GRAVADA_ME, importe_exonerado_ME, importe_inafecto_ME, ISC_ME, IGV_ME, IPM_ME, BASE_IMPONIBLE_GRAVADA2_ME, IGV2_ME, OTROS_TRIBUTOS_ME, IMPORTE_TOTAL_ME, REFERENCIA_CUO, CONDICION_PAGO, FECHA_ULTIMO_PAGO, IMPORTE_SALDO, COMENTARIO, TIPO_VENTA, ZONA_COMERCIAL, CODIGO_VENDEDOR, CODIGO_COBRADOR, CENTRO_COSTO, LETRA, FACTORING, PLANILLA_COBRANZA, GUIA_REMITENTE, GUIA_TRANSPORTISTA, ORDEN_PEDIDO, USUARIO_ENVIO, FECHA_ENVIO, FECHA_RECEPCION, INDICA_SUJETA_DETRACCION, PORCENTAJE_DETRACCION, NUMERO_DETRACCION, FECHA_DETRACCION, ORIGEN, ESTADO, UBICACION_CUSTODIA, USUARIO_CUSTODIA, FECHA_CUSTODIA, REFERENCIA_TIPO, REFERENCIA_SERIE, REFERENCIA_NUMERO, REFERENCIA_FECHA, INDICA_EXPORTACION, USUARIO_REGISTRO, FECHA_REGISTRO, USUARIO_MODIFICA, FECHA_MODIFICA}
            rowVENTASRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowVENTASRow)
            Return rowVENTASRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function FindByEMPRESAVENTA(ByVal EMPRESA As String, ByVal VENTA As String) As VENTASRow
            Return CType(Me.Rows.Find(New Object() {EMPRESA, VENTA}),VENTASRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As VENTASDataTable = CType(MyBase.Clone,VENTASDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New VENTASDataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub InitVars()
            Me.columnEMPRESA = MyBase.Columns("EMPRESA")
            Me.columnVENTA = MyBase.Columns("VENTA")
            Me.columnEJERCICIO = MyBase.Columns("EJERCICIO")
            Me.columnMES = MyBase.Columns("MES")
            Me.columnASIENTO_TIPO = MyBase.Columns("ASIENTO_TIPO")
            Me.columnASIENTO_NUMERO = MyBase.Columns("ASIENTO_NUMERO")
            Me.columnASIENTO_FECHA = MyBase.Columns("ASIENTO_FECHA")
            Me.columnCUENTA_COMERCIAL = MyBase.Columns("CUENTA_COMERCIAL")
            Me.columnCOMPROBANTE_TIPO = MyBase.Columns("COMPROBANTE_TIPO")
            Me.columnCOMPROBANTE_SERIE = MyBase.Columns("COMPROBANTE_SERIE")
            Me.columnCOMPROBANTE_NUMERO = MyBase.Columns("COMPROBANTE_NUMERO")
            Me.columnCOMPROBANTE_FECHA = MyBase.Columns("COMPROBANTE_FECHA")
            Me.columnCOMPROBANTE_VENCIMIENTO = MyBase.Columns("COMPROBANTE_VENCIMIENTO")
            Me.columnTIPO_CAMBIO = MyBase.Columns("TIPO_CAMBIO")
            Me.columnTIPO_MONEDA = MyBase.Columns("TIPO_MONEDA")
            Me.columnALMACEN = MyBase.Columns("ALMACEN")
            Me.columnLISTA_PRECIO = MyBase.Columns("LISTA_PRECIO")
            Me.columnCENTRO_DISTRIBUCION = MyBase.Columns("CENTRO_DISTRIBUCION")
            Me.columnCODIGO_DOMICILIO = MyBase.Columns("CODIGO_DOMICILIO")
            Me.columnVALOR_EXPORTACION_ORIGEN = MyBase.Columns("VALOR_EXPORTACION_ORIGEN")
            Me.columnBASE_IMPONIBLE_GRAVADA_ORIGEN = MyBase.Columns("BASE_IMPONIBLE_GRAVADA_ORIGEN")
            Me.columnimporte_exonerado_ORIGEN = MyBase.Columns("IMPORTE_EXONERADO_ORIGEN")
            Me.columnimporte_inafecto_ORIGEN = MyBase.Columns("IMPORTE_INAFECTO_ORIGEN")
            Me.columnISC_ORIGEN = MyBase.Columns("ISC_ORIGEN")
            Me.columnIGV_ORIGEN = MyBase.Columns("IGV_ORIGEN")
            Me.columnIPM_ORIGEN = MyBase.Columns("IPM_ORIGEN")
            Me.columnBASE_IMPONIBLE_GRAVADA2_ORIGEN = MyBase.Columns("BASE_IMPONIBLE_GRAVADA2_ORIGEN")
            Me.columnIGV2_ORIGEN = MyBase.Columns("IGV2_ORIGEN")
            Me.columnOTROS_TRIBUTOS_ORIGEN = MyBase.Columns("OTROS_TRIBUTOS_ORIGEN")
            Me.columnIMPORTE_TOTAL_ORIGEN = MyBase.Columns("IMPORTE_TOTAL_ORIGEN")
            Me.columnVALOR_EXPORTACION_MN = MyBase.Columns("VALOR_EXPORTACION_MN")
            Me.columnBASE_IMPONIBLE_GRAVADA_MN = MyBase.Columns("BASE_IMPONIBLE_GRAVADA_MN")
            Me.columnimporte_exonerado_MN = MyBase.Columns("IMPORTE_EXONERADO_MN")
            Me.columnimporte_inafecto_MN = MyBase.Columns("IMPORTE_INAFECTO_MN")
            Me.columnISC_MN = MyBase.Columns("ISC_MN")
            Me.columnIGV_MN = MyBase.Columns("IGV_MN")
            Me.columnIPM_MN = MyBase.Columns("IPM_MN")
            Me.columnBASE_IMPONIBLE_GRAVADA2_MN = MyBase.Columns("BASE_IMPONIBLE_GRAVADA2_MN")
            Me.columnIGV2_MN = MyBase.Columns("IGV2_MN")
            Me.columnOTROS_TRIBUTOS_MN = MyBase.Columns("OTROS_TRIBUTOS_MN")
            Me.columnIMPORTE_TOTAL_MN = MyBase.Columns("IMPORTE_TOTAL_MN")
            Me.columnVALOR_EXPORTACION_ME = MyBase.Columns("VALOR_EXPORTACION_ME")
            Me.columnBASE_IMPONIBLE_GRAVADA_ME = MyBase.Columns("BASE_IMPONIBLE_GRAVADA_ME")
            Me.columnimporte_exonerado_ME = MyBase.Columns("IMPORTE_EXONERADO_ME")
            Me.columnimporte_inafecto_ME = MyBase.Columns("IMPORTE_INAFECTO_ME")
            Me.columnISC_ME = MyBase.Columns("ISC_ME")
            Me.columnIGV_ME = MyBase.Columns("IGV_ME")
            Me.columnIPM_ME = MyBase.Columns("IPM_ME")
            Me.columnBASE_IMPONIBLE_GRAVADA2_ME = MyBase.Columns("BASE_IMPONIBLE_GRAVADA2_ME")
            Me.columnIGV2_ME = MyBase.Columns("IGV2_ME")
            Me.columnOTROS_TRIBUTOS_ME = MyBase.Columns("OTROS_TRIBUTOS_ME")
            Me.columnIMPORTE_TOTAL_ME = MyBase.Columns("IMPORTE_TOTAL_ME")
            Me.columnREFERENCIA_CUO = MyBase.Columns("REFERENCIA_CUO")
            Me.columnCONDICION_PAGO = MyBase.Columns("CONDICION_PAGO")
            Me.columnFECHA_ULTIMO_PAGO = MyBase.Columns("FECHA_ULTIMO_PAGO")
            Me.columnIMPORTE_SALDO = MyBase.Columns("IMPORTE_SALDO")
            Me.columnCOMENTARIO = MyBase.Columns("COMENTARIO")
            Me.columnTIPO_VENTA = MyBase.Columns("TIPO_VENTA")
            Me.columnZONA_COMERCIAL = MyBase.Columns("ZONA_COMERCIAL")
            Me.columnCODIGO_VENDEDOR = MyBase.Columns("CODIGO_VENDEDOR")
            Me.columnCODIGO_COBRADOR = MyBase.Columns("CODIGO_COBRADOR")
            Me.columnCENTRO_COSTO = MyBase.Columns("CENTRO_COSTO")
            Me.columnLETRA = MyBase.Columns("LETRA")
            Me.columnFACTORING = MyBase.Columns("FACTORING")
            Me.columnPLANILLA_COBRANZA = MyBase.Columns("PLANILLA_COBRANZA")
            Me.columnGUIA_REMITENTE = MyBase.Columns("GUIA_REMITENTE")
            Me.columnGUIA_TRANSPORTISTA = MyBase.Columns("GUIA_TRANSPORTISTA")
            Me.columnORDEN_PEDIDO = MyBase.Columns("ORDEN_PEDIDO")
            Me.columnUSUARIO_ENVIO = MyBase.Columns("USUARIO_ENVIO")
            Me.columnFECHA_ENVIO = MyBase.Columns("FECHA_ENVIO")
            Me.columnFECHA_RECEPCION = MyBase.Columns("FECHA_RECEPCION")
            Me.columnINDICA_SUJETA_DETRACCION = MyBase.Columns("INDICA_SUJETA_DETRACCION")
            Me.columnPORCENTAJE_DETRACCION = MyBase.Columns("PORCENTAJE_DETRACCION")
            Me.columnNUMERO_DETRACCION = MyBase.Columns("NUMERO_DETRACCION")
            Me.columnFECHA_DETRACCION = MyBase.Columns("FECHA_DETRACCION")
            Me.columnORIGEN = MyBase.Columns("ORIGEN")
            Me.columnESTADO = MyBase.Columns("ESTADO")
            Me.columnUBICACION_CUSTODIA = MyBase.Columns("UBICACION_CUSTODIA")
            Me.columnUSUARIO_CUSTODIA = MyBase.Columns("USUARIO_CUSTODIA")
            Me.columnFECHA_CUSTODIA = MyBase.Columns("FECHA_CUSTODIA")
            Me.columnREFERENCIA_TIPO = MyBase.Columns("REFERENCIA_TIPO")
            Me.columnREFERENCIA_SERIE = MyBase.Columns("REFERENCIA_SERIE")
            Me.columnREFERENCIA_NUMERO = MyBase.Columns("REFERENCIA_NUMERO")
            Me.columnREFERENCIA_FECHA = MyBase.Columns("REFERENCIA_FECHA")
            Me.columnINDICA_EXPORTACION = MyBase.Columns("INDICA_EXPORTACION")
            Me.columnUSUARIO_REGISTRO = MyBase.Columns("USUARIO_REGISTRO")
            Me.columnFECHA_REGISTRO = MyBase.Columns("FECHA_REGISTRO")
            Me.columnUSUARIO_MODIFICA = MyBase.Columns("USUARIO_MODIFICA")
            Me.columnFECHA_MODIFICA = MyBase.Columns("FECHA_MODIFICA")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitClass()
            Me.columnEMPRESA = New Global.System.Data.DataColumn("EMPRESA", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnEMPRESA)
            Me.columnVENTA = New Global.System.Data.DataColumn("VENTA", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnVENTA)
            Me.columnEJERCICIO = New Global.System.Data.DataColumn("EJERCICIO", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnEJERCICIO)
            Me.columnMES = New Global.System.Data.DataColumn("MES", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMES)
            Me.columnASIENTO_TIPO = New Global.System.Data.DataColumn("ASIENTO_TIPO", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnASIENTO_TIPO)
            Me.columnASIENTO_NUMERO = New Global.System.Data.DataColumn("ASIENTO_NUMERO", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnASIENTO_NUMERO)
            Me.columnASIENTO_FECHA = New Global.System.Data.DataColumn("ASIENTO_FECHA", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnASIENTO_FECHA)
            Me.columnCUENTA_COMERCIAL = New Global.System.Data.DataColumn("CUENTA_COMERCIAL", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCUENTA_COMERCIAL)
            Me.columnCOMPROBANTE_TIPO = New Global.System.Data.DataColumn("COMPROBANTE_TIPO", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCOMPROBANTE_TIPO)
            Me.columnCOMPROBANTE_SERIE = New Global.System.Data.DataColumn("COMPROBANTE_SERIE", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCOMPROBANTE_SERIE)
            Me.columnCOMPROBANTE_NUMERO = New Global.System.Data.DataColumn("COMPROBANTE_NUMERO", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCOMPROBANTE_NUMERO)
            Me.columnCOMPROBANTE_FECHA = New Global.System.Data.DataColumn("COMPROBANTE_FECHA", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCOMPROBANTE_FECHA)
            Me.columnCOMPROBANTE_VENCIMIENTO = New Global.System.Data.DataColumn("COMPROBANTE_VENCIMIENTO", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCOMPROBANTE_VENCIMIENTO)
            Me.columnTIPO_CAMBIO = New Global.System.Data.DataColumn("TIPO_CAMBIO", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTIPO_CAMBIO)
            Me.columnTIPO_MONEDA = New Global.System.Data.DataColumn("TIPO_MONEDA", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTIPO_MONEDA)
            Me.columnALMACEN = New Global.System.Data.DataColumn("ALMACEN", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnALMACEN)
            Me.columnLISTA_PRECIO = New Global.System.Data.DataColumn("LISTA_PRECIO", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnLISTA_PRECIO)
            Me.columnCENTRO_DISTRIBUCION = New Global.System.Data.DataColumn("CENTRO_DISTRIBUCION", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCENTRO_DISTRIBUCION)
            Me.columnCODIGO_DOMICILIO = New Global.System.Data.DataColumn("CODIGO_DOMICILIO", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCODIGO_DOMICILIO)
            Me.columnVALOR_EXPORTACION_ORIGEN = New Global.System.Data.DataColumn("VALOR_EXPORTACION_ORIGEN", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnVALOR_EXPORTACION_ORIGEN)
            Me.columnBASE_IMPONIBLE_GRAVADA_ORIGEN = New Global.System.Data.DataColumn("BASE_IMPONIBLE_GRAVADA_ORIGEN", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnBASE_IMPONIBLE_GRAVADA_ORIGEN)
            Me.columnimporte_exonerado_ORIGEN = New Global.System.Data.DataColumn("IMPORTE_EXONERADO_ORIGEN", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            Me.columnimporte_exonerado_ORIGEN.ExtendedProperties.Add("Generator_ColumnPropNameInRow", "importe_exonerado_ORIGEN")
            Me.columnimporte_exonerado_ORIGEN.ExtendedProperties.Add("Generator_ColumnPropNameInTable", "importe_exonerado_ORIGENColumn")
            Me.columnimporte_exonerado_ORIGEN.ExtendedProperties.Add("Generator_ColumnVarNameInTable", "columnimporte_exonerado_ORIGEN")
            Me.columnimporte_exonerado_ORIGEN.ExtendedProperties.Add("Generator_UserColumnName", "IMPORTE_EXONERADO_ORIGEN")
            MyBase.Columns.Add(Me.columnimporte_exonerado_ORIGEN)
            Me.columnimporte_inafecto_ORIGEN = New Global.System.Data.DataColumn("IMPORTE_INAFECTO_ORIGEN", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            Me.columnimporte_inafecto_ORIGEN.ExtendedProperties.Add("Generator_ColumnPropNameInRow", "importe_inafecto_ORIGEN")
            Me.columnimporte_inafecto_ORIGEN.ExtendedProperties.Add("Generator_ColumnPropNameInTable", "importe_inafecto_ORIGENColumn")
            Me.columnimporte_inafecto_ORIGEN.ExtendedProperties.Add("Generator_ColumnVarNameInTable", "columnimporte_inafecto_ORIGEN")
            Me.columnimporte_inafecto_ORIGEN.ExtendedProperties.Add("Generator_UserColumnName", "IMPORTE_INAFECTO_ORIGEN")
            MyBase.Columns.Add(Me.columnimporte_inafecto_ORIGEN)
            Me.columnISC_ORIGEN = New Global.System.Data.DataColumn("ISC_ORIGEN", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnISC_ORIGEN)
            Me.columnIGV_ORIGEN = New Global.System.Data.DataColumn("IGV_ORIGEN", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnIGV_ORIGEN)
            Me.columnIPM_ORIGEN = New Global.System.Data.DataColumn("IPM_ORIGEN", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnIPM_ORIGEN)
            Me.columnBASE_IMPONIBLE_GRAVADA2_ORIGEN = New Global.System.Data.DataColumn("BASE_IMPONIBLE_GRAVADA2_ORIGEN", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnBASE_IMPONIBLE_GRAVADA2_ORIGEN)
            Me.columnIGV2_ORIGEN = New Global.System.Data.DataColumn("IGV2_ORIGEN", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnIGV2_ORIGEN)
            Me.columnOTROS_TRIBUTOS_ORIGEN = New Global.System.Data.DataColumn("OTROS_TRIBUTOS_ORIGEN", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnOTROS_TRIBUTOS_ORIGEN)
            Me.columnIMPORTE_TOTAL_ORIGEN = New Global.System.Data.DataColumn("IMPORTE_TOTAL_ORIGEN", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnIMPORTE_TOTAL_ORIGEN)
            Me.columnVALOR_EXPORTACION_MN = New Global.System.Data.DataColumn("VALOR_EXPORTACION_MN", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnVALOR_EXPORTACION_MN)
            Me.columnBASE_IMPONIBLE_GRAVADA_MN = New Global.System.Data.DataColumn("BASE_IMPONIBLE_GRAVADA_MN", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnBASE_IMPONIBLE_GRAVADA_MN)
            Me.columnimporte_exonerado_MN = New Global.System.Data.DataColumn("IMPORTE_EXONERADO_MN", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            Me.columnimporte_exonerado_MN.ExtendedProperties.Add("Generator_ColumnPropNameInRow", "importe_exonerado_MN")
            Me.columnimporte_exonerado_MN.ExtendedProperties.Add("Generator_ColumnPropNameInTable", "importe_exonerado_MNColumn")
            Me.columnimporte_exonerado_MN.ExtendedProperties.Add("Generator_ColumnVarNameInTable", "columnimporte_exonerado_MN")
            Me.columnimporte_exonerado_MN.ExtendedProperties.Add("Generator_UserColumnName", "IMPORTE_EXONERADO_MN")
            MyBase.Columns.Add(Me.columnimporte_exonerado_MN)
            Me.columnimporte_inafecto_MN = New Global.System.Data.DataColumn("IMPORTE_INAFECTO_MN", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            Me.columnimporte_inafecto_MN.ExtendedProperties.Add("Generator_ColumnPropNameInRow", "importe_inafecto_MN")
            Me.columnimporte_inafecto_MN.ExtendedProperties.Add("Generator_ColumnPropNameInTable", "importe_inafecto_MNColumn")
            Me.columnimporte_inafecto_MN.ExtendedProperties.Add("Generator_ColumnVarNameInTable", "columnimporte_inafecto_MN")
            Me.columnimporte_inafecto_MN.ExtendedProperties.Add("Generator_UserColumnName", "IMPORTE_INAFECTO_MN")
            MyBase.Columns.Add(Me.columnimporte_inafecto_MN)
            Me.columnISC_MN = New Global.System.Data.DataColumn("ISC_MN", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnISC_MN)
            Me.columnIGV_MN = New Global.System.Data.DataColumn("IGV_MN", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnIGV_MN)
            Me.columnIPM_MN = New Global.System.Data.DataColumn("IPM_MN", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnIPM_MN)
            Me.columnBASE_IMPONIBLE_GRAVADA2_MN = New Global.System.Data.DataColumn("BASE_IMPONIBLE_GRAVADA2_MN", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnBASE_IMPONIBLE_GRAVADA2_MN)
            Me.columnIGV2_MN = New Global.System.Data.DataColumn("IGV2_MN", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnIGV2_MN)
            Me.columnOTROS_TRIBUTOS_MN = New Global.System.Data.DataColumn("OTROS_TRIBUTOS_MN", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnOTROS_TRIBUTOS_MN)
            Me.columnIMPORTE_TOTAL_MN = New Global.System.Data.DataColumn("IMPORTE_TOTAL_MN", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnIMPORTE_TOTAL_MN)
            Me.columnVALOR_EXPORTACION_ME = New Global.System.Data.DataColumn("VALOR_EXPORTACION_ME", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnVALOR_EXPORTACION_ME)
            Me.columnBASE_IMPONIBLE_GRAVADA_ME = New Global.System.Data.DataColumn("BASE_IMPONIBLE_GRAVADA_ME", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnBASE_IMPONIBLE_GRAVADA_ME)
            Me.columnimporte_exonerado_ME = New Global.System.Data.DataColumn("IMPORTE_EXONERADO_ME", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            Me.columnimporte_exonerado_ME.ExtendedProperties.Add("Generator_ColumnPropNameInRow", "importe_exonerado_ME")
            Me.columnimporte_exonerado_ME.ExtendedProperties.Add("Generator_ColumnPropNameInTable", "importe_exonerado_MEColumn")
            Me.columnimporte_exonerado_ME.ExtendedProperties.Add("Generator_ColumnVarNameInTable", "columnimporte_exonerado_ME")
            Me.columnimporte_exonerado_ME.ExtendedProperties.Add("Generator_UserColumnName", "IMPORTE_EXONERADO_ME")
            MyBase.Columns.Add(Me.columnimporte_exonerado_ME)
            Me.columnimporte_inafecto_ME = New Global.System.Data.DataColumn("IMPORTE_INAFECTO_ME", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            Me.columnimporte_inafecto_ME.ExtendedProperties.Add("Generator_ColumnPropNameInRow", "importe_inafecto_ME")
            Me.columnimporte_inafecto_ME.ExtendedProperties.Add("Generator_ColumnPropNameInTable", "importe_inafecto_MEColumn")
            Me.columnimporte_inafecto_ME.ExtendedProperties.Add("Generator_ColumnVarNameInTable", "columnimporte_inafecto_ME")
            Me.columnimporte_inafecto_ME.ExtendedProperties.Add("Generator_UserColumnName", "IMPORTE_INAFECTO_ME")
            MyBase.Columns.Add(Me.columnimporte_inafecto_ME)
            Me.columnISC_ME = New Global.System.Data.DataColumn("ISC_ME", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnISC_ME)
            Me.columnIGV_ME = New Global.System.Data.DataColumn("IGV_ME", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnIGV_ME)
            Me.columnIPM_ME = New Global.System.Data.DataColumn("IPM_ME", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnIPM_ME)
            Me.columnBASE_IMPONIBLE_GRAVADA2_ME = New Global.System.Data.DataColumn("BASE_IMPONIBLE_GRAVADA2_ME", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnBASE_IMPONIBLE_GRAVADA2_ME)
            Me.columnIGV2_ME = New Global.System.Data.DataColumn("IGV2_ME", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnIGV2_ME)
            Me.columnOTROS_TRIBUTOS_ME = New Global.System.Data.DataColumn("OTROS_TRIBUTOS_ME", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnOTROS_TRIBUTOS_ME)
            Me.columnIMPORTE_TOTAL_ME = New Global.System.Data.DataColumn("IMPORTE_TOTAL_ME", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnIMPORTE_TOTAL_ME)
            Me.columnREFERENCIA_CUO = New Global.System.Data.DataColumn("REFERENCIA_CUO", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnREFERENCIA_CUO)
            Me.columnCONDICION_PAGO = New Global.System.Data.DataColumn("CONDICION_PAGO", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCONDICION_PAGO)
            Me.columnFECHA_ULTIMO_PAGO = New Global.System.Data.DataColumn("FECHA_ULTIMO_PAGO", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFECHA_ULTIMO_PAGO)
            Me.columnIMPORTE_SALDO = New Global.System.Data.DataColumn("IMPORTE_SALDO", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnIMPORTE_SALDO)
            Me.columnCOMENTARIO = New Global.System.Data.DataColumn("COMENTARIO", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCOMENTARIO)
            Me.columnTIPO_VENTA = New Global.System.Data.DataColumn("TIPO_VENTA", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTIPO_VENTA)
            Me.columnZONA_COMERCIAL = New Global.System.Data.DataColumn("ZONA_COMERCIAL", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnZONA_COMERCIAL)
            Me.columnCODIGO_VENDEDOR = New Global.System.Data.DataColumn("CODIGO_VENDEDOR", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCODIGO_VENDEDOR)
            Me.columnCODIGO_COBRADOR = New Global.System.Data.DataColumn("CODIGO_COBRADOR", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCODIGO_COBRADOR)
            Me.columnCENTRO_COSTO = New Global.System.Data.DataColumn("CENTRO_COSTO", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCENTRO_COSTO)
            Me.columnLETRA = New Global.System.Data.DataColumn("LETRA", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnLETRA)
            Me.columnFACTORING = New Global.System.Data.DataColumn("FACTORING", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFACTORING)
            Me.columnPLANILLA_COBRANZA = New Global.System.Data.DataColumn("PLANILLA_COBRANZA", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPLANILLA_COBRANZA)
            Me.columnGUIA_REMITENTE = New Global.System.Data.DataColumn("GUIA_REMITENTE", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnGUIA_REMITENTE)
            Me.columnGUIA_TRANSPORTISTA = New Global.System.Data.DataColumn("GUIA_TRANSPORTISTA", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnGUIA_TRANSPORTISTA)
            Me.columnORDEN_PEDIDO = New Global.System.Data.DataColumn("ORDEN_PEDIDO", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnORDEN_PEDIDO)
            Me.columnUSUARIO_ENVIO = New Global.System.Data.DataColumn("USUARIO_ENVIO", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnUSUARIO_ENVIO)
            Me.columnFECHA_ENVIO = New Global.System.Data.DataColumn("FECHA_ENVIO", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFECHA_ENVIO)
            Me.columnFECHA_RECEPCION = New Global.System.Data.DataColumn("FECHA_RECEPCION", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFECHA_RECEPCION)
            Me.columnINDICA_SUJETA_DETRACCION = New Global.System.Data.DataColumn("INDICA_SUJETA_DETRACCION", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnINDICA_SUJETA_DETRACCION)
            Me.columnPORCENTAJE_DETRACCION = New Global.System.Data.DataColumn("PORCENTAJE_DETRACCION", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPORCENTAJE_DETRACCION)
            Me.columnNUMERO_DETRACCION = New Global.System.Data.DataColumn("NUMERO_DETRACCION", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnNUMERO_DETRACCION)
            Me.columnFECHA_DETRACCION = New Global.System.Data.DataColumn("FECHA_DETRACCION", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFECHA_DETRACCION)
            Me.columnORIGEN = New Global.System.Data.DataColumn("ORIGEN", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnORIGEN)
            Me.columnESTADO = New Global.System.Data.DataColumn("ESTADO", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnESTADO)
            Me.columnUBICACION_CUSTODIA = New Global.System.Data.DataColumn("UBICACION_CUSTODIA", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnUBICACION_CUSTODIA)
            Me.columnUSUARIO_CUSTODIA = New Global.System.Data.DataColumn("USUARIO_CUSTODIA", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnUSUARIO_CUSTODIA)
            Me.columnFECHA_CUSTODIA = New Global.System.Data.DataColumn("FECHA_CUSTODIA", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFECHA_CUSTODIA)
            Me.columnREFERENCIA_TIPO = New Global.System.Data.DataColumn("REFERENCIA_TIPO", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnREFERENCIA_TIPO)
            Me.columnREFERENCIA_SERIE = New Global.System.Data.DataColumn("REFERENCIA_SERIE", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnREFERENCIA_SERIE)
            Me.columnREFERENCIA_NUMERO = New Global.System.Data.DataColumn("REFERENCIA_NUMERO", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnREFERENCIA_NUMERO)
            Me.columnREFERENCIA_FECHA = New Global.System.Data.DataColumn("REFERENCIA_FECHA", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnREFERENCIA_FECHA)
            Me.columnINDICA_EXPORTACION = New Global.System.Data.DataColumn("INDICA_EXPORTACION", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnINDICA_EXPORTACION)
            Me.columnUSUARIO_REGISTRO = New Global.System.Data.DataColumn("USUARIO_REGISTRO", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnUSUARIO_REGISTRO)
            Me.columnFECHA_REGISTRO = New Global.System.Data.DataColumn("FECHA_REGISTRO", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFECHA_REGISTRO)
            Me.columnUSUARIO_MODIFICA = New Global.System.Data.DataColumn("USUARIO_MODIFICA", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnUSUARIO_MODIFICA)
            Me.columnFECHA_MODIFICA = New Global.System.Data.DataColumn("FECHA_MODIFICA", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFECHA_MODIFICA)
            Me.Constraints.Add(New Global.System.Data.UniqueConstraint("Constraint1", New Global.System.Data.DataColumn() {Me.columnEMPRESA, Me.columnVENTA}, true))
            Me.columnEMPRESA.AllowDBNull = false
            Me.columnEMPRESA.MaxLength = 3
            Me.columnVENTA.AllowDBNull = false
            Me.columnVENTA.MaxLength = 12
            Me.columnEJERCICIO.AllowDBNull = false
            Me.columnEJERCICIO.MaxLength = 4
            Me.columnMES.AllowDBNull = false
            Me.columnMES.MaxLength = 2
            Me.columnASIENTO_TIPO.AllowDBNull = false
            Me.columnASIENTO_TIPO.MaxLength = 2
            Me.columnASIENTO_NUMERO.AllowDBNull = false
            Me.columnASIENTO_NUMERO.MaxLength = 5
            Me.columnASIENTO_FECHA.AllowDBNull = false
            Me.columnCUENTA_COMERCIAL.AllowDBNull = false
            Me.columnCUENTA_COMERCIAL.MaxLength = 18
            Me.columnCOMPROBANTE_TIPO.AllowDBNull = false
            Me.columnCOMPROBANTE_TIPO.MaxLength = 2
            Me.columnCOMPROBANTE_SERIE.AllowDBNull = false
            Me.columnCOMPROBANTE_SERIE.MaxLength = 4
            Me.columnCOMPROBANTE_NUMERO.AllowDBNull = false
            Me.columnCOMPROBANTE_NUMERO.MaxLength = 10
            Me.columnCOMPROBANTE_FECHA.AllowDBNull = false
            Me.columnCOMPROBANTE_VENCIMIENTO.AllowDBNull = false
            Me.columnTIPO_CAMBIO.AllowDBNull = false
            Me.columnTIPO_MONEDA.AllowDBNull = false
            Me.columnTIPO_MONEDA.MaxLength = 1
            Me.columnALMACEN.AllowDBNull = false
            Me.columnALMACEN.MaxLength = 3
            Me.columnCODIGO_DOMICILIO.AllowDBNull = false
            Me.columnCODIGO_DOMICILIO.MaxLength = 2
            Me.columnVALOR_EXPORTACION_ORIGEN.AllowDBNull = false
            Me.columnBASE_IMPONIBLE_GRAVADA_ORIGEN.AllowDBNull = false
            Me.columnimporte_exonerado_ORIGEN.AllowDBNull = false
            Me.columnimporte_inafecto_ORIGEN.AllowDBNull = false
            Me.columnISC_ORIGEN.AllowDBNull = false
            Me.columnIGV_ORIGEN.AllowDBNull = false
            Me.columnIPM_ORIGEN.AllowDBNull = false
            Me.columnBASE_IMPONIBLE_GRAVADA2_ORIGEN.AllowDBNull = false
            Me.columnIGV2_ORIGEN.AllowDBNull = false
            Me.columnOTROS_TRIBUTOS_ORIGEN.AllowDBNull = false
            Me.columnIMPORTE_TOTAL_ORIGEN.AllowDBNull = false
            Me.columnVALOR_EXPORTACION_MN.AllowDBNull = false
            Me.columnBASE_IMPONIBLE_GRAVADA_MN.AllowDBNull = false
            Me.columnimporte_exonerado_MN.AllowDBNull = false
            Me.columnimporte_inafecto_MN.AllowDBNull = false
            Me.columnISC_MN.AllowDBNull = false
            Me.columnIGV_MN.AllowDBNull = false
            Me.columnIPM_MN.AllowDBNull = false
            Me.columnBASE_IMPONIBLE_GRAVADA2_MN.AllowDBNull = false
            Me.columnIGV2_MN.AllowDBNull = false
            Me.columnOTROS_TRIBUTOS_MN.AllowDBNull = false
            Me.columnIMPORTE_TOTAL_MN.AllowDBNull = false
            Me.columnVALOR_EXPORTACION_ME.AllowDBNull = false
            Me.columnBASE_IMPONIBLE_GRAVADA_ME.AllowDBNull = false
            Me.columnimporte_exonerado_ME.AllowDBNull = false
            Me.columnimporte_inafecto_ME.AllowDBNull = false
            Me.columnISC_ME.AllowDBNull = false
            Me.columnIGV_ME.AllowDBNull = false
            Me.columnIPM_ME.AllowDBNull = false
            Me.columnBASE_IMPONIBLE_GRAVADA2_ME.AllowDBNull = false
            Me.columnIGV2_ME.AllowDBNull = false
            Me.columnOTROS_TRIBUTOS_ME.AllowDBNull = false
            Me.columnIMPORTE_TOTAL_ME.AllowDBNull = false
            Me.columnREFERENCIA_CUO.AllowDBNull = false
            Me.columnREFERENCIA_CUO.MaxLength = 12
            Me.columnCONDICION_PAGO.AllowDBNull = false
            Me.columnCONDICION_PAGO.MaxLength = 20
            Me.columnIMPORTE_SALDO.AllowDBNull = false
            Me.columnCOMENTARIO.AllowDBNull = false
            Me.columnCOMENTARIO.MaxLength = 250
            Me.columnTIPO_VENTA.AllowDBNull = false
            Me.columnTIPO_VENTA.MaxLength = 20
            Me.columnZONA_COMERCIAL.AllowDBNull = false
            Me.columnZONA_COMERCIAL.MaxLength = 20
            Me.columnCODIGO_VENDEDOR.AllowDBNull = false
            Me.columnCODIGO_VENDEDOR.MaxLength = 75
            Me.columnCODIGO_COBRADOR.AllowDBNull = false
            Me.columnCODIGO_COBRADOR.MaxLength = 75
            Me.columnCENTRO_COSTO.AllowDBNull = false
            Me.columnCENTRO_COSTO.MaxLength = 20
            Me.columnLETRA.AllowDBNull = false
            Me.columnLETRA.MaxLength = 12
            Me.columnFACTORING.AllowDBNull = false
            Me.columnFACTORING.MaxLength = 12
            Me.columnPLANILLA_COBRANZA.AllowDBNull = false
            Me.columnPLANILLA_COBRANZA.MaxLength = 12
            Me.columnGUIA_REMITENTE.AllowDBNull = false
            Me.columnGUIA_REMITENTE.MaxLength = 12
            Me.columnGUIA_TRANSPORTISTA.AllowDBNull = false
            Me.columnGUIA_TRANSPORTISTA.MaxLength = 12
            Me.columnORDEN_PEDIDO.AllowDBNull = false
            Me.columnORDEN_PEDIDO.MaxLength = 12
            Me.columnUSUARIO_ENVIO.AllowDBNull = false
            Me.columnUSUARIO_ENVIO.MaxLength = 12
            Me.columnINDICA_SUJETA_DETRACCION.AllowDBNull = false
            Me.columnINDICA_SUJETA_DETRACCION.MaxLength = 2
            Me.columnPORCENTAJE_DETRACCION.AllowDBNull = false
            Me.columnNUMERO_DETRACCION.AllowDBNull = false
            Me.columnNUMERO_DETRACCION.MaxLength = 10
            Me.columnORIGEN.AllowDBNull = false
            Me.columnORIGEN.MaxLength = 3
            Me.columnESTADO.AllowDBNull = false
            Me.columnESTADO.MaxLength = 1
            Me.columnUBICACION_CUSTODIA.AllowDBNull = false
            Me.columnUBICACION_CUSTODIA.MaxLength = 20
            Me.columnUSUARIO_CUSTODIA.AllowDBNull = false
            Me.columnUSUARIO_CUSTODIA.MaxLength = 12
            Me.columnREFERENCIA_TIPO.AllowDBNull = false
            Me.columnREFERENCIA_TIPO.MaxLength = 2
            Me.columnREFERENCIA_SERIE.AllowDBNull = false
            Me.columnREFERENCIA_SERIE.MaxLength = 4
            Me.columnREFERENCIA_NUMERO.AllowDBNull = false
            Me.columnREFERENCIA_NUMERO.MaxLength = 10
            Me.columnINDICA_EXPORTACION.AllowDBNull = false
            Me.columnINDICA_EXPORTACION.MaxLength = 2
            Me.columnUSUARIO_REGISTRO.AllowDBNull = false
            Me.columnUSUARIO_REGISTRO.MaxLength = 20
            Me.columnFECHA_REGISTRO.AllowDBNull = false
            Me.columnUSUARIO_MODIFICA.AllowDBNull = false
            Me.columnUSUARIO_MODIFICA.MaxLength = 20
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function NewVENTASRow() As VENTASRow
            Return CType(Me.NewRow,VENTASRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New VENTASRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(VENTASRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.VENTASRowChangedEvent) Is Nothing) Then
                RaiseEvent VENTASRowChanged(Me, New VENTASRowChangeEvent(CType(e.Row,VENTASRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.VENTASRowChangingEvent) Is Nothing) Then
                RaiseEvent VENTASRowChanging(Me, New VENTASRowChangeEvent(CType(e.Row,VENTASRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.VENTASRowDeletedEvent) Is Nothing) Then
                RaiseEvent VENTASRowDeleted(Me, New VENTASRowChangeEvent(CType(e.Row,VENTASRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.VENTASRowDeletingEvent) Is Nothing) Then
                RaiseEvent VENTASRowDeleting(Me, New VENTASRowChangeEvent(CType(e.Row,VENTASRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub RemoveVENTASRow(ByVal row As VENTASRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence
            Dim ds As dsVentas = New dsVentas
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "VENTASDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0"),  _
     Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class VENTAS_PRODataTable
        Inherits Global.System.Data.TypedTableBase(Of VENTAS_PRORow)
        
        Private columnEMPRESA As Global.System.Data.DataColumn
        
        Private columnVENTA As Global.System.Data.DataColumn
        
        Private columnLINEA As Global.System.Data.DataColumn
        
        Private columnTIPO_CAMBIO As Global.System.Data.DataColumn
        
        Private columnTIPO_MONEDA As Global.System.Data.DataColumn
        
        Private columnPRODUCTO As Global.System.Data.DataColumn
        
        Private columnNUMERO_LOTE As Global.System.Data.DataColumn
        
        Private columnUNIDAD_MEDIDA As Global.System.Data.DataColumn
        
        Private columnCANTIDAD As Global.System.Data.DataColumn
        
        Private columnPRECIO_UNITARIO As Global.System.Data.DataColumn
        
        Private columnDESCUENTO_1 As Global.System.Data.DataColumn
        
        Private columnDESCUENTO_2 As Global.System.Data.DataColumn
        
        Private columnDESCUENTO_3 As Global.System.Data.DataColumn
        
        Private columnVALOR_EXPORTACION_ORIGEN As Global.System.Data.DataColumn
        
        Private columnBASE_IMPONIBLE_GRAVADA_ORIGEN As Global.System.Data.DataColumn
        
        Private columnimporte_exonerado_ORIGEN As Global.System.Data.DataColumn
        
        Private columnimporte_inafecto_ORIGEN As Global.System.Data.DataColumn
        
        Private columnISC_ORIGEN As Global.System.Data.DataColumn
        
        Private columnIGV_ORIGEN As Global.System.Data.DataColumn
        
        Private columnIPM_ORIGEN As Global.System.Data.DataColumn
        
        Private columnBASE_IMPONIBLE_GRAVADA2_ORIGEN As Global.System.Data.DataColumn
        
        Private columnIGV2_ORIGEN As Global.System.Data.DataColumn
        
        Private columnOTROS_TRIBUTOS_ORIGEN As Global.System.Data.DataColumn
        
        Private columnIMPORTE_TOTAL_ORIGEN As Global.System.Data.DataColumn
        
        Private columnVALOR_EXPORTACION_MN As Global.System.Data.DataColumn
        
        Private columnBASE_IMPONIBLE_GRAVADA_MN As Global.System.Data.DataColumn
        
        Private columnimporte_exonerado_MN As Global.System.Data.DataColumn
        
        Private columnimporte_inafecto_MN As Global.System.Data.DataColumn
        
        Private columnISC_MN As Global.System.Data.DataColumn
        
        Private columnIGV_MN As Global.System.Data.DataColumn
        
        Private columnIPM_MN As Global.System.Data.DataColumn
        
        Private columnBASE_IMPONIBLE_GRAVADA2_MN As Global.System.Data.DataColumn
        
        Private columnIGV2_MN As Global.System.Data.DataColumn
        
        Private columnOTROS_TRIBUTOS_MN As Global.System.Data.DataColumn
        
        Private columnIMPORTE_TOTAL_MN As Global.System.Data.DataColumn
        
        Private columnVALOR_EXPORTACION_ME As Global.System.Data.DataColumn
        
        Private columnBASE_IMPONIBLE_GRAVADA_ME As Global.System.Data.DataColumn
        
        Private columnimporte_exonerado_ME As Global.System.Data.DataColumn
        
        Private columnimporte_inafecto_ME As Global.System.Data.DataColumn
        
        Private columnISC_ME As Global.System.Data.DataColumn
        
        Private columnIGV_ME As Global.System.Data.DataColumn
        
        Private columnIPM_ME As Global.System.Data.DataColumn
        
        Private columnBASE_IMPONIBLE_GRAVADA2_ME As Global.System.Data.DataColumn
        
        Private columnIGV2_ME As Global.System.Data.DataColumn
        
        Private columnOTROS_TRIBUTOS_ME As Global.System.Data.DataColumn
        
        Private columnIMPORTE_TOTAL_ME As Global.System.Data.DataColumn
        
        Private columnESTADO As Global.System.Data.DataColumn
        
        Private columnGUIA_REMITENTE As Global.System.Data.DataColumn
        
        Private columnCENTRO_COSTO As Global.System.Data.DataColumn
        
        Private columnPROYECTO As Global.System.Data.DataColumn
        
        Private columnUSUARIO_REGISTRO As Global.System.Data.DataColumn
        
        Private columnFECHA_REGISTRO As Global.System.Data.DataColumn
        
        Private columnUSUARIO_MODIFICA As Global.System.Data.DataColumn
        
        Private columnFECHA_MODIFICA As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "VENTAS_PRO"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property EMPRESAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnEMPRESA
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property VENTAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnVENTA
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property LINEAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnLINEA
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property TIPO_CAMBIOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTIPO_CAMBIO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property TIPO_MONEDAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTIPO_MONEDA
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property PRODUCTOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPRODUCTO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property NUMERO_LOTEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnNUMERO_LOTE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property UNIDAD_MEDIDAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnUNIDAD_MEDIDA
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property CANTIDADColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCANTIDAD
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property PRECIO_UNITARIOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPRECIO_UNITARIO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property DESCUENTO_1Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnDESCUENTO_1
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property DESCUENTO_2Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnDESCUENTO_2
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property DESCUENTO_3Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnDESCUENTO_3
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property VALOR_EXPORTACION_ORIGENColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnVALOR_EXPORTACION_ORIGEN
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property BASE_IMPONIBLE_GRAVADA_ORIGENColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnBASE_IMPONIBLE_GRAVADA_ORIGEN
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property importe_exonerado_ORIGENColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnimporte_exonerado_ORIGEN
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property importe_inafecto_ORIGENColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnimporte_inafecto_ORIGEN
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property ISC_ORIGENColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnISC_ORIGEN
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property IGV_ORIGENColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnIGV_ORIGEN
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property IPM_ORIGENColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnIPM_ORIGEN
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property BASE_IMPONIBLE_GRAVADA2_ORIGENColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnBASE_IMPONIBLE_GRAVADA2_ORIGEN
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property IGV2_ORIGENColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnIGV2_ORIGEN
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property OTROS_TRIBUTOS_ORIGENColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnOTROS_TRIBUTOS_ORIGEN
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property IMPORTE_TOTAL_ORIGENColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnIMPORTE_TOTAL_ORIGEN
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property VALOR_EXPORTACION_MNColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnVALOR_EXPORTACION_MN
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property BASE_IMPONIBLE_GRAVADA_MNColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnBASE_IMPONIBLE_GRAVADA_MN
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property importe_exonerado_MNColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnimporte_exonerado_MN
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property importe_inafecto_MNColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnimporte_inafecto_MN
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property ISC_MNColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnISC_MN
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property IGV_MNColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnIGV_MN
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property IPM_MNColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnIPM_MN
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property BASE_IMPONIBLE_GRAVADA2_MNColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnBASE_IMPONIBLE_GRAVADA2_MN
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property IGV2_MNColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnIGV2_MN
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property OTROS_TRIBUTOS_MNColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnOTROS_TRIBUTOS_MN
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property IMPORTE_TOTAL_MNColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnIMPORTE_TOTAL_MN
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property VALOR_EXPORTACION_MEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnVALOR_EXPORTACION_ME
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property BASE_IMPONIBLE_GRAVADA_MEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnBASE_IMPONIBLE_GRAVADA_ME
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property importe_exonerado_MEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnimporte_exonerado_ME
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property importe_inafecto_MEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnimporte_inafecto_ME
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property ISC_MEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnISC_ME
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property IGV_MEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnIGV_ME
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property IPM_MEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnIPM_ME
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property BASE_IMPONIBLE_GRAVADA2_MEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnBASE_IMPONIBLE_GRAVADA2_ME
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property IGV2_MEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnIGV2_ME
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property OTROS_TRIBUTOS_MEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnOTROS_TRIBUTOS_ME
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property IMPORTE_TOTAL_MEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnIMPORTE_TOTAL_ME
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property ESTADOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnESTADO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property GUIA_REMITENTEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnGUIA_REMITENTE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property CENTRO_COSTOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCENTRO_COSTO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property PROYECTOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPROYECTO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property USUARIO_REGISTROColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnUSUARIO_REGISTRO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property FECHA_REGISTROColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnFECHA_REGISTRO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property USUARIO_MODIFICAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnUSUARIO_MODIFICA
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property FECHA_MODIFICAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnFECHA_MODIFICA
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As VENTAS_PRORow
            Get
                Return CType(Me.Rows(index),VENTAS_PRORow)
            End Get
        End Property
        
        Public Event VENTAS_PRORowChanging As VENTAS_PRORowChangeEventHandler
        
        Public Event VENTAS_PRORowChanged As VENTAS_PRORowChangeEventHandler
        
        Public Event VENTAS_PRORowDeleting As VENTAS_PRORowChangeEventHandler
        
        Public Event VENTAS_PRORowDeleted As VENTAS_PRORowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Sub AddVENTAS_PRORow(ByVal row As VENTAS_PRORow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Function AddVENTAS_PRORow( _
                    ByVal EMPRESA As String,  _
                    ByVal VENTA As String,  _
                    ByVal LINEA As String,  _
                    ByVal TIPO_CAMBIO As Decimal,  _
                    ByVal TIPO_MONEDA As String,  _
                    ByVal PRODUCTO As String,  _
                    ByVal NUMERO_LOTE As String,  _
                    ByVal UNIDAD_MEDIDA As String,  _
                    ByVal CANTIDAD As Decimal,  _
                    ByVal PRECIO_UNITARIO As Decimal,  _
                    ByVal DESCUENTO_1 As Decimal,  _
                    ByVal DESCUENTO_2 As Decimal,  _
                    ByVal DESCUENTO_3 As Decimal,  _
                    ByVal VALOR_EXPORTACION_ORIGEN As Decimal,  _
                    ByVal BASE_IMPONIBLE_GRAVADA_ORIGEN As Decimal,  _
                    ByVal importe_exonerado_ORIGEN As Decimal,  _
                    ByVal importe_inafecto_ORIGEN As Decimal,  _
                    ByVal ISC_ORIGEN As Decimal,  _
                    ByVal IGV_ORIGEN As Decimal,  _
                    ByVal IPM_ORIGEN As Decimal,  _
                    ByVal BASE_IMPONIBLE_GRAVADA2_ORIGEN As Decimal,  _
                    ByVal IGV2_ORIGEN As Decimal,  _
                    ByVal OTROS_TRIBUTOS_ORIGEN As Decimal,  _
                    ByVal IMPORTE_TOTAL_ORIGEN As Decimal,  _
                    ByVal VALOR_EXPORTACION_MN As Decimal,  _
                    ByVal BASE_IMPONIBLE_GRAVADA_MN As Decimal,  _
                    ByVal importe_exonerado_MN As Decimal,  _
                    ByVal importe_inafecto_MN As Decimal,  _
                    ByVal ISC_MN As Decimal,  _
                    ByVal IGV_MN As Decimal,  _
                    ByVal IPM_MN As Decimal,  _
                    ByVal BASE_IMPONIBLE_GRAVADA2_MN As Decimal,  _
                    ByVal IGV2_MN As Decimal,  _
                    ByVal OTROS_TRIBUTOS_MN As Decimal,  _
                    ByVal IMPORTE_TOTAL_MN As Decimal,  _
                    ByVal VALOR_EXPORTACION_ME As Decimal,  _
                    ByVal BASE_IMPONIBLE_GRAVADA_ME As Decimal,  _
                    ByVal importe_exonerado_ME As Decimal,  _
                    ByVal importe_inafecto_ME As Decimal,  _
                    ByVal ISC_ME As Decimal,  _
                    ByVal IGV_ME As Decimal,  _
                    ByVal IPM_ME As Decimal,  _
                    ByVal BASE_IMPONIBLE_GRAVADA2_ME As Decimal,  _
                    ByVal IGV2_ME As Decimal,  _
                    ByVal OTROS_TRIBUTOS_ME As Decimal,  _
                    ByVal IMPORTE_TOTAL_ME As Decimal,  _
                    ByVal ESTADO As String,  _
                    ByVal GUIA_REMITENTE As String,  _
                    ByVal CENTRO_COSTO As String,  _
                    ByVal PROYECTO As String,  _
                    ByVal USUARIO_REGISTRO As String,  _
                    ByVal FECHA_REGISTRO As Date,  _
                    ByVal USUARIO_MODIFICA As String,  _
                    ByVal FECHA_MODIFICA As Date) As VENTAS_PRORow
            Dim rowVENTAS_PRORow As VENTAS_PRORow = CType(Me.NewRow,VENTAS_PRORow)
            Dim columnValuesArray() As Object = New Object() {EMPRESA, VENTA, LINEA, TIPO_CAMBIO, TIPO_MONEDA, PRODUCTO, NUMERO_LOTE, UNIDAD_MEDIDA, CANTIDAD, PRECIO_UNITARIO, DESCUENTO_1, DESCUENTO_2, DESCUENTO_3, VALOR_EXPORTACION_ORIGEN, BASE_IMPONIBLE_GRAVADA_ORIGEN, importe_exonerado_ORIGEN, importe_inafecto_ORIGEN, ISC_ORIGEN, IGV_ORIGEN, IPM_ORIGEN, BASE_IMPONIBLE_GRAVADA2_ORIGEN, IGV2_ORIGEN, OTROS_TRIBUTOS_ORIGEN, IMPORTE_TOTAL_ORIGEN, VALOR_EXPORTACION_MN, BASE_IMPONIBLE_GRAVADA_MN, importe_exonerado_MN, importe_inafecto_MN, ISC_MN, IGV_MN, IPM_MN, BASE_IMPONIBLE_GRAVADA2_MN, IGV2_MN, OTROS_TRIBUTOS_MN, IMPORTE_TOTAL_MN, VALOR_EXPORTACION_ME, BASE_IMPONIBLE_GRAVADA_ME, importe_exonerado_ME, importe_inafecto_ME, ISC_ME, IGV_ME, IPM_ME, BASE_IMPONIBLE_GRAVADA2_ME, IGV2_ME, OTROS_TRIBUTOS_ME, IMPORTE_TOTAL_ME, ESTADO, GUIA_REMITENTE, CENTRO_COSTO, PROYECTO, USUARIO_REGISTRO, FECHA_REGISTRO, USUARIO_MODIFICA, FECHA_MODIFICA}
            rowVENTAS_PRORow.ItemArray = columnValuesArray
            Me.Rows.Add(rowVENTAS_PRORow)
            Return rowVENTAS_PRORow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function FindByEMPRESAVENTALINEA(ByVal EMPRESA As String, ByVal VENTA As String, ByVal LINEA As String) As VENTAS_PRORow
            Return CType(Me.Rows.Find(New Object() {EMPRESA, VENTA, LINEA}),VENTAS_PRORow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As VENTAS_PRODataTable = CType(MyBase.Clone,VENTAS_PRODataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New VENTAS_PRODataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub InitVars()
            Me.columnEMPRESA = MyBase.Columns("EMPRESA")
            Me.columnVENTA = MyBase.Columns("VENTA")
            Me.columnLINEA = MyBase.Columns("LINEA")
            Me.columnTIPO_CAMBIO = MyBase.Columns("TIPO_CAMBIO")
            Me.columnTIPO_MONEDA = MyBase.Columns("TIPO_MONEDA")
            Me.columnPRODUCTO = MyBase.Columns("PRODUCTO")
            Me.columnNUMERO_LOTE = MyBase.Columns("NUMERO_LOTE")
            Me.columnUNIDAD_MEDIDA = MyBase.Columns("UNIDAD_MEDIDA")
            Me.columnCANTIDAD = MyBase.Columns("CANTIDAD")
            Me.columnPRECIO_UNITARIO = MyBase.Columns("PRECIO_UNITARIO")
            Me.columnDESCUENTO_1 = MyBase.Columns("DESCUENTO_1")
            Me.columnDESCUENTO_2 = MyBase.Columns("DESCUENTO_2")
            Me.columnDESCUENTO_3 = MyBase.Columns("DESCUENTO_3")
            Me.columnVALOR_EXPORTACION_ORIGEN = MyBase.Columns("VALOR_EXPORTACION_ORIGEN")
            Me.columnBASE_IMPONIBLE_GRAVADA_ORIGEN = MyBase.Columns("BASE_IMPONIBLE_GRAVADA_ORIGEN")
            Me.columnimporte_exonerado_ORIGEN = MyBase.Columns("IMPORTE_EXONERADO_ORIGEN")
            Me.columnimporte_inafecto_ORIGEN = MyBase.Columns("IMPORTE_INAFECTO_ORIGEN")
            Me.columnISC_ORIGEN = MyBase.Columns("ISC_ORIGEN")
            Me.columnIGV_ORIGEN = MyBase.Columns("IGV_ORIGEN")
            Me.columnIPM_ORIGEN = MyBase.Columns("IPM_ORIGEN")
            Me.columnBASE_IMPONIBLE_GRAVADA2_ORIGEN = MyBase.Columns("BASE_IMPONIBLE_GRAVADA2_ORIGEN")
            Me.columnIGV2_ORIGEN = MyBase.Columns("IGV2_ORIGEN")
            Me.columnOTROS_TRIBUTOS_ORIGEN = MyBase.Columns("OTROS_TRIBUTOS_ORIGEN")
            Me.columnIMPORTE_TOTAL_ORIGEN = MyBase.Columns("IMPORTE_TOTAL_ORIGEN")
            Me.columnVALOR_EXPORTACION_MN = MyBase.Columns("VALOR_EXPORTACION_MN")
            Me.columnBASE_IMPONIBLE_GRAVADA_MN = MyBase.Columns("BASE_IMPONIBLE_GRAVADA_MN")
            Me.columnimporte_exonerado_MN = MyBase.Columns("IMPORTE_EXONERADO_MN")
            Me.columnimporte_inafecto_MN = MyBase.Columns("IMPORTE_INAFECTO_MN")
            Me.columnISC_MN = MyBase.Columns("ISC_MN")
            Me.columnIGV_MN = MyBase.Columns("IGV_MN")
            Me.columnIPM_MN = MyBase.Columns("IPM_MN")
            Me.columnBASE_IMPONIBLE_GRAVADA2_MN = MyBase.Columns("BASE_IMPONIBLE_GRAVADA2_MN")
            Me.columnIGV2_MN = MyBase.Columns("IGV2_MN")
            Me.columnOTROS_TRIBUTOS_MN = MyBase.Columns("OTROS_TRIBUTOS_MN")
            Me.columnIMPORTE_TOTAL_MN = MyBase.Columns("IMPORTE_TOTAL_MN")
            Me.columnVALOR_EXPORTACION_ME = MyBase.Columns("VALOR_EXPORTACION_ME")
            Me.columnBASE_IMPONIBLE_GRAVADA_ME = MyBase.Columns("BASE_IMPONIBLE_GRAVADA_ME")
            Me.columnimporte_exonerado_ME = MyBase.Columns("IMPORTE_EXONERADO_ME")
            Me.columnimporte_inafecto_ME = MyBase.Columns("IMPORTE_INAFECTO_ME")
            Me.columnISC_ME = MyBase.Columns("ISC_ME")
            Me.columnIGV_ME = MyBase.Columns("IGV_ME")
            Me.columnIPM_ME = MyBase.Columns("IPM_ME")
            Me.columnBASE_IMPONIBLE_GRAVADA2_ME = MyBase.Columns("BASE_IMPONIBLE_GRAVADA2_ME")
            Me.columnIGV2_ME = MyBase.Columns("IGV2_ME")
            Me.columnOTROS_TRIBUTOS_ME = MyBase.Columns("OTROS_TRIBUTOS_ME")
            Me.columnIMPORTE_TOTAL_ME = MyBase.Columns("IMPORTE_TOTAL_ME")
            Me.columnESTADO = MyBase.Columns("ESTADO")
            Me.columnGUIA_REMITENTE = MyBase.Columns("GUIA_REMITENTE")
            Me.columnCENTRO_COSTO = MyBase.Columns("CENTRO_COSTO")
            Me.columnPROYECTO = MyBase.Columns("PROYECTO")
            Me.columnUSUARIO_REGISTRO = MyBase.Columns("USUARIO_REGISTRO")
            Me.columnFECHA_REGISTRO = MyBase.Columns("FECHA_REGISTRO")
            Me.columnUSUARIO_MODIFICA = MyBase.Columns("USUARIO_MODIFICA")
            Me.columnFECHA_MODIFICA = MyBase.Columns("FECHA_MODIFICA")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitClass()
            Me.columnEMPRESA = New Global.System.Data.DataColumn("EMPRESA", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnEMPRESA)
            Me.columnVENTA = New Global.System.Data.DataColumn("VENTA", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnVENTA)
            Me.columnLINEA = New Global.System.Data.DataColumn("LINEA", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnLINEA)
            Me.columnTIPO_CAMBIO = New Global.System.Data.DataColumn("TIPO_CAMBIO", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTIPO_CAMBIO)
            Me.columnTIPO_MONEDA = New Global.System.Data.DataColumn("TIPO_MONEDA", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTIPO_MONEDA)
            Me.columnPRODUCTO = New Global.System.Data.DataColumn("PRODUCTO", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPRODUCTO)
            Me.columnNUMERO_LOTE = New Global.System.Data.DataColumn("NUMERO_LOTE", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnNUMERO_LOTE)
            Me.columnUNIDAD_MEDIDA = New Global.System.Data.DataColumn("UNIDAD_MEDIDA", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnUNIDAD_MEDIDA)
            Me.columnCANTIDAD = New Global.System.Data.DataColumn("CANTIDAD", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCANTIDAD)
            Me.columnPRECIO_UNITARIO = New Global.System.Data.DataColumn("PRECIO_UNITARIO", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPRECIO_UNITARIO)
            Me.columnDESCUENTO_1 = New Global.System.Data.DataColumn("DESCUENTO_1", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDESCUENTO_1)
            Me.columnDESCUENTO_2 = New Global.System.Data.DataColumn("DESCUENTO_2", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDESCUENTO_2)
            Me.columnDESCUENTO_3 = New Global.System.Data.DataColumn("DESCUENTO_3", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDESCUENTO_3)
            Me.columnVALOR_EXPORTACION_ORIGEN = New Global.System.Data.DataColumn("VALOR_EXPORTACION_ORIGEN", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnVALOR_EXPORTACION_ORIGEN)
            Me.columnBASE_IMPONIBLE_GRAVADA_ORIGEN = New Global.System.Data.DataColumn("BASE_IMPONIBLE_GRAVADA_ORIGEN", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnBASE_IMPONIBLE_GRAVADA_ORIGEN)
            Me.columnimporte_exonerado_ORIGEN = New Global.System.Data.DataColumn("IMPORTE_EXONERADO_ORIGEN", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            Me.columnimporte_exonerado_ORIGEN.ExtendedProperties.Add("Generator_ColumnPropNameInRow", "importe_exonerado_ORIGEN")
            Me.columnimporte_exonerado_ORIGEN.ExtendedProperties.Add("Generator_ColumnPropNameInTable", "importe_exonerado_ORIGENColumn")
            Me.columnimporte_exonerado_ORIGEN.ExtendedProperties.Add("Generator_ColumnVarNameInTable", "columnimporte_exonerado_ORIGEN")
            Me.columnimporte_exonerado_ORIGEN.ExtendedProperties.Add("Generator_UserColumnName", "IMPORTE_EXONERADO_ORIGEN")
            MyBase.Columns.Add(Me.columnimporte_exonerado_ORIGEN)
            Me.columnimporte_inafecto_ORIGEN = New Global.System.Data.DataColumn("IMPORTE_INAFECTO_ORIGEN", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            Me.columnimporte_inafecto_ORIGEN.ExtendedProperties.Add("Generator_ColumnPropNameInRow", "importe_inafecto_ORIGEN")
            Me.columnimporte_inafecto_ORIGEN.ExtendedProperties.Add("Generator_ColumnPropNameInTable", "importe_inafecto_ORIGENColumn")
            Me.columnimporte_inafecto_ORIGEN.ExtendedProperties.Add("Generator_ColumnVarNameInTable", "columnimporte_inafecto_ORIGEN")
            Me.columnimporte_inafecto_ORIGEN.ExtendedProperties.Add("Generator_UserColumnName", "IMPORTE_INAFECTO_ORIGEN")
            MyBase.Columns.Add(Me.columnimporte_inafecto_ORIGEN)
            Me.columnISC_ORIGEN = New Global.System.Data.DataColumn("ISC_ORIGEN", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnISC_ORIGEN)
            Me.columnIGV_ORIGEN = New Global.System.Data.DataColumn("IGV_ORIGEN", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnIGV_ORIGEN)
            Me.columnIPM_ORIGEN = New Global.System.Data.DataColumn("IPM_ORIGEN", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnIPM_ORIGEN)
            Me.columnBASE_IMPONIBLE_GRAVADA2_ORIGEN = New Global.System.Data.DataColumn("BASE_IMPONIBLE_GRAVADA2_ORIGEN", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnBASE_IMPONIBLE_GRAVADA2_ORIGEN)
            Me.columnIGV2_ORIGEN = New Global.System.Data.DataColumn("IGV2_ORIGEN", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnIGV2_ORIGEN)
            Me.columnOTROS_TRIBUTOS_ORIGEN = New Global.System.Data.DataColumn("OTROS_TRIBUTOS_ORIGEN", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnOTROS_TRIBUTOS_ORIGEN)
            Me.columnIMPORTE_TOTAL_ORIGEN = New Global.System.Data.DataColumn("IMPORTE_TOTAL_ORIGEN", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnIMPORTE_TOTAL_ORIGEN)
            Me.columnVALOR_EXPORTACION_MN = New Global.System.Data.DataColumn("VALOR_EXPORTACION_MN", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnVALOR_EXPORTACION_MN)
            Me.columnBASE_IMPONIBLE_GRAVADA_MN = New Global.System.Data.DataColumn("BASE_IMPONIBLE_GRAVADA_MN", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnBASE_IMPONIBLE_GRAVADA_MN)
            Me.columnimporte_exonerado_MN = New Global.System.Data.DataColumn("IMPORTE_EXONERADO_MN", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            Me.columnimporte_exonerado_MN.ExtendedProperties.Add("Generator_ColumnPropNameInRow", "importe_exonerado_MN")
            Me.columnimporte_exonerado_MN.ExtendedProperties.Add("Generator_ColumnPropNameInTable", "importe_exonerado_MNColumn")
            Me.columnimporte_exonerado_MN.ExtendedProperties.Add("Generator_ColumnVarNameInTable", "columnimporte_exonerado_MN")
            Me.columnimporte_exonerado_MN.ExtendedProperties.Add("Generator_UserColumnName", "IMPORTE_EXONERADO_MN")
            MyBase.Columns.Add(Me.columnimporte_exonerado_MN)
            Me.columnimporte_inafecto_MN = New Global.System.Data.DataColumn("IMPORTE_INAFECTO_MN", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            Me.columnimporte_inafecto_MN.ExtendedProperties.Add("Generator_ColumnPropNameInRow", "importe_inafecto_MN")
            Me.columnimporte_inafecto_MN.ExtendedProperties.Add("Generator_ColumnPropNameInTable", "importe_inafecto_MNColumn")
            Me.columnimporte_inafecto_MN.ExtendedProperties.Add("Generator_ColumnVarNameInTable", "columnimporte_inafecto_MN")
            Me.columnimporte_inafecto_MN.ExtendedProperties.Add("Generator_UserColumnName", "IMPORTE_INAFECTO_MN")
            MyBase.Columns.Add(Me.columnimporte_inafecto_MN)
            Me.columnISC_MN = New Global.System.Data.DataColumn("ISC_MN", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnISC_MN)
            Me.columnIGV_MN = New Global.System.Data.DataColumn("IGV_MN", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnIGV_MN)
            Me.columnIPM_MN = New Global.System.Data.DataColumn("IPM_MN", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnIPM_MN)
            Me.columnBASE_IMPONIBLE_GRAVADA2_MN = New Global.System.Data.DataColumn("BASE_IMPONIBLE_GRAVADA2_MN", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnBASE_IMPONIBLE_GRAVADA2_MN)
            Me.columnIGV2_MN = New Global.System.Data.DataColumn("IGV2_MN", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnIGV2_MN)
            Me.columnOTROS_TRIBUTOS_MN = New Global.System.Data.DataColumn("OTROS_TRIBUTOS_MN", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnOTROS_TRIBUTOS_MN)
            Me.columnIMPORTE_TOTAL_MN = New Global.System.Data.DataColumn("IMPORTE_TOTAL_MN", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnIMPORTE_TOTAL_MN)
            Me.columnVALOR_EXPORTACION_ME = New Global.System.Data.DataColumn("VALOR_EXPORTACION_ME", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnVALOR_EXPORTACION_ME)
            Me.columnBASE_IMPONIBLE_GRAVADA_ME = New Global.System.Data.DataColumn("BASE_IMPONIBLE_GRAVADA_ME", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnBASE_IMPONIBLE_GRAVADA_ME)
            Me.columnimporte_exonerado_ME = New Global.System.Data.DataColumn("IMPORTE_EXONERADO_ME", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            Me.columnimporte_exonerado_ME.ExtendedProperties.Add("Generator_ColumnPropNameInRow", "importe_exonerado_ME")
            Me.columnimporte_exonerado_ME.ExtendedProperties.Add("Generator_ColumnPropNameInTable", "importe_exonerado_MEColumn")
            Me.columnimporte_exonerado_ME.ExtendedProperties.Add("Generator_ColumnVarNameInTable", "columnimporte_exonerado_ME")
            Me.columnimporte_exonerado_ME.ExtendedProperties.Add("Generator_UserColumnName", "IMPORTE_EXONERADO_ME")
            MyBase.Columns.Add(Me.columnimporte_exonerado_ME)
            Me.columnimporte_inafecto_ME = New Global.System.Data.DataColumn("IMPORTE_INAFECTO_ME", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            Me.columnimporte_inafecto_ME.ExtendedProperties.Add("Generator_ColumnPropNameInRow", "importe_inafecto_ME")
            Me.columnimporte_inafecto_ME.ExtendedProperties.Add("Generator_ColumnPropNameInTable", "importe_inafecto_MEColumn")
            Me.columnimporte_inafecto_ME.ExtendedProperties.Add("Generator_ColumnVarNameInTable", "columnimporte_inafecto_ME")
            Me.columnimporte_inafecto_ME.ExtendedProperties.Add("Generator_UserColumnName", "IMPORTE_INAFECTO_ME")
            MyBase.Columns.Add(Me.columnimporte_inafecto_ME)
            Me.columnISC_ME = New Global.System.Data.DataColumn("ISC_ME", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnISC_ME)
            Me.columnIGV_ME = New Global.System.Data.DataColumn("IGV_ME", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnIGV_ME)
            Me.columnIPM_ME = New Global.System.Data.DataColumn("IPM_ME", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnIPM_ME)
            Me.columnBASE_IMPONIBLE_GRAVADA2_ME = New Global.System.Data.DataColumn("BASE_IMPONIBLE_GRAVADA2_ME", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnBASE_IMPONIBLE_GRAVADA2_ME)
            Me.columnIGV2_ME = New Global.System.Data.DataColumn("IGV2_ME", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnIGV2_ME)
            Me.columnOTROS_TRIBUTOS_ME = New Global.System.Data.DataColumn("OTROS_TRIBUTOS_ME", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnOTROS_TRIBUTOS_ME)
            Me.columnIMPORTE_TOTAL_ME = New Global.System.Data.DataColumn("IMPORTE_TOTAL_ME", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnIMPORTE_TOTAL_ME)
            Me.columnESTADO = New Global.System.Data.DataColumn("ESTADO", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnESTADO)
            Me.columnGUIA_REMITENTE = New Global.System.Data.DataColumn("GUIA_REMITENTE", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnGUIA_REMITENTE)
            Me.columnCENTRO_COSTO = New Global.System.Data.DataColumn("CENTRO_COSTO", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCENTRO_COSTO)
            Me.columnPROYECTO = New Global.System.Data.DataColumn("PROYECTO", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPROYECTO)
            Me.columnUSUARIO_REGISTRO = New Global.System.Data.DataColumn("USUARIO_REGISTRO", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnUSUARIO_REGISTRO)
            Me.columnFECHA_REGISTRO = New Global.System.Data.DataColumn("FECHA_REGISTRO", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFECHA_REGISTRO)
            Me.columnUSUARIO_MODIFICA = New Global.System.Data.DataColumn("USUARIO_MODIFICA", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnUSUARIO_MODIFICA)
            Me.columnFECHA_MODIFICA = New Global.System.Data.DataColumn("FECHA_MODIFICA", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFECHA_MODIFICA)
            Me.Constraints.Add(New Global.System.Data.UniqueConstraint("Constraint1", New Global.System.Data.DataColumn() {Me.columnEMPRESA, Me.columnVENTA, Me.columnLINEA}, true))
            Me.columnEMPRESA.AllowDBNull = false
            Me.columnEMPRESA.MaxLength = 3
            Me.columnVENTA.AllowDBNull = false
            Me.columnVENTA.MaxLength = 12
            Me.columnLINEA.AllowDBNull = false
            Me.columnLINEA.MaxLength = 3
            Me.columnTIPO_CAMBIO.AllowDBNull = false
            Me.columnTIPO_MONEDA.AllowDBNull = false
            Me.columnTIPO_MONEDA.MaxLength = 1
            Me.columnPRODUCTO.AllowDBNull = false
            Me.columnPRODUCTO.MaxLength = 8
            Me.columnNUMERO_LOTE.AllowDBNull = false
            Me.columnNUMERO_LOTE.MaxLength = 10
            Me.columnUNIDAD_MEDIDA.AllowDBNull = false
            Me.columnUNIDAD_MEDIDA.MaxLength = 2
            Me.columnCANTIDAD.AllowDBNull = false
            Me.columnPRECIO_UNITARIO.AllowDBNull = false
            Me.columnDESCUENTO_1.AllowDBNull = false
            Me.columnDESCUENTO_2.AllowDBNull = false
            Me.columnDESCUENTO_3.AllowDBNull = false
            Me.columnVALOR_EXPORTACION_ORIGEN.AllowDBNull = false
            Me.columnBASE_IMPONIBLE_GRAVADA_ORIGEN.AllowDBNull = false
            Me.columnimporte_exonerado_ORIGEN.AllowDBNull = false
            Me.columnimporte_inafecto_ORIGEN.AllowDBNull = false
            Me.columnISC_ORIGEN.AllowDBNull = false
            Me.columnIGV_ORIGEN.AllowDBNull = false
            Me.columnIPM_ORIGEN.AllowDBNull = false
            Me.columnBASE_IMPONIBLE_GRAVADA2_ORIGEN.AllowDBNull = false
            Me.columnIGV2_ORIGEN.AllowDBNull = false
            Me.columnOTROS_TRIBUTOS_ORIGEN.AllowDBNull = false
            Me.columnIMPORTE_TOTAL_ORIGEN.AllowDBNull = false
            Me.columnVALOR_EXPORTACION_MN.AllowDBNull = false
            Me.columnBASE_IMPONIBLE_GRAVADA_MN.AllowDBNull = false
            Me.columnimporte_exonerado_MN.AllowDBNull = false
            Me.columnimporte_inafecto_MN.AllowDBNull = false
            Me.columnISC_MN.AllowDBNull = false
            Me.columnIGV_MN.AllowDBNull = false
            Me.columnIPM_MN.AllowDBNull = false
            Me.columnBASE_IMPONIBLE_GRAVADA2_MN.AllowDBNull = false
            Me.columnIGV2_MN.AllowDBNull = false
            Me.columnOTROS_TRIBUTOS_MN.AllowDBNull = false
            Me.columnIMPORTE_TOTAL_MN.AllowDBNull = false
            Me.columnVALOR_EXPORTACION_ME.AllowDBNull = false
            Me.columnBASE_IMPONIBLE_GRAVADA_ME.AllowDBNull = false
            Me.columnimporte_exonerado_ME.AllowDBNull = false
            Me.columnimporte_inafecto_ME.AllowDBNull = false
            Me.columnISC_ME.AllowDBNull = false
            Me.columnIGV_ME.AllowDBNull = false
            Me.columnIPM_ME.AllowDBNull = false
            Me.columnBASE_IMPONIBLE_GRAVADA2_ME.AllowDBNull = false
            Me.columnIGV2_ME.AllowDBNull = false
            Me.columnOTROS_TRIBUTOS_ME.AllowDBNull = false
            Me.columnIMPORTE_TOTAL_ME.AllowDBNull = false
            Me.columnESTADO.AllowDBNull = false
            Me.columnESTADO.MaxLength = 1
            Me.columnGUIA_REMITENTE.AllowDBNull = false
            Me.columnGUIA_REMITENTE.MaxLength = 12
            Me.columnCENTRO_COSTO.AllowDBNull = false
            Me.columnCENTRO_COSTO.MaxLength = 20
            Me.columnPROYECTO.AllowDBNull = false
            Me.columnPROYECTO.MaxLength = 20
            Me.columnUSUARIO_REGISTRO.AllowDBNull = false
            Me.columnUSUARIO_REGISTRO.MaxLength = 20
            Me.columnFECHA_REGISTRO.AllowDBNull = false
            Me.columnUSUARIO_MODIFICA.MaxLength = 20
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function NewVENTAS_PRORow() As VENTAS_PRORow
            Return CType(Me.NewRow,VENTAS_PRORow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New VENTAS_PRORow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(VENTAS_PRORow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.VENTAS_PRORowChangedEvent) Is Nothing) Then
                RaiseEvent VENTAS_PRORowChanged(Me, New VENTAS_PRORowChangeEvent(CType(e.Row,VENTAS_PRORow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.VENTAS_PRORowChangingEvent) Is Nothing) Then
                RaiseEvent VENTAS_PRORowChanging(Me, New VENTAS_PRORowChangeEvent(CType(e.Row,VENTAS_PRORow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.VENTAS_PRORowDeletedEvent) Is Nothing) Then
                RaiseEvent VENTAS_PRORowDeleted(Me, New VENTAS_PRORowChangeEvent(CType(e.Row,VENTAS_PRORow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.VENTAS_PRORowDeletingEvent) Is Nothing) Then
                RaiseEvent VENTAS_PRORowDeleting(Me, New VENTAS_PRORowChangeEvent(CType(e.Row,VENTAS_PRORow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub RemoveVENTAS_PRORow(ByVal row As VENTAS_PRORow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence
            Dim ds As dsVentas = New dsVentas
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "VENTAS_PRODataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0"),  _
     Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class VENTAS_SERDataTable
        Inherits Global.System.Data.TypedTableBase(Of VENTAS_SERRow)
        
        Private columnEMPRESA As Global.System.Data.DataColumn
        
        Private columnVENTA As Global.System.Data.DataColumn
        
        Private columnLINEA As Global.System.Data.DataColumn
        
        Private columnTIPO_CAMBIO As Global.System.Data.DataColumn
        
        Private columnTIPO_MONEDA As Global.System.Data.DataColumn
        
        Private columnGLOSA_1 As Global.System.Data.DataColumn
        
        Private columnGLOSA_2 As Global.System.Data.DataColumn
        
        Private columnGLOSA_3 As Global.System.Data.DataColumn
        
        Private columnDESCUENTO_1 As Global.System.Data.DataColumn
        
        Private columnDESCUENTO_2 As Global.System.Data.DataColumn
        
        Private columnDESCUENTO_3 As Global.System.Data.DataColumn
        
        Private columnVALOR_EXPORTACION_ORIGEN As Global.System.Data.DataColumn
        
        Private columnBASE_IMPONIBLE_GRAVADA_ORIGEN As Global.System.Data.DataColumn
        
        Private columnimporte_exonerado_ORIGEN As Global.System.Data.DataColumn
        
        Private columnimporte_inafecto_ORIGEN As Global.System.Data.DataColumn
        
        Private columnISC_ORIGEN As Global.System.Data.DataColumn
        
        Private columnIGV_ORIGEN As Global.System.Data.DataColumn
        
        Private columnIPM_ORIGEN As Global.System.Data.DataColumn
        
        Private columnBASE_IMPONIBLE_GRAVADA2_ORIGEN As Global.System.Data.DataColumn
        
        Private columnIGV2_ORIGEN As Global.System.Data.DataColumn
        
        Private columnOTROS_TRIBUTOS_ORIGEN As Global.System.Data.DataColumn
        
        Private columnIMPORTE_TOTAL_ORIGEN As Global.System.Data.DataColumn
        
        Private columnVALOR_EXPORTACION_MN As Global.System.Data.DataColumn
        
        Private columnBASE_IMPONIBLE_GRAVADA_MN As Global.System.Data.DataColumn
        
        Private columnimporte_exonerado_MN As Global.System.Data.DataColumn
        
        Private columnimporte_inafecto_MN As Global.System.Data.DataColumn
        
        Private columnISC_MN As Global.System.Data.DataColumn
        
        Private columnIGV_MN As Global.System.Data.DataColumn
        
        Private columnIPM_MN As Global.System.Data.DataColumn
        
        Private columnBASE_IMPONIBLE_GRAVADA2_MN As Global.System.Data.DataColumn
        
        Private columnIGV2_MN As Global.System.Data.DataColumn
        
        Private columnOTROS_TRIBUTOS_MN As Global.System.Data.DataColumn
        
        Private columnIMPORTE_TOTAL_MN As Global.System.Data.DataColumn
        
        Private columnVALOR_EXPORTACION_ME As Global.System.Data.DataColumn
        
        Private columnBASE_IMPONIBLE_GRAVADA_ME As Global.System.Data.DataColumn
        
        Private columnimporte_exonerado_ME As Global.System.Data.DataColumn
        
        Private columnimporte_inafecto_ME As Global.System.Data.DataColumn
        
        Private columnISC_ME As Global.System.Data.DataColumn
        
        Private columnIGV_ME As Global.System.Data.DataColumn
        
        Private columnIPM_ME As Global.System.Data.DataColumn
        
        Private columnBASE_IMPONIBLE_GRAVADA2_ME As Global.System.Data.DataColumn
        
        Private columnIGV2_ME As Global.System.Data.DataColumn
        
        Private columnOTROS_TRIBUTOS_ME As Global.System.Data.DataColumn
        
        Private columnIMPORTE_TOTAL_ME As Global.System.Data.DataColumn
        
        Private columnESTADO As Global.System.Data.DataColumn
        
        Private columnGUIA_REMITENTE As Global.System.Data.DataColumn
        
        Private columnCENTRO_COSTO As Global.System.Data.DataColumn
        
        Private columnPROYECTO As Global.System.Data.DataColumn
        
        Private columnUSUARIO_REGISTRO As Global.System.Data.DataColumn
        
        Private columnFECHA_REGISTRO As Global.System.Data.DataColumn
        
        Private columnUSUARIO_MODIFICA As Global.System.Data.DataColumn
        
        Private columnFECHA_MODIFICA As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "VENTAS_SER"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property EMPRESAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnEMPRESA
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property VENTAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnVENTA
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property LINEAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnLINEA
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property TIPO_CAMBIOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTIPO_CAMBIO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property TIPO_MONEDAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTIPO_MONEDA
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property GLOSA_1Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnGLOSA_1
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property GLOSA_2Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnGLOSA_2
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property GLOSA_3Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnGLOSA_3
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property DESCUENTO_1Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnDESCUENTO_1
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property DESCUENTO_2Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnDESCUENTO_2
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property DESCUENTO_3Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnDESCUENTO_3
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property VALOR_EXPORTACION_ORIGENColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnVALOR_EXPORTACION_ORIGEN
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property BASE_IMPONIBLE_GRAVADA_ORIGENColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnBASE_IMPONIBLE_GRAVADA_ORIGEN
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property importe_exonerado_ORIGENColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnimporte_exonerado_ORIGEN
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property importe_inafecto_ORIGENColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnimporte_inafecto_ORIGEN
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property ISC_ORIGENColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnISC_ORIGEN
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property IGV_ORIGENColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnIGV_ORIGEN
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property IPM_ORIGENColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnIPM_ORIGEN
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property BASE_IMPONIBLE_GRAVADA2_ORIGENColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnBASE_IMPONIBLE_GRAVADA2_ORIGEN
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property IGV2_ORIGENColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnIGV2_ORIGEN
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property OTROS_TRIBUTOS_ORIGENColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnOTROS_TRIBUTOS_ORIGEN
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property IMPORTE_TOTAL_ORIGENColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnIMPORTE_TOTAL_ORIGEN
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property VALOR_EXPORTACION_MNColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnVALOR_EXPORTACION_MN
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property BASE_IMPONIBLE_GRAVADA_MNColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnBASE_IMPONIBLE_GRAVADA_MN
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property importe_exonerado_MNColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnimporte_exonerado_MN
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property importe_inafecto_MNColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnimporte_inafecto_MN
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property ISC_MNColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnISC_MN
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property IGV_MNColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnIGV_MN
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property IPM_MNColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnIPM_MN
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property BASE_IMPONIBLE_GRAVADA2_MNColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnBASE_IMPONIBLE_GRAVADA2_MN
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property IGV2_MNColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnIGV2_MN
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property OTROS_TRIBUTOS_MNColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnOTROS_TRIBUTOS_MN
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property IMPORTE_TOTAL_MNColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnIMPORTE_TOTAL_MN
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property VALOR_EXPORTACION_MEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnVALOR_EXPORTACION_ME
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property BASE_IMPONIBLE_GRAVADA_MEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnBASE_IMPONIBLE_GRAVADA_ME
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property importe_exonerado_MEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnimporte_exonerado_ME
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property importe_inafecto_MEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnimporte_inafecto_ME
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property ISC_MEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnISC_ME
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property IGV_MEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnIGV_ME
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property IPM_MEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnIPM_ME
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property BASE_IMPONIBLE_GRAVADA2_MEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnBASE_IMPONIBLE_GRAVADA2_ME
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property IGV2_MEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnIGV2_ME
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property OTROS_TRIBUTOS_MEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnOTROS_TRIBUTOS_ME
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property IMPORTE_TOTAL_MEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnIMPORTE_TOTAL_ME
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property ESTADOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnESTADO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property GUIA_REMITENTEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnGUIA_REMITENTE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property CENTRO_COSTOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCENTRO_COSTO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property PROYECTOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPROYECTO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property USUARIO_REGISTROColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnUSUARIO_REGISTRO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property FECHA_REGISTROColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnFECHA_REGISTRO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property USUARIO_MODIFICAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnUSUARIO_MODIFICA
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property FECHA_MODIFICAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnFECHA_MODIFICA
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As VENTAS_SERRow
            Get
                Return CType(Me.Rows(index),VENTAS_SERRow)
            End Get
        End Property
        
        Public Event VENTAS_SERRowChanging As VENTAS_SERRowChangeEventHandler
        
        Public Event VENTAS_SERRowChanged As VENTAS_SERRowChangeEventHandler
        
        Public Event VENTAS_SERRowDeleting As VENTAS_SERRowChangeEventHandler
        
        Public Event VENTAS_SERRowDeleted As VENTAS_SERRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Sub AddVENTAS_SERRow(ByVal row As VENTAS_SERRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Function AddVENTAS_SERRow( _
                    ByVal EMPRESA As String,  _
                    ByVal VENTA As String,  _
                    ByVal LINEA As String,  _
                    ByVal TIPO_CAMBIO As Decimal,  _
                    ByVal TIPO_MONEDA As String,  _
                    ByVal GLOSA_1 As String,  _
                    ByVal GLOSA_2 As String,  _
                    ByVal GLOSA_3 As String,  _
                    ByVal DESCUENTO_1 As Decimal,  _
                    ByVal DESCUENTO_2 As Decimal,  _
                    ByVal DESCUENTO_3 As Decimal,  _
                    ByVal VALOR_EXPORTACION_ORIGEN As Decimal,  _
                    ByVal BASE_IMPONIBLE_GRAVADA_ORIGEN As Decimal,  _
                    ByVal importe_exonerado_ORIGEN As Decimal,  _
                    ByVal importe_inafecto_ORIGEN As Decimal,  _
                    ByVal ISC_ORIGEN As Decimal,  _
                    ByVal IGV_ORIGEN As Decimal,  _
                    ByVal IPM_ORIGEN As Decimal,  _
                    ByVal BASE_IMPONIBLE_GRAVADA2_ORIGEN As Decimal,  _
                    ByVal IGV2_ORIGEN As Decimal,  _
                    ByVal OTROS_TRIBUTOS_ORIGEN As Decimal,  _
                    ByVal IMPORTE_TOTAL_ORIGEN As Decimal,  _
                    ByVal VALOR_EXPORTACION_MN As Decimal,  _
                    ByVal BASE_IMPONIBLE_GRAVADA_MN As Decimal,  _
                    ByVal importe_exonerado_MN As Decimal,  _
                    ByVal importe_inafecto_MN As Decimal,  _
                    ByVal ISC_MN As Decimal,  _
                    ByVal IGV_MN As Decimal,  _
                    ByVal IPM_MN As Decimal,  _
                    ByVal BASE_IMPONIBLE_GRAVADA2_MN As Decimal,  _
                    ByVal IGV2_MN As Decimal,  _
                    ByVal OTROS_TRIBUTOS_MN As Decimal,  _
                    ByVal IMPORTE_TOTAL_MN As Decimal,  _
                    ByVal VALOR_EXPORTACION_ME As Decimal,  _
                    ByVal BASE_IMPONIBLE_GRAVADA_ME As Decimal,  _
                    ByVal importe_exonerado_ME As Decimal,  _
                    ByVal importe_inafecto_ME As Decimal,  _
                    ByVal ISC_ME As Decimal,  _
                    ByVal IGV_ME As Decimal,  _
                    ByVal IPM_ME As Decimal,  _
                    ByVal BASE_IMPONIBLE_GRAVADA2_ME As Decimal,  _
                    ByVal IGV2_ME As Decimal,  _
                    ByVal OTROS_TRIBUTOS_ME As Decimal,  _
                    ByVal IMPORTE_TOTAL_ME As Decimal,  _
                    ByVal ESTADO As String,  _
                    ByVal GUIA_REMITENTE As String,  _
                    ByVal CENTRO_COSTO As String,  _
                    ByVal PROYECTO As String,  _
                    ByVal USUARIO_REGISTRO As String,  _
                    ByVal FECHA_REGISTRO As Date,  _
                    ByVal USUARIO_MODIFICA As String,  _
                    ByVal FECHA_MODIFICA As Date) As VENTAS_SERRow
            Dim rowVENTAS_SERRow As VENTAS_SERRow = CType(Me.NewRow,VENTAS_SERRow)
            Dim columnValuesArray() As Object = New Object() {EMPRESA, VENTA, LINEA, TIPO_CAMBIO, TIPO_MONEDA, GLOSA_1, GLOSA_2, GLOSA_3, DESCUENTO_1, DESCUENTO_2, DESCUENTO_3, VALOR_EXPORTACION_ORIGEN, BASE_IMPONIBLE_GRAVADA_ORIGEN, importe_exonerado_ORIGEN, importe_inafecto_ORIGEN, ISC_ORIGEN, IGV_ORIGEN, IPM_ORIGEN, BASE_IMPONIBLE_GRAVADA2_ORIGEN, IGV2_ORIGEN, OTROS_TRIBUTOS_ORIGEN, IMPORTE_TOTAL_ORIGEN, VALOR_EXPORTACION_MN, BASE_IMPONIBLE_GRAVADA_MN, importe_exonerado_MN, importe_inafecto_MN, ISC_MN, IGV_MN, IPM_MN, BASE_IMPONIBLE_GRAVADA2_MN, IGV2_MN, OTROS_TRIBUTOS_MN, IMPORTE_TOTAL_MN, VALOR_EXPORTACION_ME, BASE_IMPONIBLE_GRAVADA_ME, importe_exonerado_ME, importe_inafecto_ME, ISC_ME, IGV_ME, IPM_ME, BASE_IMPONIBLE_GRAVADA2_ME, IGV2_ME, OTROS_TRIBUTOS_ME, IMPORTE_TOTAL_ME, ESTADO, GUIA_REMITENTE, CENTRO_COSTO, PROYECTO, USUARIO_REGISTRO, FECHA_REGISTRO, USUARIO_MODIFICA, FECHA_MODIFICA}
            rowVENTAS_SERRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowVENTAS_SERRow)
            Return rowVENTAS_SERRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function FindByEMPRESAVENTALINEA(ByVal EMPRESA As String, ByVal VENTA As String, ByVal LINEA As String) As VENTAS_SERRow
            Return CType(Me.Rows.Find(New Object() {EMPRESA, VENTA, LINEA}),VENTAS_SERRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As VENTAS_SERDataTable = CType(MyBase.Clone,VENTAS_SERDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New VENTAS_SERDataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub InitVars()
            Me.columnEMPRESA = MyBase.Columns("EMPRESA")
            Me.columnVENTA = MyBase.Columns("VENTA")
            Me.columnLINEA = MyBase.Columns("LINEA")
            Me.columnTIPO_CAMBIO = MyBase.Columns("TIPO_CAMBIO")
            Me.columnTIPO_MONEDA = MyBase.Columns("TIPO_MONEDA")
            Me.columnGLOSA_1 = MyBase.Columns("GLOSA_1")
            Me.columnGLOSA_2 = MyBase.Columns("GLOSA_2")
            Me.columnGLOSA_3 = MyBase.Columns("GLOSA_3")
            Me.columnDESCUENTO_1 = MyBase.Columns("DESCUENTO_1")
            Me.columnDESCUENTO_2 = MyBase.Columns("DESCUENTO_2")
            Me.columnDESCUENTO_3 = MyBase.Columns("DESCUENTO_3")
            Me.columnVALOR_EXPORTACION_ORIGEN = MyBase.Columns("VALOR_EXPORTACION_ORIGEN")
            Me.columnBASE_IMPONIBLE_GRAVADA_ORIGEN = MyBase.Columns("BASE_IMPONIBLE_GRAVADA_ORIGEN")
            Me.columnimporte_exonerado_ORIGEN = MyBase.Columns("IMPORTE_EXONERADO_ORIGEN")
            Me.columnimporte_inafecto_ORIGEN = MyBase.Columns("IMPORTE_INAFECTO_ORIGEN")
            Me.columnISC_ORIGEN = MyBase.Columns("ISC_ORIGEN")
            Me.columnIGV_ORIGEN = MyBase.Columns("IGV_ORIGEN")
            Me.columnIPM_ORIGEN = MyBase.Columns("IPM_ORIGEN")
            Me.columnBASE_IMPONIBLE_GRAVADA2_ORIGEN = MyBase.Columns("BASE_IMPONIBLE_GRAVADA2_ORIGEN")
            Me.columnIGV2_ORIGEN = MyBase.Columns("IGV2_ORIGEN")
            Me.columnOTROS_TRIBUTOS_ORIGEN = MyBase.Columns("OTROS_TRIBUTOS_ORIGEN")
            Me.columnIMPORTE_TOTAL_ORIGEN = MyBase.Columns("IMPORTE_TOTAL_ORIGEN")
            Me.columnVALOR_EXPORTACION_MN = MyBase.Columns("VALOR_EXPORTACION_MN")
            Me.columnBASE_IMPONIBLE_GRAVADA_MN = MyBase.Columns("BASE_IMPONIBLE_GRAVADA_MN")
            Me.columnimporte_exonerado_MN = MyBase.Columns("IMPORTE_EXONERADO_MN")
            Me.columnimporte_inafecto_MN = MyBase.Columns("IMPORTE_INAFECTO_MN")
            Me.columnISC_MN = MyBase.Columns("ISC_MN")
            Me.columnIGV_MN = MyBase.Columns("IGV_MN")
            Me.columnIPM_MN = MyBase.Columns("IPM_MN")
            Me.columnBASE_IMPONIBLE_GRAVADA2_MN = MyBase.Columns("BASE_IMPONIBLE_GRAVADA2_MN")
            Me.columnIGV2_MN = MyBase.Columns("IGV2_MN")
            Me.columnOTROS_TRIBUTOS_MN = MyBase.Columns("OTROS_TRIBUTOS_MN")
            Me.columnIMPORTE_TOTAL_MN = MyBase.Columns("IMPORTE_TOTAL_MN")
            Me.columnVALOR_EXPORTACION_ME = MyBase.Columns("VALOR_EXPORTACION_ME")
            Me.columnBASE_IMPONIBLE_GRAVADA_ME = MyBase.Columns("BASE_IMPONIBLE_GRAVADA_ME")
            Me.columnimporte_exonerado_ME = MyBase.Columns("IMPORTE_EXONERADO_ME")
            Me.columnimporte_inafecto_ME = MyBase.Columns("IMPORTE_INAFECTO_ME")
            Me.columnISC_ME = MyBase.Columns("ISC_ME")
            Me.columnIGV_ME = MyBase.Columns("IGV_ME")
            Me.columnIPM_ME = MyBase.Columns("IPM_ME")
            Me.columnBASE_IMPONIBLE_GRAVADA2_ME = MyBase.Columns("BASE_IMPONIBLE_GRAVADA2_ME")
            Me.columnIGV2_ME = MyBase.Columns("IGV2_ME")
            Me.columnOTROS_TRIBUTOS_ME = MyBase.Columns("OTROS_TRIBUTOS_ME")
            Me.columnIMPORTE_TOTAL_ME = MyBase.Columns("IMPORTE_TOTAL_ME")
            Me.columnESTADO = MyBase.Columns("ESTADO")
            Me.columnGUIA_REMITENTE = MyBase.Columns("GUIA_REMITENTE")
            Me.columnCENTRO_COSTO = MyBase.Columns("CENTRO_COSTO")
            Me.columnPROYECTO = MyBase.Columns("PROYECTO")
            Me.columnUSUARIO_REGISTRO = MyBase.Columns("USUARIO_REGISTRO")
            Me.columnFECHA_REGISTRO = MyBase.Columns("FECHA_REGISTRO")
            Me.columnUSUARIO_MODIFICA = MyBase.Columns("USUARIO_MODIFICA")
            Me.columnFECHA_MODIFICA = MyBase.Columns("FECHA_MODIFICA")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitClass()
            Me.columnEMPRESA = New Global.System.Data.DataColumn("EMPRESA", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnEMPRESA)
            Me.columnVENTA = New Global.System.Data.DataColumn("VENTA", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnVENTA)
            Me.columnLINEA = New Global.System.Data.DataColumn("LINEA", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnLINEA)
            Me.columnTIPO_CAMBIO = New Global.System.Data.DataColumn("TIPO_CAMBIO", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTIPO_CAMBIO)
            Me.columnTIPO_MONEDA = New Global.System.Data.DataColumn("TIPO_MONEDA", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTIPO_MONEDA)
            Me.columnGLOSA_1 = New Global.System.Data.DataColumn("GLOSA_1", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnGLOSA_1)
            Me.columnGLOSA_2 = New Global.System.Data.DataColumn("GLOSA_2", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnGLOSA_2)
            Me.columnGLOSA_3 = New Global.System.Data.DataColumn("GLOSA_3", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnGLOSA_3)
            Me.columnDESCUENTO_1 = New Global.System.Data.DataColumn("DESCUENTO_1", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDESCUENTO_1)
            Me.columnDESCUENTO_2 = New Global.System.Data.DataColumn("DESCUENTO_2", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDESCUENTO_2)
            Me.columnDESCUENTO_3 = New Global.System.Data.DataColumn("DESCUENTO_3", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDESCUENTO_3)
            Me.columnVALOR_EXPORTACION_ORIGEN = New Global.System.Data.DataColumn("VALOR_EXPORTACION_ORIGEN", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnVALOR_EXPORTACION_ORIGEN)
            Me.columnBASE_IMPONIBLE_GRAVADA_ORIGEN = New Global.System.Data.DataColumn("BASE_IMPONIBLE_GRAVADA_ORIGEN", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnBASE_IMPONIBLE_GRAVADA_ORIGEN)
            Me.columnimporte_exonerado_ORIGEN = New Global.System.Data.DataColumn("IMPORTE_EXONERADO_ORIGEN", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            Me.columnimporte_exonerado_ORIGEN.ExtendedProperties.Add("Generator_ColumnPropNameInRow", "importe_exonerado_ORIGEN")
            Me.columnimporte_exonerado_ORIGEN.ExtendedProperties.Add("Generator_ColumnPropNameInTable", "importe_exonerado_ORIGENColumn")
            Me.columnimporte_exonerado_ORIGEN.ExtendedProperties.Add("Generator_ColumnVarNameInTable", "columnimporte_exonerado_ORIGEN")
            Me.columnimporte_exonerado_ORIGEN.ExtendedProperties.Add("Generator_UserColumnName", "IMPORTE_EXONERADO_ORIGEN")
            MyBase.Columns.Add(Me.columnimporte_exonerado_ORIGEN)
            Me.columnimporte_inafecto_ORIGEN = New Global.System.Data.DataColumn("IMPORTE_INAFECTO_ORIGEN", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            Me.columnimporte_inafecto_ORIGEN.ExtendedProperties.Add("Generator_ColumnPropNameInRow", "importe_inafecto_ORIGEN")
            Me.columnimporte_inafecto_ORIGEN.ExtendedProperties.Add("Generator_ColumnPropNameInTable", "importe_inafecto_ORIGENColumn")
            Me.columnimporte_inafecto_ORIGEN.ExtendedProperties.Add("Generator_ColumnVarNameInTable", "columnimporte_inafecto_ORIGEN")
            Me.columnimporte_inafecto_ORIGEN.ExtendedProperties.Add("Generator_UserColumnName", "IMPORTE_INAFECTO_ORIGEN")
            MyBase.Columns.Add(Me.columnimporte_inafecto_ORIGEN)
            Me.columnISC_ORIGEN = New Global.System.Data.DataColumn("ISC_ORIGEN", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnISC_ORIGEN)
            Me.columnIGV_ORIGEN = New Global.System.Data.DataColumn("IGV_ORIGEN", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnIGV_ORIGEN)
            Me.columnIPM_ORIGEN = New Global.System.Data.DataColumn("IPM_ORIGEN", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnIPM_ORIGEN)
            Me.columnBASE_IMPONIBLE_GRAVADA2_ORIGEN = New Global.System.Data.DataColumn("BASE_IMPONIBLE_GRAVADA2_ORIGEN", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnBASE_IMPONIBLE_GRAVADA2_ORIGEN)
            Me.columnIGV2_ORIGEN = New Global.System.Data.DataColumn("IGV2_ORIGEN", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnIGV2_ORIGEN)
            Me.columnOTROS_TRIBUTOS_ORIGEN = New Global.System.Data.DataColumn("OTROS_TRIBUTOS_ORIGEN", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnOTROS_TRIBUTOS_ORIGEN)
            Me.columnIMPORTE_TOTAL_ORIGEN = New Global.System.Data.DataColumn("IMPORTE_TOTAL_ORIGEN", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnIMPORTE_TOTAL_ORIGEN)
            Me.columnVALOR_EXPORTACION_MN = New Global.System.Data.DataColumn("VALOR_EXPORTACION_MN", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnVALOR_EXPORTACION_MN)
            Me.columnBASE_IMPONIBLE_GRAVADA_MN = New Global.System.Data.DataColumn("BASE_IMPONIBLE_GRAVADA_MN", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnBASE_IMPONIBLE_GRAVADA_MN)
            Me.columnimporte_exonerado_MN = New Global.System.Data.DataColumn("IMPORTE_EXONERADO_MN", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            Me.columnimporte_exonerado_MN.ExtendedProperties.Add("Generator_ColumnPropNameInRow", "importe_exonerado_MN")
            Me.columnimporte_exonerado_MN.ExtendedProperties.Add("Generator_ColumnPropNameInTable", "importe_exonerado_MNColumn")
            Me.columnimporte_exonerado_MN.ExtendedProperties.Add("Generator_ColumnVarNameInTable", "columnimporte_exonerado_MN")
            Me.columnimporte_exonerado_MN.ExtendedProperties.Add("Generator_UserColumnName", "IMPORTE_EXONERADO_MN")
            MyBase.Columns.Add(Me.columnimporte_exonerado_MN)
            Me.columnimporte_inafecto_MN = New Global.System.Data.DataColumn("IMPORTE_INAFECTO_MN", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            Me.columnimporte_inafecto_MN.ExtendedProperties.Add("Generator_ColumnPropNameInRow", "importe_inafecto_MN")
            Me.columnimporte_inafecto_MN.ExtendedProperties.Add("Generator_ColumnPropNameInTable", "importe_inafecto_MNColumn")
            Me.columnimporte_inafecto_MN.ExtendedProperties.Add("Generator_ColumnVarNameInTable", "columnimporte_inafecto_MN")
            Me.columnimporte_inafecto_MN.ExtendedProperties.Add("Generator_UserColumnName", "IMPORTE_INAFECTO_MN")
            MyBase.Columns.Add(Me.columnimporte_inafecto_MN)
            Me.columnISC_MN = New Global.System.Data.DataColumn("ISC_MN", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnISC_MN)
            Me.columnIGV_MN = New Global.System.Data.DataColumn("IGV_MN", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnIGV_MN)
            Me.columnIPM_MN = New Global.System.Data.DataColumn("IPM_MN", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnIPM_MN)
            Me.columnBASE_IMPONIBLE_GRAVADA2_MN = New Global.System.Data.DataColumn("BASE_IMPONIBLE_GRAVADA2_MN", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnBASE_IMPONIBLE_GRAVADA2_MN)
            Me.columnIGV2_MN = New Global.System.Data.DataColumn("IGV2_MN", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnIGV2_MN)
            Me.columnOTROS_TRIBUTOS_MN = New Global.System.Data.DataColumn("OTROS_TRIBUTOS_MN", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnOTROS_TRIBUTOS_MN)
            Me.columnIMPORTE_TOTAL_MN = New Global.System.Data.DataColumn("IMPORTE_TOTAL_MN", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnIMPORTE_TOTAL_MN)
            Me.columnVALOR_EXPORTACION_ME = New Global.System.Data.DataColumn("VALOR_EXPORTACION_ME", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnVALOR_EXPORTACION_ME)
            Me.columnBASE_IMPONIBLE_GRAVADA_ME = New Global.System.Data.DataColumn("BASE_IMPONIBLE_GRAVADA_ME", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnBASE_IMPONIBLE_GRAVADA_ME)
            Me.columnimporte_exonerado_ME = New Global.System.Data.DataColumn("IMPORTE_EXONERADO_ME", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            Me.columnimporte_exonerado_ME.ExtendedProperties.Add("Generator_ColumnPropNameInRow", "importe_exonerado_ME")
            Me.columnimporte_exonerado_ME.ExtendedProperties.Add("Generator_ColumnPropNameInTable", "importe_exonerado_MEColumn")
            Me.columnimporte_exonerado_ME.ExtendedProperties.Add("Generator_ColumnVarNameInTable", "columnimporte_exonerado_ME")
            Me.columnimporte_exonerado_ME.ExtendedProperties.Add("Generator_UserColumnName", "IMPORTE_EXONERADO_ME")
            MyBase.Columns.Add(Me.columnimporte_exonerado_ME)
            Me.columnimporte_inafecto_ME = New Global.System.Data.DataColumn("IMPORTE_INAFECTO_ME", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            Me.columnimporte_inafecto_ME.ExtendedProperties.Add("Generator_ColumnPropNameInRow", "importe_inafecto_ME")
            Me.columnimporte_inafecto_ME.ExtendedProperties.Add("Generator_ColumnPropNameInTable", "importe_inafecto_MEColumn")
            Me.columnimporte_inafecto_ME.ExtendedProperties.Add("Generator_ColumnVarNameInTable", "columnimporte_inafecto_ME")
            Me.columnimporte_inafecto_ME.ExtendedProperties.Add("Generator_UserColumnName", "IMPORTE_INAFECTO_ME")
            MyBase.Columns.Add(Me.columnimporte_inafecto_ME)
            Me.columnISC_ME = New Global.System.Data.DataColumn("ISC_ME", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnISC_ME)
            Me.columnIGV_ME = New Global.System.Data.DataColumn("IGV_ME", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnIGV_ME)
            Me.columnIPM_ME = New Global.System.Data.DataColumn("IPM_ME", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnIPM_ME)
            Me.columnBASE_IMPONIBLE_GRAVADA2_ME = New Global.System.Data.DataColumn("BASE_IMPONIBLE_GRAVADA2_ME", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnBASE_IMPONIBLE_GRAVADA2_ME)
            Me.columnIGV2_ME = New Global.System.Data.DataColumn("IGV2_ME", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnIGV2_ME)
            Me.columnOTROS_TRIBUTOS_ME = New Global.System.Data.DataColumn("OTROS_TRIBUTOS_ME", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnOTROS_TRIBUTOS_ME)
            Me.columnIMPORTE_TOTAL_ME = New Global.System.Data.DataColumn("IMPORTE_TOTAL_ME", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnIMPORTE_TOTAL_ME)
            Me.columnESTADO = New Global.System.Data.DataColumn("ESTADO", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnESTADO)
            Me.columnGUIA_REMITENTE = New Global.System.Data.DataColumn("GUIA_REMITENTE", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnGUIA_REMITENTE)
            Me.columnCENTRO_COSTO = New Global.System.Data.DataColumn("CENTRO_COSTO", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCENTRO_COSTO)
            Me.columnPROYECTO = New Global.System.Data.DataColumn("PROYECTO", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPROYECTO)
            Me.columnUSUARIO_REGISTRO = New Global.System.Data.DataColumn("USUARIO_REGISTRO", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnUSUARIO_REGISTRO)
            Me.columnFECHA_REGISTRO = New Global.System.Data.DataColumn("FECHA_REGISTRO", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFECHA_REGISTRO)
            Me.columnUSUARIO_MODIFICA = New Global.System.Data.DataColumn("USUARIO_MODIFICA", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnUSUARIO_MODIFICA)
            Me.columnFECHA_MODIFICA = New Global.System.Data.DataColumn("FECHA_MODIFICA", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFECHA_MODIFICA)
            Me.Constraints.Add(New Global.System.Data.UniqueConstraint("Constraint1", New Global.System.Data.DataColumn() {Me.columnEMPRESA, Me.columnVENTA, Me.columnLINEA}, true))
            Me.columnEMPRESA.AllowDBNull = false
            Me.columnEMPRESA.MaxLength = 3
            Me.columnVENTA.AllowDBNull = false
            Me.columnVENTA.MaxLength = 12
            Me.columnLINEA.AllowDBNull = false
            Me.columnLINEA.MaxLength = 3
            Me.columnTIPO_CAMBIO.AllowDBNull = false
            Me.columnTIPO_MONEDA.AllowDBNull = false
            Me.columnTIPO_MONEDA.MaxLength = 1
            Me.columnGLOSA_1.AllowDBNull = false
            Me.columnGLOSA_1.MaxLength = 80
            Me.columnGLOSA_2.AllowDBNull = false
            Me.columnGLOSA_2.MaxLength = 80
            Me.columnGLOSA_3.AllowDBNull = false
            Me.columnGLOSA_3.MaxLength = 80
            Me.columnDESCUENTO_1.AllowDBNull = false
            Me.columnDESCUENTO_2.AllowDBNull = false
            Me.columnDESCUENTO_3.AllowDBNull = false
            Me.columnVALOR_EXPORTACION_ORIGEN.AllowDBNull = false
            Me.columnBASE_IMPONIBLE_GRAVADA_ORIGEN.AllowDBNull = false
            Me.columnimporte_exonerado_ORIGEN.AllowDBNull = false
            Me.columnimporte_inafecto_ORIGEN.AllowDBNull = false
            Me.columnISC_ORIGEN.AllowDBNull = false
            Me.columnIGV_ORIGEN.AllowDBNull = false
            Me.columnIPM_ORIGEN.AllowDBNull = false
            Me.columnBASE_IMPONIBLE_GRAVADA2_ORIGEN.AllowDBNull = false
            Me.columnIGV2_ORIGEN.AllowDBNull = false
            Me.columnOTROS_TRIBUTOS_ORIGEN.AllowDBNull = false
            Me.columnIMPORTE_TOTAL_ORIGEN.AllowDBNull = false
            Me.columnVALOR_EXPORTACION_MN.AllowDBNull = false
            Me.columnBASE_IMPONIBLE_GRAVADA_MN.AllowDBNull = false
            Me.columnimporte_exonerado_MN.AllowDBNull = false
            Me.columnimporte_inafecto_MN.AllowDBNull = false
            Me.columnISC_MN.AllowDBNull = false
            Me.columnIGV_MN.AllowDBNull = false
            Me.columnIPM_MN.AllowDBNull = false
            Me.columnBASE_IMPONIBLE_GRAVADA2_MN.AllowDBNull = false
            Me.columnIGV2_MN.AllowDBNull = false
            Me.columnOTROS_TRIBUTOS_MN.AllowDBNull = false
            Me.columnIMPORTE_TOTAL_MN.AllowDBNull = false
            Me.columnVALOR_EXPORTACION_ME.AllowDBNull = false
            Me.columnBASE_IMPONIBLE_GRAVADA_ME.AllowDBNull = false
            Me.columnimporte_exonerado_ME.AllowDBNull = false
            Me.columnimporte_inafecto_ME.AllowDBNull = false
            Me.columnISC_ME.AllowDBNull = false
            Me.columnIGV_ME.AllowDBNull = false
            Me.columnIPM_ME.AllowDBNull = false
            Me.columnBASE_IMPONIBLE_GRAVADA2_ME.AllowDBNull = false
            Me.columnIGV2_ME.AllowDBNull = false
            Me.columnOTROS_TRIBUTOS_ME.AllowDBNull = false
            Me.columnIMPORTE_TOTAL_ME.AllowDBNull = false
            Me.columnESTADO.AllowDBNull = false
            Me.columnESTADO.MaxLength = 1
            Me.columnGUIA_REMITENTE.AllowDBNull = false
            Me.columnGUIA_REMITENTE.MaxLength = 12
            Me.columnCENTRO_COSTO.AllowDBNull = false
            Me.columnCENTRO_COSTO.MaxLength = 20
            Me.columnPROYECTO.AllowDBNull = false
            Me.columnPROYECTO.MaxLength = 20
            Me.columnUSUARIO_REGISTRO.AllowDBNull = false
            Me.columnUSUARIO_REGISTRO.MaxLength = 20
            Me.columnFECHA_REGISTRO.AllowDBNull = false
            Me.columnUSUARIO_MODIFICA.MaxLength = 20
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function NewVENTAS_SERRow() As VENTAS_SERRow
            Return CType(Me.NewRow,VENTAS_SERRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New VENTAS_SERRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(VENTAS_SERRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.VENTAS_SERRowChangedEvent) Is Nothing) Then
                RaiseEvent VENTAS_SERRowChanged(Me, New VENTAS_SERRowChangeEvent(CType(e.Row,VENTAS_SERRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.VENTAS_SERRowChangingEvent) Is Nothing) Then
                RaiseEvent VENTAS_SERRowChanging(Me, New VENTAS_SERRowChangeEvent(CType(e.Row,VENTAS_SERRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.VENTAS_SERRowDeletedEvent) Is Nothing) Then
                RaiseEvent VENTAS_SERRowDeleted(Me, New VENTAS_SERRowChangeEvent(CType(e.Row,VENTAS_SERRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.VENTAS_SERRowDeletingEvent) Is Nothing) Then
                RaiseEvent VENTAS_SERRowDeleting(Me, New VENTAS_SERRowChangeEvent(CType(e.Row,VENTAS_SERRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub RemoveVENTAS_SERRow(ByVal row As VENTAS_SERRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence
            Dim ds As dsVentas = New dsVentas
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "VENTAS_SERDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0"),  _
     Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class VENTAS_PRODUCTOSDataTable
        Inherits Global.System.Data.TypedTableBase(Of VENTAS_PRODUCTOSRow)
        
        Private columnEJERCICIO As Global.System.Data.DataColumn
        
        Private columnMES As Global.System.Data.DataColumn
        
        Private columnALMACEN As Global.System.Data.DataColumn
        
        Private columnPRODUCTO As Global.System.Data.DataColumn
        
        Private columnNUMERO_LOTE As Global.System.Data.DataColumn
        
        Private columnCANTIDAD As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "VENTAS_PRODUCTOS"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property EJERCICIOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnEJERCICIO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property MESColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnMES
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property ALMACENColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnALMACEN
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property PRODUCTOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPRODUCTO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property NUMERO_LOTEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnNUMERO_LOTE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property CANTIDADColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCANTIDAD
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As VENTAS_PRODUCTOSRow
            Get
                Return CType(Me.Rows(index),VENTAS_PRODUCTOSRow)
            End Get
        End Property
        
        Public Event VENTAS_PRODUCTOSRowChanging As VENTAS_PRODUCTOSRowChangeEventHandler
        
        Public Event VENTAS_PRODUCTOSRowChanged As VENTAS_PRODUCTOSRowChangeEventHandler
        
        Public Event VENTAS_PRODUCTOSRowDeleting As VENTAS_PRODUCTOSRowChangeEventHandler
        
        Public Event VENTAS_PRODUCTOSRowDeleted As VENTAS_PRODUCTOSRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Sub AddVENTAS_PRODUCTOSRow(ByVal row As VENTAS_PRODUCTOSRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Function AddVENTAS_PRODUCTOSRow(ByVal EJERCICIO As String, ByVal MES As String, ByVal ALMACEN As String, ByVal PRODUCTO As String, ByVal NUMERO_LOTE As String, ByVal CANTIDAD As Decimal) As VENTAS_PRODUCTOSRow
            Dim rowVENTAS_PRODUCTOSRow As VENTAS_PRODUCTOSRow = CType(Me.NewRow,VENTAS_PRODUCTOSRow)
            Dim columnValuesArray() As Object = New Object() {EJERCICIO, MES, ALMACEN, PRODUCTO, NUMERO_LOTE, CANTIDAD}
            rowVENTAS_PRODUCTOSRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowVENTAS_PRODUCTOSRow)
            Return rowVENTAS_PRODUCTOSRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As VENTAS_PRODUCTOSDataTable = CType(MyBase.Clone,VENTAS_PRODUCTOSDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New VENTAS_PRODUCTOSDataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub InitVars()
            Me.columnEJERCICIO = MyBase.Columns("EJERCICIO")
            Me.columnMES = MyBase.Columns("MES")
            Me.columnALMACEN = MyBase.Columns("ALMACEN")
            Me.columnPRODUCTO = MyBase.Columns("PRODUCTO")
            Me.columnNUMERO_LOTE = MyBase.Columns("NUMERO_LOTE")
            Me.columnCANTIDAD = MyBase.Columns("CANTIDAD")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitClass()
            Me.columnEJERCICIO = New Global.System.Data.DataColumn("EJERCICIO", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnEJERCICIO)
            Me.columnMES = New Global.System.Data.DataColumn("MES", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMES)
            Me.columnALMACEN = New Global.System.Data.DataColumn("ALMACEN", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnALMACEN)
            Me.columnPRODUCTO = New Global.System.Data.DataColumn("PRODUCTO", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPRODUCTO)
            Me.columnNUMERO_LOTE = New Global.System.Data.DataColumn("NUMERO_LOTE", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnNUMERO_LOTE)
            Me.columnCANTIDAD = New Global.System.Data.DataColumn("CANTIDAD", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCANTIDAD)
            Me.columnEJERCICIO.AllowDBNull = false
            Me.columnEJERCICIO.MaxLength = 4
            Me.columnMES.AllowDBNull = false
            Me.columnMES.MaxLength = 2
            Me.columnALMACEN.AllowDBNull = false
            Me.columnALMACEN.MaxLength = 3
            Me.columnPRODUCTO.AllowDBNull = false
            Me.columnPRODUCTO.MaxLength = 8
            Me.columnNUMERO_LOTE.AllowDBNull = false
            Me.columnNUMERO_LOTE.MaxLength = 10
            Me.columnCANTIDAD.AllowDBNull = false
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function NewVENTAS_PRODUCTOSRow() As VENTAS_PRODUCTOSRow
            Return CType(Me.NewRow,VENTAS_PRODUCTOSRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New VENTAS_PRODUCTOSRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(VENTAS_PRODUCTOSRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.VENTAS_PRODUCTOSRowChangedEvent) Is Nothing) Then
                RaiseEvent VENTAS_PRODUCTOSRowChanged(Me, New VENTAS_PRODUCTOSRowChangeEvent(CType(e.Row,VENTAS_PRODUCTOSRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.VENTAS_PRODUCTOSRowChangingEvent) Is Nothing) Then
                RaiseEvent VENTAS_PRODUCTOSRowChanging(Me, New VENTAS_PRODUCTOSRowChangeEvent(CType(e.Row,VENTAS_PRODUCTOSRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.VENTAS_PRODUCTOSRowDeletedEvent) Is Nothing) Then
                RaiseEvent VENTAS_PRODUCTOSRowDeleted(Me, New VENTAS_PRODUCTOSRowChangeEvent(CType(e.Row,VENTAS_PRODUCTOSRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.VENTAS_PRODUCTOSRowDeletingEvent) Is Nothing) Then
                RaiseEvent VENTAS_PRODUCTOSRowDeleting(Me, New VENTAS_PRODUCTOSRowChangeEvent(CType(e.Row,VENTAS_PRODUCTOSRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub RemoveVENTAS_PRODUCTOSRow(ByVal row As VENTAS_PRODUCTOSRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence
            Dim ds As dsVentas = New dsVentas
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "VENTAS_PRODUCTOSDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0"),  _
     Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class VENTAS_PEDIDODataTable
        Inherits Global.System.Data.TypedTableBase(Of VENTAS_PEDIDORow)
        
        Private columnLINEA As Global.System.Data.DataColumn
        
        Private columnPRODUCTO As Global.System.Data.DataColumn
        
        Private columnCANTIDAD As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "VENTAS_PEDIDO"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property LINEAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnLINEA
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property PRODUCTOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPRODUCTO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property CANTIDADColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCANTIDAD
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As VENTAS_PEDIDORow
            Get
                Return CType(Me.Rows(index),VENTAS_PEDIDORow)
            End Get
        End Property
        
        Public Event VENTAS_PEDIDORowChanging As VENTAS_PEDIDORowChangeEventHandler
        
        Public Event VENTAS_PEDIDORowChanged As VENTAS_PEDIDORowChangeEventHandler
        
        Public Event VENTAS_PEDIDORowDeleting As VENTAS_PEDIDORowChangeEventHandler
        
        Public Event VENTAS_PEDIDORowDeleted As VENTAS_PEDIDORowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Sub AddVENTAS_PEDIDORow(ByVal row As VENTAS_PEDIDORow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Function AddVENTAS_PEDIDORow(ByVal LINEA As String, ByVal PRODUCTO As String, ByVal CANTIDAD As Decimal) As VENTAS_PEDIDORow
            Dim rowVENTAS_PEDIDORow As VENTAS_PEDIDORow = CType(Me.NewRow,VENTAS_PEDIDORow)
            Dim columnValuesArray() As Object = New Object() {LINEA, PRODUCTO, CANTIDAD}
            rowVENTAS_PEDIDORow.ItemArray = columnValuesArray
            Me.Rows.Add(rowVENTAS_PEDIDORow)
            Return rowVENTAS_PEDIDORow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As VENTAS_PEDIDODataTable = CType(MyBase.Clone,VENTAS_PEDIDODataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New VENTAS_PEDIDODataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub InitVars()
            Me.columnLINEA = MyBase.Columns("LINEA")
            Me.columnPRODUCTO = MyBase.Columns("PRODUCTO")
            Me.columnCANTIDAD = MyBase.Columns("CANTIDAD")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitClass()
            Me.columnLINEA = New Global.System.Data.DataColumn("LINEA", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnLINEA)
            Me.columnPRODUCTO = New Global.System.Data.DataColumn("PRODUCTO", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPRODUCTO)
            Me.columnCANTIDAD = New Global.System.Data.DataColumn("CANTIDAD", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCANTIDAD)
            Me.columnLINEA.AllowDBNull = false
            Me.columnLINEA.MaxLength = 3
            Me.columnPRODUCTO.AllowDBNull = false
            Me.columnPRODUCTO.MaxLength = 8
            Me.columnCANTIDAD.AllowDBNull = false
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function NewVENTAS_PEDIDORow() As VENTAS_PEDIDORow
            Return CType(Me.NewRow,VENTAS_PEDIDORow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New VENTAS_PEDIDORow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(VENTAS_PEDIDORow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.VENTAS_PEDIDORowChangedEvent) Is Nothing) Then
                RaiseEvent VENTAS_PEDIDORowChanged(Me, New VENTAS_PEDIDORowChangeEvent(CType(e.Row,VENTAS_PEDIDORow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.VENTAS_PEDIDORowChangingEvent) Is Nothing) Then
                RaiseEvent VENTAS_PEDIDORowChanging(Me, New VENTAS_PEDIDORowChangeEvent(CType(e.Row,VENTAS_PEDIDORow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.VENTAS_PEDIDORowDeletedEvent) Is Nothing) Then
                RaiseEvent VENTAS_PEDIDORowDeleted(Me, New VENTAS_PEDIDORowChangeEvent(CType(e.Row,VENTAS_PEDIDORow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.VENTAS_PEDIDORowDeletingEvent) Is Nothing) Then
                RaiseEvent VENTAS_PEDIDORowDeleting(Me, New VENTAS_PEDIDORowChangeEvent(CType(e.Row,VENTAS_PEDIDORow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub RemoveVENTAS_PEDIDORow(ByVal row As VENTAS_PEDIDORow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence
            Dim ds As dsVentas = New dsVentas
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "VENTAS_PEDIDODataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0"),  _
     Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class VENTAS_LISTADataTable
        Inherits Global.System.Data.TypedTableBase(Of VENTAS_LISTARow)
        
        Private columnVENTA As Global.System.Data.DataColumn
        
        Private columnCOMPROBANTE_FECHA As Global.System.Data.DataColumn
        
        Private columnCOMPROBANTE_SERIE As Global.System.Data.DataColumn
        
        Private columnCOMPROBANTE_NUMERO As Global.System.Data.DataColumn
        
        Private columnRAZON_SOCIAL As Global.System.Data.DataColumn
        
        Private columnVENDEDOR As Global.System.Data.DataColumn
        
        Private columnVENDEDOR_NOMBRE As Global.System.Data.DataColumn
        
        Private columnMONEDA As Global.System.Data.DataColumn
        
        Private columnBASE_IMPONIBLE_GRAVADA_ORIGEN As Global.System.Data.DataColumn
        
        Private columnIGV_ORIGEN As Global.System.Data.DataColumn
        
        Private columnIMPORTE_TOTAL_ORIGEN As Global.System.Data.DataColumn
        
        Private columnESTADO As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "VENTAS_LISTA"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property VENTAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnVENTA
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property COMPROBANTE_FECHAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCOMPROBANTE_FECHA
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property COMPROBANTE_SERIEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCOMPROBANTE_SERIE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property COMPROBANTE_NUMEROColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCOMPROBANTE_NUMERO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property RAZON_SOCIALColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnRAZON_SOCIAL
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property VENDEDORColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnVENDEDOR
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property VENDEDOR_NOMBREColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnVENDEDOR_NOMBRE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property MONEDAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnMONEDA
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property BASE_IMPONIBLE_GRAVADA_ORIGENColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnBASE_IMPONIBLE_GRAVADA_ORIGEN
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property IGV_ORIGENColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnIGV_ORIGEN
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property IMPORTE_TOTAL_ORIGENColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnIMPORTE_TOTAL_ORIGEN
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property ESTADOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnESTADO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As VENTAS_LISTARow
            Get
                Return CType(Me.Rows(index),VENTAS_LISTARow)
            End Get
        End Property
        
        Public Event VENTAS_LISTARowChanging As VENTAS_LISTARowChangeEventHandler
        
        Public Event VENTAS_LISTARowChanged As VENTAS_LISTARowChangeEventHandler
        
        Public Event VENTAS_LISTARowDeleting As VENTAS_LISTARowChangeEventHandler
        
        Public Event VENTAS_LISTARowDeleted As VENTAS_LISTARowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Sub AddVENTAS_LISTARow(ByVal row As VENTAS_LISTARow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Function AddVENTAS_LISTARow(ByVal VENTA As String, ByVal COMPROBANTE_FECHA As Date, ByVal COMPROBANTE_SERIE As String, ByVal COMPROBANTE_NUMERO As String, ByVal RAZON_SOCIAL As String, ByVal VENDEDOR As String, ByVal VENDEDOR_NOMBRE As String, ByVal MONEDA As String, ByVal BASE_IMPONIBLE_GRAVADA_ORIGEN As Decimal, ByVal IGV_ORIGEN As Decimal, ByVal IMPORTE_TOTAL_ORIGEN As Decimal, ByVal ESTADO As String) As VENTAS_LISTARow
            Dim rowVENTAS_LISTARow As VENTAS_LISTARow = CType(Me.NewRow,VENTAS_LISTARow)
            Dim columnValuesArray() As Object = New Object() {VENTA, COMPROBANTE_FECHA, COMPROBANTE_SERIE, COMPROBANTE_NUMERO, RAZON_SOCIAL, VENDEDOR, VENDEDOR_NOMBRE, MONEDA, BASE_IMPONIBLE_GRAVADA_ORIGEN, IGV_ORIGEN, IMPORTE_TOTAL_ORIGEN, ESTADO}
            rowVENTAS_LISTARow.ItemArray = columnValuesArray
            Me.Rows.Add(rowVENTAS_LISTARow)
            Return rowVENTAS_LISTARow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As VENTAS_LISTADataTable = CType(MyBase.Clone,VENTAS_LISTADataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New VENTAS_LISTADataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub InitVars()
            Me.columnVENTA = MyBase.Columns("VENTA")
            Me.columnCOMPROBANTE_FECHA = MyBase.Columns("COMPROBANTE_FECHA")
            Me.columnCOMPROBANTE_SERIE = MyBase.Columns("COMPROBANTE_SERIE")
            Me.columnCOMPROBANTE_NUMERO = MyBase.Columns("COMPROBANTE_NUMERO")
            Me.columnRAZON_SOCIAL = MyBase.Columns("RAZON_SOCIAL")
            Me.columnVENDEDOR = MyBase.Columns("VENDEDOR")
            Me.columnVENDEDOR_NOMBRE = MyBase.Columns("VENDEDOR_NOMBRE")
            Me.columnMONEDA = MyBase.Columns("MONEDA")
            Me.columnBASE_IMPONIBLE_GRAVADA_ORIGEN = MyBase.Columns("BASE_IMPONIBLE_GRAVADA_ORIGEN")
            Me.columnIGV_ORIGEN = MyBase.Columns("IGV_ORIGEN")
            Me.columnIMPORTE_TOTAL_ORIGEN = MyBase.Columns("IMPORTE_TOTAL_ORIGEN")
            Me.columnESTADO = MyBase.Columns("ESTADO")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitClass()
            Me.columnVENTA = New Global.System.Data.DataColumn("VENTA", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnVENTA)
            Me.columnCOMPROBANTE_FECHA = New Global.System.Data.DataColumn("COMPROBANTE_FECHA", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCOMPROBANTE_FECHA)
            Me.columnCOMPROBANTE_SERIE = New Global.System.Data.DataColumn("COMPROBANTE_SERIE", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCOMPROBANTE_SERIE)
            Me.columnCOMPROBANTE_NUMERO = New Global.System.Data.DataColumn("COMPROBANTE_NUMERO", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCOMPROBANTE_NUMERO)
            Me.columnRAZON_SOCIAL = New Global.System.Data.DataColumn("RAZON_SOCIAL", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRAZON_SOCIAL)
            Me.columnVENDEDOR = New Global.System.Data.DataColumn("VENDEDOR", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnVENDEDOR)
            Me.columnVENDEDOR_NOMBRE = New Global.System.Data.DataColumn("VENDEDOR_NOMBRE", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnVENDEDOR_NOMBRE)
            Me.columnMONEDA = New Global.System.Data.DataColumn("MONEDA", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMONEDA)
            Me.columnBASE_IMPONIBLE_GRAVADA_ORIGEN = New Global.System.Data.DataColumn("BASE_IMPONIBLE_GRAVADA_ORIGEN", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnBASE_IMPONIBLE_GRAVADA_ORIGEN)
            Me.columnIGV_ORIGEN = New Global.System.Data.DataColumn("IGV_ORIGEN", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnIGV_ORIGEN)
            Me.columnIMPORTE_TOTAL_ORIGEN = New Global.System.Data.DataColumn("IMPORTE_TOTAL_ORIGEN", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnIMPORTE_TOTAL_ORIGEN)
            Me.columnESTADO = New Global.System.Data.DataColumn("ESTADO", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnESTADO)
            Me.columnVENTA.AllowDBNull = false
            Me.columnVENTA.Caption = "ORDEN_PEDIDO"
            Me.columnVENTA.MaxLength = 12
            Me.columnCOMPROBANTE_FECHA.AllowDBNull = false
            Me.columnCOMPROBANTE_SERIE.AllowDBNull = false
            Me.columnCOMPROBANTE_SERIE.MaxLength = 4
            Me.columnCOMPROBANTE_NUMERO.AllowDBNull = false
            Me.columnCOMPROBANTE_NUMERO.MaxLength = 10
            Me.columnRAZON_SOCIAL.AllowDBNull = false
            Me.columnRAZON_SOCIAL.MaxLength = 100
            Me.columnVENDEDOR.AllowDBNull = false
            Me.columnVENDEDOR.MaxLength = 20
            Me.columnVENDEDOR_NOMBRE.AllowDBNull = false
            Me.columnVENDEDOR_NOMBRE.MaxLength = 50
            Me.columnMONEDA.AllowDBNull = false
            Me.columnMONEDA.MaxLength = 50
            Me.columnBASE_IMPONIBLE_GRAVADA_ORIGEN.AllowDBNull = false
            Me.columnIGV_ORIGEN.AllowDBNull = false
            Me.columnIMPORTE_TOTAL_ORIGEN.AllowDBNull = false
            Me.columnESTADO.AllowDBNull = false
            Me.columnESTADO.MaxLength = 1
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function NewVENTAS_LISTARow() As VENTAS_LISTARow
            Return CType(Me.NewRow,VENTAS_LISTARow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New VENTAS_LISTARow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(VENTAS_LISTARow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.VENTAS_LISTARowChangedEvent) Is Nothing) Then
                RaiseEvent VENTAS_LISTARowChanged(Me, New VENTAS_LISTARowChangeEvent(CType(e.Row,VENTAS_LISTARow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.VENTAS_LISTARowChangingEvent) Is Nothing) Then
                RaiseEvent VENTAS_LISTARowChanging(Me, New VENTAS_LISTARowChangeEvent(CType(e.Row,VENTAS_LISTARow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.VENTAS_LISTARowDeletedEvent) Is Nothing) Then
                RaiseEvent VENTAS_LISTARowDeleted(Me, New VENTAS_LISTARowChangeEvent(CType(e.Row,VENTAS_LISTARow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.VENTAS_LISTARowDeletingEvent) Is Nothing) Then
                RaiseEvent VENTAS_LISTARowDeleting(Me, New VENTAS_LISTARowChangeEvent(CType(e.Row,VENTAS_LISTARow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub RemoveVENTAS_LISTARow(ByVal row As VENTAS_LISTARow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence
            Dim ds As dsVentas = New dsVentas
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "VENTAS_LISTADataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0"),  _
     Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class VENTAS_DETALLEDataTable
        Inherits Global.System.Data.TypedTableBase(Of VENTAS_DETALLERow)
        
        Private columnEMPRESA As Global.System.Data.DataColumn
        
        Private columnVENTA As Global.System.Data.DataColumn
        
        Private columnLINEA As Global.System.Data.DataColumn
        
        Private columnPRODUCTO As Global.System.Data.DataColumn
        
        Private columnDESCRIPCION_AMPLIADA As Global.System.Data.DataColumn
        
        Private columnCANTIDAD As Global.System.Data.DataColumn
        
        Private columnPRECIO_UNITARIO_ME As Global.System.Data.DataColumn
        
        Private columnIMPORTE_TOTAL_ME As Global.System.Data.DataColumn
        
        Private columnNUMERO_LOTE As Global.System.Data.DataColumn
        
        Private columnINDICA_COMPUESTO As Global.System.Data.DataColumn
        
        Private columnINDICA_VALIDA_STOCK As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "VENTAS_DETALLE"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property EMPRESAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnEMPRESA
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property VENTAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnVENTA
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property LINEAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnLINEA
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property PRODUCTOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPRODUCTO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property DESCRIPCION_AMPLIADAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDESCRIPCION_AMPLIADA
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property CANTIDADColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCANTIDAD
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property PRECIO_UNITARIO_MEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPRECIO_UNITARIO_ME
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property IMPORTE_TOTAL_MEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnIMPORTE_TOTAL_ME
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property NUMERO_LOTEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnNUMERO_LOTE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property INDICA_COMPUESTOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnINDICA_COMPUESTO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property INDICA_VALIDA_STOCKColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnINDICA_VALIDA_STOCK
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As VENTAS_DETALLERow
            Get
                Return CType(Me.Rows(index),VENTAS_DETALLERow)
            End Get
        End Property
        
        Public Event VENTAS_DETALLERowChanging As VENTAS_DETALLERowChangeEventHandler
        
        Public Event VENTAS_DETALLERowChanged As VENTAS_DETALLERowChangeEventHandler
        
        Public Event VENTAS_DETALLERowDeleting As VENTAS_DETALLERowChangeEventHandler
        
        Public Event VENTAS_DETALLERowDeleted As VENTAS_DETALLERowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Sub AddVENTAS_DETALLERow(ByVal row As VENTAS_DETALLERow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Function AddVENTAS_DETALLERow(ByVal EMPRESA As String, ByVal VENTA As String, ByVal LINEA As String, ByVal PRODUCTO As String, ByVal DESCRIPCION_AMPLIADA As String, ByVal CANTIDAD As Decimal, ByVal PRECIO_UNITARIO_ME As Decimal, ByVal IMPORTE_TOTAL_ME As Decimal, ByVal NUMERO_LOTE As String, ByVal INDICA_COMPUESTO As String, ByVal INDICA_VALIDA_STOCK As String) As VENTAS_DETALLERow
            Dim rowVENTAS_DETALLERow As VENTAS_DETALLERow = CType(Me.NewRow,VENTAS_DETALLERow)
            Dim columnValuesArray() As Object = New Object() {EMPRESA, VENTA, LINEA, PRODUCTO, DESCRIPCION_AMPLIADA, CANTIDAD, PRECIO_UNITARIO_ME, IMPORTE_TOTAL_ME, NUMERO_LOTE, INDICA_COMPUESTO, INDICA_VALIDA_STOCK}
            rowVENTAS_DETALLERow.ItemArray = columnValuesArray
            Me.Rows.Add(rowVENTAS_DETALLERow)
            Return rowVENTAS_DETALLERow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function FindByEMPRESAVENTALINEA(ByVal EMPRESA As String, ByVal VENTA As String, ByVal LINEA As String) As VENTAS_DETALLERow
            Return CType(Me.Rows.Find(New Object() {EMPRESA, VENTA, LINEA}),VENTAS_DETALLERow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As VENTAS_DETALLEDataTable = CType(MyBase.Clone,VENTAS_DETALLEDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New VENTAS_DETALLEDataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub InitVars()
            Me.columnEMPRESA = MyBase.Columns("EMPRESA")
            Me.columnVENTA = MyBase.Columns("VENTA")
            Me.columnLINEA = MyBase.Columns("LINEA")
            Me.columnPRODUCTO = MyBase.Columns("PRODUCTO")
            Me.columnDESCRIPCION_AMPLIADA = MyBase.Columns("DESCRIPCION_AMPLIADA")
            Me.columnCANTIDAD = MyBase.Columns("CANTIDAD")
            Me.columnPRECIO_UNITARIO_ME = MyBase.Columns("PRECIO_UNITARIO_ME")
            Me.columnIMPORTE_TOTAL_ME = MyBase.Columns("IMPORTE_TOTAL_ME")
            Me.columnNUMERO_LOTE = MyBase.Columns("NUMERO_LOTE")
            Me.columnINDICA_COMPUESTO = MyBase.Columns("INDICA_COMPUESTO")
            Me.columnINDICA_VALIDA_STOCK = MyBase.Columns("INDICA_VALIDA_STOCK")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitClass()
            Me.columnEMPRESA = New Global.System.Data.DataColumn("EMPRESA", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnEMPRESA)
            Me.columnVENTA = New Global.System.Data.DataColumn("VENTA", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnVENTA)
            Me.columnLINEA = New Global.System.Data.DataColumn("LINEA", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnLINEA)
            Me.columnPRODUCTO = New Global.System.Data.DataColumn("PRODUCTO", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPRODUCTO)
            Me.columnDESCRIPCION_AMPLIADA = New Global.System.Data.DataColumn("DESCRIPCION_AMPLIADA", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDESCRIPCION_AMPLIADA)
            Me.columnCANTIDAD = New Global.System.Data.DataColumn("CANTIDAD", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCANTIDAD)
            Me.columnPRECIO_UNITARIO_ME = New Global.System.Data.DataColumn("PRECIO_UNITARIO_ME", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPRECIO_UNITARIO_ME)
            Me.columnIMPORTE_TOTAL_ME = New Global.System.Data.DataColumn("IMPORTE_TOTAL_ME", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnIMPORTE_TOTAL_ME)
            Me.columnNUMERO_LOTE = New Global.System.Data.DataColumn("NUMERO_LOTE", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnNUMERO_LOTE)
            Me.columnINDICA_COMPUESTO = New Global.System.Data.DataColumn("INDICA_COMPUESTO", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnINDICA_COMPUESTO)
            Me.columnINDICA_VALIDA_STOCK = New Global.System.Data.DataColumn("INDICA_VALIDA_STOCK", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnINDICA_VALIDA_STOCK)
            Me.Constraints.Add(New Global.System.Data.UniqueConstraint("Constraint1", New Global.System.Data.DataColumn() {Me.columnEMPRESA, Me.columnVENTA, Me.columnLINEA}, true))
            Me.columnEMPRESA.AllowDBNull = false
            Me.columnEMPRESA.MaxLength = 3
            Me.columnVENTA.AllowDBNull = false
            Me.columnVENTA.MaxLength = 12
            Me.columnLINEA.AllowDBNull = false
            Me.columnLINEA.MaxLength = 3
            Me.columnPRODUCTO.AllowDBNull = false
            Me.columnPRODUCTO.MaxLength = 8
            Me.columnDESCRIPCION_AMPLIADA.AllowDBNull = false
            Me.columnDESCRIPCION_AMPLIADA.MaxLength = 200
            Me.columnCANTIDAD.AllowDBNull = false
            Me.columnPRECIO_UNITARIO_ME.AllowDBNull = false
            Me.columnPRECIO_UNITARIO_ME.Caption = "PRECIO_UNITARIO"
            Me.columnIMPORTE_TOTAL_ME.AllowDBNull = false
            Me.columnNUMERO_LOTE.AllowDBNull = false
            Me.columnNUMERO_LOTE.MaxLength = 10
            Me.columnINDICA_COMPUESTO.AllowDBNull = false
            Me.columnINDICA_COMPUESTO.MaxLength = 2
            Me.columnINDICA_VALIDA_STOCK.AllowDBNull = false
            Me.columnINDICA_VALIDA_STOCK.MaxLength = 2
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function NewVENTAS_DETALLERow() As VENTAS_DETALLERow
            Return CType(Me.NewRow,VENTAS_DETALLERow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New VENTAS_DETALLERow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(VENTAS_DETALLERow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.VENTAS_DETALLERowChangedEvent) Is Nothing) Then
                RaiseEvent VENTAS_DETALLERowChanged(Me, New VENTAS_DETALLERowChangeEvent(CType(e.Row,VENTAS_DETALLERow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.VENTAS_DETALLERowChangingEvent) Is Nothing) Then
                RaiseEvent VENTAS_DETALLERowChanging(Me, New VENTAS_DETALLERowChangeEvent(CType(e.Row,VENTAS_DETALLERow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.VENTAS_DETALLERowDeletedEvent) Is Nothing) Then
                RaiseEvent VENTAS_DETALLERowDeleted(Me, New VENTAS_DETALLERowChangeEvent(CType(e.Row,VENTAS_DETALLERow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.VENTAS_DETALLERowDeletingEvent) Is Nothing) Then
                RaiseEvent VENTAS_DETALLERowDeleting(Me, New VENTAS_DETALLERowChangeEvent(CType(e.Row,VENTAS_DETALLERow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub RemoveVENTAS_DETALLERow(ByVal row As VENTAS_DETALLERow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence
            Dim ds As dsVentas = New dsVentas
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "VENTAS_DETALLEDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Partial Public Class VENTASRow
        Inherits Global.System.Data.DataRow
        
        Private tableVENTAS As VENTASDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableVENTAS = CType(Me.Table,VENTASDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property EMPRESA() As String
            Get
                Return CType(Me(Me.tableVENTAS.EMPRESAColumn),String)
            End Get
            Set
                Me(Me.tableVENTAS.EMPRESAColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property VENTA() As String
            Get
                Return CType(Me(Me.tableVENTAS.VENTAColumn),String)
            End Get
            Set
                Me(Me.tableVENTAS.VENTAColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property EJERCICIO() As String
            Get
                Return CType(Me(Me.tableVENTAS.EJERCICIOColumn),String)
            End Get
            Set
                Me(Me.tableVENTAS.EJERCICIOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property MES() As String
            Get
                Return CType(Me(Me.tableVENTAS.MESColumn),String)
            End Get
            Set
                Me(Me.tableVENTAS.MESColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property ASIENTO_TIPO() As String
            Get
                Return CType(Me(Me.tableVENTAS.ASIENTO_TIPOColumn),String)
            End Get
            Set
                Me(Me.tableVENTAS.ASIENTO_TIPOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property ASIENTO_NUMERO() As String
            Get
                Return CType(Me(Me.tableVENTAS.ASIENTO_NUMEROColumn),String)
            End Get
            Set
                Me(Me.tableVENTAS.ASIENTO_NUMEROColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property ASIENTO_FECHA() As Date
            Get
                Return CType(Me(Me.tableVENTAS.ASIENTO_FECHAColumn),Date)
            End Get
            Set
                Me(Me.tableVENTAS.ASIENTO_FECHAColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property CUENTA_COMERCIAL() As String
            Get
                Return CType(Me(Me.tableVENTAS.CUENTA_COMERCIALColumn),String)
            End Get
            Set
                Me(Me.tableVENTAS.CUENTA_COMERCIALColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property COMPROBANTE_TIPO() As String
            Get
                Return CType(Me(Me.tableVENTAS.COMPROBANTE_TIPOColumn),String)
            End Get
            Set
                Me(Me.tableVENTAS.COMPROBANTE_TIPOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property COMPROBANTE_SERIE() As String
            Get
                Return CType(Me(Me.tableVENTAS.COMPROBANTE_SERIEColumn),String)
            End Get
            Set
                Me(Me.tableVENTAS.COMPROBANTE_SERIEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property COMPROBANTE_NUMERO() As String
            Get
                Return CType(Me(Me.tableVENTAS.COMPROBANTE_NUMEROColumn),String)
            End Get
            Set
                Me(Me.tableVENTAS.COMPROBANTE_NUMEROColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property COMPROBANTE_FECHA() As Date
            Get
                Return CType(Me(Me.tableVENTAS.COMPROBANTE_FECHAColumn),Date)
            End Get
            Set
                Me(Me.tableVENTAS.COMPROBANTE_FECHAColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property COMPROBANTE_VENCIMIENTO() As Date
            Get
                Return CType(Me(Me.tableVENTAS.COMPROBANTE_VENCIMIENTOColumn),Date)
            End Get
            Set
                Me(Me.tableVENTAS.COMPROBANTE_VENCIMIENTOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property TIPO_CAMBIO() As Decimal
            Get
                Return CType(Me(Me.tableVENTAS.TIPO_CAMBIOColumn),Decimal)
            End Get
            Set
                Me(Me.tableVENTAS.TIPO_CAMBIOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property TIPO_MONEDA() As String
            Get
                Return CType(Me(Me.tableVENTAS.TIPO_MONEDAColumn),String)
            End Get
            Set
                Me(Me.tableVENTAS.TIPO_MONEDAColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property ALMACEN() As String
            Get
                Return CType(Me(Me.tableVENTAS.ALMACENColumn),String)
            End Get
            Set
                Me(Me.tableVENTAS.ALMACENColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property LISTA_PRECIO() As String
            Get
                Try 
                    Return CType(Me(Me.tableVENTAS.LISTA_PRECIOColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'LISTA_PRECIO' de la tabla 'VENTAS' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVENTAS.LISTA_PRECIOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property CENTRO_DISTRIBUCION() As String
            Get
                Try 
                    Return CType(Me(Me.tableVENTAS.CENTRO_DISTRIBUCIONColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'CENTRO_DISTRIBUCION' de la tabla 'VENTAS' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVENTAS.CENTRO_DISTRIBUCIONColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property CODIGO_DOMICILIO() As String
            Get
                Return CType(Me(Me.tableVENTAS.CODIGO_DOMICILIOColumn),String)
            End Get
            Set
                Me(Me.tableVENTAS.CODIGO_DOMICILIOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property VALOR_EXPORTACION_ORIGEN() As Decimal
            Get
                Return CType(Me(Me.tableVENTAS.VALOR_EXPORTACION_ORIGENColumn),Decimal)
            End Get
            Set
                Me(Me.tableVENTAS.VALOR_EXPORTACION_ORIGENColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property BASE_IMPONIBLE_GRAVADA_ORIGEN() As Decimal
            Get
                Return CType(Me(Me.tableVENTAS.BASE_IMPONIBLE_GRAVADA_ORIGENColumn),Decimal)
            End Get
            Set
                Me(Me.tableVENTAS.BASE_IMPONIBLE_GRAVADA_ORIGENColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property importe_exonerado_ORIGEN() As Decimal
            Get
                Return CType(Me(Me.tableVENTAS.importe_exonerado_ORIGENColumn),Decimal)
            End Get
            Set
                Me(Me.tableVENTAS.importe_exonerado_ORIGENColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property importe_inafecto_ORIGEN() As Decimal
            Get
                Return CType(Me(Me.tableVENTAS.importe_inafecto_ORIGENColumn),Decimal)
            End Get
            Set
                Me(Me.tableVENTAS.importe_inafecto_ORIGENColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property ISC_ORIGEN() As Decimal
            Get
                Return CType(Me(Me.tableVENTAS.ISC_ORIGENColumn),Decimal)
            End Get
            Set
                Me(Me.tableVENTAS.ISC_ORIGENColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property IGV_ORIGEN() As Decimal
            Get
                Return CType(Me(Me.tableVENTAS.IGV_ORIGENColumn),Decimal)
            End Get
            Set
                Me(Me.tableVENTAS.IGV_ORIGENColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property IPM_ORIGEN() As Decimal
            Get
                Return CType(Me(Me.tableVENTAS.IPM_ORIGENColumn),Decimal)
            End Get
            Set
                Me(Me.tableVENTAS.IPM_ORIGENColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property BASE_IMPONIBLE_GRAVADA2_ORIGEN() As Decimal
            Get
                Return CType(Me(Me.tableVENTAS.BASE_IMPONIBLE_GRAVADA2_ORIGENColumn),Decimal)
            End Get
            Set
                Me(Me.tableVENTAS.BASE_IMPONIBLE_GRAVADA2_ORIGENColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property IGV2_ORIGEN() As Decimal
            Get
                Return CType(Me(Me.tableVENTAS.IGV2_ORIGENColumn),Decimal)
            End Get
            Set
                Me(Me.tableVENTAS.IGV2_ORIGENColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property OTROS_TRIBUTOS_ORIGEN() As Decimal
            Get
                Return CType(Me(Me.tableVENTAS.OTROS_TRIBUTOS_ORIGENColumn),Decimal)
            End Get
            Set
                Me(Me.tableVENTAS.OTROS_TRIBUTOS_ORIGENColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property IMPORTE_TOTAL_ORIGEN() As Decimal
            Get
                Return CType(Me(Me.tableVENTAS.IMPORTE_TOTAL_ORIGENColumn),Decimal)
            End Get
            Set
                Me(Me.tableVENTAS.IMPORTE_TOTAL_ORIGENColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property VALOR_EXPORTACION_MN() As Decimal
            Get
                Return CType(Me(Me.tableVENTAS.VALOR_EXPORTACION_MNColumn),Decimal)
            End Get
            Set
                Me(Me.tableVENTAS.VALOR_EXPORTACION_MNColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property BASE_IMPONIBLE_GRAVADA_MN() As Decimal
            Get
                Return CType(Me(Me.tableVENTAS.BASE_IMPONIBLE_GRAVADA_MNColumn),Decimal)
            End Get
            Set
                Me(Me.tableVENTAS.BASE_IMPONIBLE_GRAVADA_MNColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property importe_exonerado_MN() As Decimal
            Get
                Return CType(Me(Me.tableVENTAS.importe_exonerado_MNColumn),Decimal)
            End Get
            Set
                Me(Me.tableVENTAS.importe_exonerado_MNColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property importe_inafecto_MN() As Decimal
            Get
                Return CType(Me(Me.tableVENTAS.importe_inafecto_MNColumn),Decimal)
            End Get
            Set
                Me(Me.tableVENTAS.importe_inafecto_MNColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property ISC_MN() As Decimal
            Get
                Return CType(Me(Me.tableVENTAS.ISC_MNColumn),Decimal)
            End Get
            Set
                Me(Me.tableVENTAS.ISC_MNColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property IGV_MN() As Decimal
            Get
                Return CType(Me(Me.tableVENTAS.IGV_MNColumn),Decimal)
            End Get
            Set
                Me(Me.tableVENTAS.IGV_MNColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property IPM_MN() As Decimal
            Get
                Return CType(Me(Me.tableVENTAS.IPM_MNColumn),Decimal)
            End Get
            Set
                Me(Me.tableVENTAS.IPM_MNColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property BASE_IMPONIBLE_GRAVADA2_MN() As Decimal
            Get
                Return CType(Me(Me.tableVENTAS.BASE_IMPONIBLE_GRAVADA2_MNColumn),Decimal)
            End Get
            Set
                Me(Me.tableVENTAS.BASE_IMPONIBLE_GRAVADA2_MNColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property IGV2_MN() As Decimal
            Get
                Return CType(Me(Me.tableVENTAS.IGV2_MNColumn),Decimal)
            End Get
            Set
                Me(Me.tableVENTAS.IGV2_MNColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property OTROS_TRIBUTOS_MN() As Decimal
            Get
                Return CType(Me(Me.tableVENTAS.OTROS_TRIBUTOS_MNColumn),Decimal)
            End Get
            Set
                Me(Me.tableVENTAS.OTROS_TRIBUTOS_MNColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property IMPORTE_TOTAL_MN() As Decimal
            Get
                Return CType(Me(Me.tableVENTAS.IMPORTE_TOTAL_MNColumn),Decimal)
            End Get
            Set
                Me(Me.tableVENTAS.IMPORTE_TOTAL_MNColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property VALOR_EXPORTACION_ME() As Decimal
            Get
                Return CType(Me(Me.tableVENTAS.VALOR_EXPORTACION_MEColumn),Decimal)
            End Get
            Set
                Me(Me.tableVENTAS.VALOR_EXPORTACION_MEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property BASE_IMPONIBLE_GRAVADA_ME() As Decimal
            Get
                Return CType(Me(Me.tableVENTAS.BASE_IMPONIBLE_GRAVADA_MEColumn),Decimal)
            End Get
            Set
                Me(Me.tableVENTAS.BASE_IMPONIBLE_GRAVADA_MEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property importe_exonerado_ME() As Decimal
            Get
                Return CType(Me(Me.tableVENTAS.importe_exonerado_MEColumn),Decimal)
            End Get
            Set
                Me(Me.tableVENTAS.importe_exonerado_MEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property importe_inafecto_ME() As Decimal
            Get
                Return CType(Me(Me.tableVENTAS.importe_inafecto_MEColumn),Decimal)
            End Get
            Set
                Me(Me.tableVENTAS.importe_inafecto_MEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property ISC_ME() As Decimal
            Get
                Return CType(Me(Me.tableVENTAS.ISC_MEColumn),Decimal)
            End Get
            Set
                Me(Me.tableVENTAS.ISC_MEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property IGV_ME() As Decimal
            Get
                Return CType(Me(Me.tableVENTAS.IGV_MEColumn),Decimal)
            End Get
            Set
                Me(Me.tableVENTAS.IGV_MEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property IPM_ME() As Decimal
            Get
                Return CType(Me(Me.tableVENTAS.IPM_MEColumn),Decimal)
            End Get
            Set
                Me(Me.tableVENTAS.IPM_MEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property BASE_IMPONIBLE_GRAVADA2_ME() As Decimal
            Get
                Return CType(Me(Me.tableVENTAS.BASE_IMPONIBLE_GRAVADA2_MEColumn),Decimal)
            End Get
            Set
                Me(Me.tableVENTAS.BASE_IMPONIBLE_GRAVADA2_MEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property IGV2_ME() As Decimal
            Get
                Return CType(Me(Me.tableVENTAS.IGV2_MEColumn),Decimal)
            End Get
            Set
                Me(Me.tableVENTAS.IGV2_MEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property OTROS_TRIBUTOS_ME() As Decimal
            Get
                Return CType(Me(Me.tableVENTAS.OTROS_TRIBUTOS_MEColumn),Decimal)
            End Get
            Set
                Me(Me.tableVENTAS.OTROS_TRIBUTOS_MEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property IMPORTE_TOTAL_ME() As Decimal
            Get
                Return CType(Me(Me.tableVENTAS.IMPORTE_TOTAL_MEColumn),Decimal)
            End Get
            Set
                Me(Me.tableVENTAS.IMPORTE_TOTAL_MEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property REFERENCIA_CUO() As String
            Get
                Return CType(Me(Me.tableVENTAS.REFERENCIA_CUOColumn),String)
            End Get
            Set
                Me(Me.tableVENTAS.REFERENCIA_CUOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property CONDICION_PAGO() As String
            Get
                Return CType(Me(Me.tableVENTAS.CONDICION_PAGOColumn),String)
            End Get
            Set
                Me(Me.tableVENTAS.CONDICION_PAGOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property FECHA_ULTIMO_PAGO() As Date
            Get
                Try 
                    Return CType(Me(Me.tableVENTAS.FECHA_ULTIMO_PAGOColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'FECHA_ULTIMO_PAGO' de la tabla 'VENTAS' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVENTAS.FECHA_ULTIMO_PAGOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property IMPORTE_SALDO() As Decimal
            Get
                Return CType(Me(Me.tableVENTAS.IMPORTE_SALDOColumn),Decimal)
            End Get
            Set
                Me(Me.tableVENTAS.IMPORTE_SALDOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property COMENTARIO() As String
            Get
                Return CType(Me(Me.tableVENTAS.COMENTARIOColumn),String)
            End Get
            Set
                Me(Me.tableVENTAS.COMENTARIOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property TIPO_VENTA() As String
            Get
                Return CType(Me(Me.tableVENTAS.TIPO_VENTAColumn),String)
            End Get
            Set
                Me(Me.tableVENTAS.TIPO_VENTAColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property ZONA_COMERCIAL() As String
            Get
                Return CType(Me(Me.tableVENTAS.ZONA_COMERCIALColumn),String)
            End Get
            Set
                Me(Me.tableVENTAS.ZONA_COMERCIALColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property CODIGO_VENDEDOR() As String
            Get
                Return CType(Me(Me.tableVENTAS.CODIGO_VENDEDORColumn),String)
            End Get
            Set
                Me(Me.tableVENTAS.CODIGO_VENDEDORColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property CODIGO_COBRADOR() As String
            Get
                Return CType(Me(Me.tableVENTAS.CODIGO_COBRADORColumn),String)
            End Get
            Set
                Me(Me.tableVENTAS.CODIGO_COBRADORColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property CENTRO_COSTO() As String
            Get
                Return CType(Me(Me.tableVENTAS.CENTRO_COSTOColumn),String)
            End Get
            Set
                Me(Me.tableVENTAS.CENTRO_COSTOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property LETRA() As String
            Get
                Return CType(Me(Me.tableVENTAS.LETRAColumn),String)
            End Get
            Set
                Me(Me.tableVENTAS.LETRAColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property FACTORING() As String
            Get
                Return CType(Me(Me.tableVENTAS.FACTORINGColumn),String)
            End Get
            Set
                Me(Me.tableVENTAS.FACTORINGColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property PLANILLA_COBRANZA() As String
            Get
                Return CType(Me(Me.tableVENTAS.PLANILLA_COBRANZAColumn),String)
            End Get
            Set
                Me(Me.tableVENTAS.PLANILLA_COBRANZAColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property GUIA_REMITENTE() As String
            Get
                Return CType(Me(Me.tableVENTAS.GUIA_REMITENTEColumn),String)
            End Get
            Set
                Me(Me.tableVENTAS.GUIA_REMITENTEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property GUIA_TRANSPORTISTA() As String
            Get
                Return CType(Me(Me.tableVENTAS.GUIA_TRANSPORTISTAColumn),String)
            End Get
            Set
                Me(Me.tableVENTAS.GUIA_TRANSPORTISTAColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property ORDEN_PEDIDO() As String
            Get
                Return CType(Me(Me.tableVENTAS.ORDEN_PEDIDOColumn),String)
            End Get
            Set
                Me(Me.tableVENTAS.ORDEN_PEDIDOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property USUARIO_ENVIO() As String
            Get
                Return CType(Me(Me.tableVENTAS.USUARIO_ENVIOColumn),String)
            End Get
            Set
                Me(Me.tableVENTAS.USUARIO_ENVIOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property FECHA_ENVIO() As Date
            Get
                Try 
                    Return CType(Me(Me.tableVENTAS.FECHA_ENVIOColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'FECHA_ENVIO' de la tabla 'VENTAS' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVENTAS.FECHA_ENVIOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property FECHA_RECEPCION() As Date
            Get
                Try 
                    Return CType(Me(Me.tableVENTAS.FECHA_RECEPCIONColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'FECHA_RECEPCION' de la tabla 'VENTAS' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVENTAS.FECHA_RECEPCIONColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property INDICA_SUJETA_DETRACCION() As String
            Get
                Return CType(Me(Me.tableVENTAS.INDICA_SUJETA_DETRACCIONColumn),String)
            End Get
            Set
                Me(Me.tableVENTAS.INDICA_SUJETA_DETRACCIONColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property PORCENTAJE_DETRACCION() As Decimal
            Get
                Return CType(Me(Me.tableVENTAS.PORCENTAJE_DETRACCIONColumn),Decimal)
            End Get
            Set
                Me(Me.tableVENTAS.PORCENTAJE_DETRACCIONColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property NUMERO_DETRACCION() As String
            Get
                Return CType(Me(Me.tableVENTAS.NUMERO_DETRACCIONColumn),String)
            End Get
            Set
                Me(Me.tableVENTAS.NUMERO_DETRACCIONColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property FECHA_DETRACCION() As Date
            Get
                Try 
                    Return CType(Me(Me.tableVENTAS.FECHA_DETRACCIONColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'FECHA_DETRACCION' de la tabla 'VENTAS' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVENTAS.FECHA_DETRACCIONColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property ORIGEN() As String
            Get
                Return CType(Me(Me.tableVENTAS.ORIGENColumn),String)
            End Get
            Set
                Me(Me.tableVENTAS.ORIGENColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property ESTADO() As String
            Get
                Return CType(Me(Me.tableVENTAS.ESTADOColumn),String)
            End Get
            Set
                Me(Me.tableVENTAS.ESTADOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property UBICACION_CUSTODIA() As String
            Get
                Return CType(Me(Me.tableVENTAS.UBICACION_CUSTODIAColumn),String)
            End Get
            Set
                Me(Me.tableVENTAS.UBICACION_CUSTODIAColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property USUARIO_CUSTODIA() As String
            Get
                Return CType(Me(Me.tableVENTAS.USUARIO_CUSTODIAColumn),String)
            End Get
            Set
                Me(Me.tableVENTAS.USUARIO_CUSTODIAColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property FECHA_CUSTODIA() As Date
            Get
                Try 
                    Return CType(Me(Me.tableVENTAS.FECHA_CUSTODIAColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'FECHA_CUSTODIA' de la tabla 'VENTAS' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVENTAS.FECHA_CUSTODIAColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property REFERENCIA_TIPO() As String
            Get
                Return CType(Me(Me.tableVENTAS.REFERENCIA_TIPOColumn),String)
            End Get
            Set
                Me(Me.tableVENTAS.REFERENCIA_TIPOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property REFERENCIA_SERIE() As String
            Get
                Return CType(Me(Me.tableVENTAS.REFERENCIA_SERIEColumn),String)
            End Get
            Set
                Me(Me.tableVENTAS.REFERENCIA_SERIEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property REFERENCIA_NUMERO() As String
            Get
                Return CType(Me(Me.tableVENTAS.REFERENCIA_NUMEROColumn),String)
            End Get
            Set
                Me(Me.tableVENTAS.REFERENCIA_NUMEROColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property REFERENCIA_FECHA() As Date
            Get
                Try 
                    Return CType(Me(Me.tableVENTAS.REFERENCIA_FECHAColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'REFERENCIA_FECHA' de la tabla 'VENTAS' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVENTAS.REFERENCIA_FECHAColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property INDICA_EXPORTACION() As String
            Get
                Return CType(Me(Me.tableVENTAS.INDICA_EXPORTACIONColumn),String)
            End Get
            Set
                Me(Me.tableVENTAS.INDICA_EXPORTACIONColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property USUARIO_REGISTRO() As String
            Get
                Return CType(Me(Me.tableVENTAS.USUARIO_REGISTROColumn),String)
            End Get
            Set
                Me(Me.tableVENTAS.USUARIO_REGISTROColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property FECHA_REGISTRO() As Date
            Get
                Return CType(Me(Me.tableVENTAS.FECHA_REGISTROColumn),Date)
            End Get
            Set
                Me(Me.tableVENTAS.FECHA_REGISTROColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property USUARIO_MODIFICA() As String
            Get
                Return CType(Me(Me.tableVENTAS.USUARIO_MODIFICAColumn),String)
            End Get
            Set
                Me(Me.tableVENTAS.USUARIO_MODIFICAColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property FECHA_MODIFICA() As Date
            Get
                Try 
                    Return CType(Me(Me.tableVENTAS.FECHA_MODIFICAColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'FECHA_MODIFICA' de la tabla 'VENTAS' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVENTAS.FECHA_MODIFICAColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsLISTA_PRECIONull() As Boolean
            Return Me.IsNull(Me.tableVENTAS.LISTA_PRECIOColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetLISTA_PRECIONull()
            Me(Me.tableVENTAS.LISTA_PRECIOColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsCENTRO_DISTRIBUCIONNull() As Boolean
            Return Me.IsNull(Me.tableVENTAS.CENTRO_DISTRIBUCIONColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetCENTRO_DISTRIBUCIONNull()
            Me(Me.tableVENTAS.CENTRO_DISTRIBUCIONColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsFECHA_ULTIMO_PAGONull() As Boolean
            Return Me.IsNull(Me.tableVENTAS.FECHA_ULTIMO_PAGOColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetFECHA_ULTIMO_PAGONull()
            Me(Me.tableVENTAS.FECHA_ULTIMO_PAGOColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsFECHA_ENVIONull() As Boolean
            Return Me.IsNull(Me.tableVENTAS.FECHA_ENVIOColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetFECHA_ENVIONull()
            Me(Me.tableVENTAS.FECHA_ENVIOColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsFECHA_RECEPCIONNull() As Boolean
            Return Me.IsNull(Me.tableVENTAS.FECHA_RECEPCIONColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetFECHA_RECEPCIONNull()
            Me(Me.tableVENTAS.FECHA_RECEPCIONColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsFECHA_DETRACCIONNull() As Boolean
            Return Me.IsNull(Me.tableVENTAS.FECHA_DETRACCIONColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetFECHA_DETRACCIONNull()
            Me(Me.tableVENTAS.FECHA_DETRACCIONColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsFECHA_CUSTODIANull() As Boolean
            Return Me.IsNull(Me.tableVENTAS.FECHA_CUSTODIAColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetFECHA_CUSTODIANull()
            Me(Me.tableVENTAS.FECHA_CUSTODIAColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsREFERENCIA_FECHANull() As Boolean
            Return Me.IsNull(Me.tableVENTAS.REFERENCIA_FECHAColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetREFERENCIA_FECHANull()
            Me(Me.tableVENTAS.REFERENCIA_FECHAColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsFECHA_MODIFICANull() As Boolean
            Return Me.IsNull(Me.tableVENTAS.FECHA_MODIFICAColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetFECHA_MODIFICANull()
            Me(Me.tableVENTAS.FECHA_MODIFICAColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Partial Public Class VENTAS_PRORow
        Inherits Global.System.Data.DataRow
        
        Private tableVENTAS_PRO As VENTAS_PRODataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableVENTAS_PRO = CType(Me.Table,VENTAS_PRODataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property EMPRESA() As String
            Get
                Return CType(Me(Me.tableVENTAS_PRO.EMPRESAColumn),String)
            End Get
            Set
                Me(Me.tableVENTAS_PRO.EMPRESAColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property VENTA() As String
            Get
                Return CType(Me(Me.tableVENTAS_PRO.VENTAColumn),String)
            End Get
            Set
                Me(Me.tableVENTAS_PRO.VENTAColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property LINEA() As String
            Get
                Return CType(Me(Me.tableVENTAS_PRO.LINEAColumn),String)
            End Get
            Set
                Me(Me.tableVENTAS_PRO.LINEAColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property TIPO_CAMBIO() As Decimal
            Get
                Return CType(Me(Me.tableVENTAS_PRO.TIPO_CAMBIOColumn),Decimal)
            End Get
            Set
                Me(Me.tableVENTAS_PRO.TIPO_CAMBIOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property TIPO_MONEDA() As String
            Get
                Return CType(Me(Me.tableVENTAS_PRO.TIPO_MONEDAColumn),String)
            End Get
            Set
                Me(Me.tableVENTAS_PRO.TIPO_MONEDAColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property PRODUCTO() As String
            Get
                Return CType(Me(Me.tableVENTAS_PRO.PRODUCTOColumn),String)
            End Get
            Set
                Me(Me.tableVENTAS_PRO.PRODUCTOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property NUMERO_LOTE() As String
            Get
                Return CType(Me(Me.tableVENTAS_PRO.NUMERO_LOTEColumn),String)
            End Get
            Set
                Me(Me.tableVENTAS_PRO.NUMERO_LOTEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property UNIDAD_MEDIDA() As String
            Get
                Return CType(Me(Me.tableVENTAS_PRO.UNIDAD_MEDIDAColumn),String)
            End Get
            Set
                Me(Me.tableVENTAS_PRO.UNIDAD_MEDIDAColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property CANTIDAD() As Decimal
            Get
                Return CType(Me(Me.tableVENTAS_PRO.CANTIDADColumn),Decimal)
            End Get
            Set
                Me(Me.tableVENTAS_PRO.CANTIDADColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property PRECIO_UNITARIO() As Decimal
            Get
                Return CType(Me(Me.tableVENTAS_PRO.PRECIO_UNITARIOColumn),Decimal)
            End Get
            Set
                Me(Me.tableVENTAS_PRO.PRECIO_UNITARIOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property DESCUENTO_1() As Decimal
            Get
                Return CType(Me(Me.tableVENTAS_PRO.DESCUENTO_1Column),Decimal)
            End Get
            Set
                Me(Me.tableVENTAS_PRO.DESCUENTO_1Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property DESCUENTO_2() As Decimal
            Get
                Return CType(Me(Me.tableVENTAS_PRO.DESCUENTO_2Column),Decimal)
            End Get
            Set
                Me(Me.tableVENTAS_PRO.DESCUENTO_2Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property DESCUENTO_3() As Decimal
            Get
                Return CType(Me(Me.tableVENTAS_PRO.DESCUENTO_3Column),Decimal)
            End Get
            Set
                Me(Me.tableVENTAS_PRO.DESCUENTO_3Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property VALOR_EXPORTACION_ORIGEN() As Decimal
            Get
                Return CType(Me(Me.tableVENTAS_PRO.VALOR_EXPORTACION_ORIGENColumn),Decimal)
            End Get
            Set
                Me(Me.tableVENTAS_PRO.VALOR_EXPORTACION_ORIGENColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property BASE_IMPONIBLE_GRAVADA_ORIGEN() As Decimal
            Get
                Return CType(Me(Me.tableVENTAS_PRO.BASE_IMPONIBLE_GRAVADA_ORIGENColumn),Decimal)
            End Get
            Set
                Me(Me.tableVENTAS_PRO.BASE_IMPONIBLE_GRAVADA_ORIGENColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property importe_exonerado_ORIGEN() As Decimal
            Get
                Return CType(Me(Me.tableVENTAS_PRO.importe_exonerado_ORIGENColumn),Decimal)
            End Get
            Set
                Me(Me.tableVENTAS_PRO.importe_exonerado_ORIGENColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property importe_inafecto_ORIGEN() As Decimal
            Get
                Return CType(Me(Me.tableVENTAS_PRO.importe_inafecto_ORIGENColumn),Decimal)
            End Get
            Set
                Me(Me.tableVENTAS_PRO.importe_inafecto_ORIGENColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property ISC_ORIGEN() As Decimal
            Get
                Return CType(Me(Me.tableVENTAS_PRO.ISC_ORIGENColumn),Decimal)
            End Get
            Set
                Me(Me.tableVENTAS_PRO.ISC_ORIGENColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property IGV_ORIGEN() As Decimal
            Get
                Return CType(Me(Me.tableVENTAS_PRO.IGV_ORIGENColumn),Decimal)
            End Get
            Set
                Me(Me.tableVENTAS_PRO.IGV_ORIGENColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property IPM_ORIGEN() As Decimal
            Get
                Return CType(Me(Me.tableVENTAS_PRO.IPM_ORIGENColumn),Decimal)
            End Get
            Set
                Me(Me.tableVENTAS_PRO.IPM_ORIGENColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property BASE_IMPONIBLE_GRAVADA2_ORIGEN() As Decimal
            Get
                Return CType(Me(Me.tableVENTAS_PRO.BASE_IMPONIBLE_GRAVADA2_ORIGENColumn),Decimal)
            End Get
            Set
                Me(Me.tableVENTAS_PRO.BASE_IMPONIBLE_GRAVADA2_ORIGENColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property IGV2_ORIGEN() As Decimal
            Get
                Return CType(Me(Me.tableVENTAS_PRO.IGV2_ORIGENColumn),Decimal)
            End Get
            Set
                Me(Me.tableVENTAS_PRO.IGV2_ORIGENColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property OTROS_TRIBUTOS_ORIGEN() As Decimal
            Get
                Return CType(Me(Me.tableVENTAS_PRO.OTROS_TRIBUTOS_ORIGENColumn),Decimal)
            End Get
            Set
                Me(Me.tableVENTAS_PRO.OTROS_TRIBUTOS_ORIGENColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property IMPORTE_TOTAL_ORIGEN() As Decimal
            Get
                Return CType(Me(Me.tableVENTAS_PRO.IMPORTE_TOTAL_ORIGENColumn),Decimal)
            End Get
            Set
                Me(Me.tableVENTAS_PRO.IMPORTE_TOTAL_ORIGENColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property VALOR_EXPORTACION_MN() As Decimal
            Get
                Return CType(Me(Me.tableVENTAS_PRO.VALOR_EXPORTACION_MNColumn),Decimal)
            End Get
            Set
                Me(Me.tableVENTAS_PRO.VALOR_EXPORTACION_MNColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property BASE_IMPONIBLE_GRAVADA_MN() As Decimal
            Get
                Return CType(Me(Me.tableVENTAS_PRO.BASE_IMPONIBLE_GRAVADA_MNColumn),Decimal)
            End Get
            Set
                Me(Me.tableVENTAS_PRO.BASE_IMPONIBLE_GRAVADA_MNColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property importe_exonerado_MN() As Decimal
            Get
                Return CType(Me(Me.tableVENTAS_PRO.importe_exonerado_MNColumn),Decimal)
            End Get
            Set
                Me(Me.tableVENTAS_PRO.importe_exonerado_MNColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property importe_inafecto_MN() As Decimal
            Get
                Return CType(Me(Me.tableVENTAS_PRO.importe_inafecto_MNColumn),Decimal)
            End Get
            Set
                Me(Me.tableVENTAS_PRO.importe_inafecto_MNColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property ISC_MN() As Decimal
            Get
                Return CType(Me(Me.tableVENTAS_PRO.ISC_MNColumn),Decimal)
            End Get
            Set
                Me(Me.tableVENTAS_PRO.ISC_MNColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property IGV_MN() As Decimal
            Get
                Return CType(Me(Me.tableVENTAS_PRO.IGV_MNColumn),Decimal)
            End Get
            Set
                Me(Me.tableVENTAS_PRO.IGV_MNColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property IPM_MN() As Decimal
            Get
                Return CType(Me(Me.tableVENTAS_PRO.IPM_MNColumn),Decimal)
            End Get
            Set
                Me(Me.tableVENTAS_PRO.IPM_MNColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property BASE_IMPONIBLE_GRAVADA2_MN() As Decimal
            Get
                Return CType(Me(Me.tableVENTAS_PRO.BASE_IMPONIBLE_GRAVADA2_MNColumn),Decimal)
            End Get
            Set
                Me(Me.tableVENTAS_PRO.BASE_IMPONIBLE_GRAVADA2_MNColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property IGV2_MN() As Decimal
            Get
                Return CType(Me(Me.tableVENTAS_PRO.IGV2_MNColumn),Decimal)
            End Get
            Set
                Me(Me.tableVENTAS_PRO.IGV2_MNColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property OTROS_TRIBUTOS_MN() As Decimal
            Get
                Return CType(Me(Me.tableVENTAS_PRO.OTROS_TRIBUTOS_MNColumn),Decimal)
            End Get
            Set
                Me(Me.tableVENTAS_PRO.OTROS_TRIBUTOS_MNColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property IMPORTE_TOTAL_MN() As Decimal
            Get
                Return CType(Me(Me.tableVENTAS_PRO.IMPORTE_TOTAL_MNColumn),Decimal)
            End Get
            Set
                Me(Me.tableVENTAS_PRO.IMPORTE_TOTAL_MNColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property VALOR_EXPORTACION_ME() As Decimal
            Get
                Return CType(Me(Me.tableVENTAS_PRO.VALOR_EXPORTACION_MEColumn),Decimal)
            End Get
            Set
                Me(Me.tableVENTAS_PRO.VALOR_EXPORTACION_MEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property BASE_IMPONIBLE_GRAVADA_ME() As Decimal
            Get
                Return CType(Me(Me.tableVENTAS_PRO.BASE_IMPONIBLE_GRAVADA_MEColumn),Decimal)
            End Get
            Set
                Me(Me.tableVENTAS_PRO.BASE_IMPONIBLE_GRAVADA_MEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property importe_exonerado_ME() As Decimal
            Get
                Return CType(Me(Me.tableVENTAS_PRO.importe_exonerado_MEColumn),Decimal)
            End Get
            Set
                Me(Me.tableVENTAS_PRO.importe_exonerado_MEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property importe_inafecto_ME() As Decimal
            Get
                Return CType(Me(Me.tableVENTAS_PRO.importe_inafecto_MEColumn),Decimal)
            End Get
            Set
                Me(Me.tableVENTAS_PRO.importe_inafecto_MEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property ISC_ME() As Decimal
            Get
                Return CType(Me(Me.tableVENTAS_PRO.ISC_MEColumn),Decimal)
            End Get
            Set
                Me(Me.tableVENTAS_PRO.ISC_MEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property IGV_ME() As Decimal
            Get
                Return CType(Me(Me.tableVENTAS_PRO.IGV_MEColumn),Decimal)
            End Get
            Set
                Me(Me.tableVENTAS_PRO.IGV_MEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property IPM_ME() As Decimal
            Get
                Return CType(Me(Me.tableVENTAS_PRO.IPM_MEColumn),Decimal)
            End Get
            Set
                Me(Me.tableVENTAS_PRO.IPM_MEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property BASE_IMPONIBLE_GRAVADA2_ME() As Decimal
            Get
                Return CType(Me(Me.tableVENTAS_PRO.BASE_IMPONIBLE_GRAVADA2_MEColumn),Decimal)
            End Get
            Set
                Me(Me.tableVENTAS_PRO.BASE_IMPONIBLE_GRAVADA2_MEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property IGV2_ME() As Decimal
            Get
                Return CType(Me(Me.tableVENTAS_PRO.IGV2_MEColumn),Decimal)
            End Get
            Set
                Me(Me.tableVENTAS_PRO.IGV2_MEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property OTROS_TRIBUTOS_ME() As Decimal
            Get
                Return CType(Me(Me.tableVENTAS_PRO.OTROS_TRIBUTOS_MEColumn),Decimal)
            End Get
            Set
                Me(Me.tableVENTAS_PRO.OTROS_TRIBUTOS_MEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property IMPORTE_TOTAL_ME() As Decimal
            Get
                Return CType(Me(Me.tableVENTAS_PRO.IMPORTE_TOTAL_MEColumn),Decimal)
            End Get
            Set
                Me(Me.tableVENTAS_PRO.IMPORTE_TOTAL_MEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property ESTADO() As String
            Get
                Return CType(Me(Me.tableVENTAS_PRO.ESTADOColumn),String)
            End Get
            Set
                Me(Me.tableVENTAS_PRO.ESTADOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property GUIA_REMITENTE() As String
            Get
                Return CType(Me(Me.tableVENTAS_PRO.GUIA_REMITENTEColumn),String)
            End Get
            Set
                Me(Me.tableVENTAS_PRO.GUIA_REMITENTEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property CENTRO_COSTO() As String
            Get
                Return CType(Me(Me.tableVENTAS_PRO.CENTRO_COSTOColumn),String)
            End Get
            Set
                Me(Me.tableVENTAS_PRO.CENTRO_COSTOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property PROYECTO() As String
            Get
                Return CType(Me(Me.tableVENTAS_PRO.PROYECTOColumn),String)
            End Get
            Set
                Me(Me.tableVENTAS_PRO.PROYECTOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property USUARIO_REGISTRO() As String
            Get
                Return CType(Me(Me.tableVENTAS_PRO.USUARIO_REGISTROColumn),String)
            End Get
            Set
                Me(Me.tableVENTAS_PRO.USUARIO_REGISTROColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property FECHA_REGISTRO() As Date
            Get
                Return CType(Me(Me.tableVENTAS_PRO.FECHA_REGISTROColumn),Date)
            End Get
            Set
                Me(Me.tableVENTAS_PRO.FECHA_REGISTROColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property USUARIO_MODIFICA() As String
            Get
                Try 
                    Return CType(Me(Me.tableVENTAS_PRO.USUARIO_MODIFICAColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'USUARIO_MODIFICA' de la tabla 'VENTAS_PRO' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVENTAS_PRO.USUARIO_MODIFICAColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property FECHA_MODIFICA() As Date
            Get
                Try 
                    Return CType(Me(Me.tableVENTAS_PRO.FECHA_MODIFICAColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'FECHA_MODIFICA' de la tabla 'VENTAS_PRO' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVENTAS_PRO.FECHA_MODIFICAColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsUSUARIO_MODIFICANull() As Boolean
            Return Me.IsNull(Me.tableVENTAS_PRO.USUARIO_MODIFICAColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetUSUARIO_MODIFICANull()
            Me(Me.tableVENTAS_PRO.USUARIO_MODIFICAColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsFECHA_MODIFICANull() As Boolean
            Return Me.IsNull(Me.tableVENTAS_PRO.FECHA_MODIFICAColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetFECHA_MODIFICANull()
            Me(Me.tableVENTAS_PRO.FECHA_MODIFICAColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Partial Public Class VENTAS_SERRow
        Inherits Global.System.Data.DataRow
        
        Private tableVENTAS_SER As VENTAS_SERDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableVENTAS_SER = CType(Me.Table,VENTAS_SERDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property EMPRESA() As String
            Get
                Return CType(Me(Me.tableVENTAS_SER.EMPRESAColumn),String)
            End Get
            Set
                Me(Me.tableVENTAS_SER.EMPRESAColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property VENTA() As String
            Get
                Return CType(Me(Me.tableVENTAS_SER.VENTAColumn),String)
            End Get
            Set
                Me(Me.tableVENTAS_SER.VENTAColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property LINEA() As String
            Get
                Return CType(Me(Me.tableVENTAS_SER.LINEAColumn),String)
            End Get
            Set
                Me(Me.tableVENTAS_SER.LINEAColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property TIPO_CAMBIO() As Decimal
            Get
                Return CType(Me(Me.tableVENTAS_SER.TIPO_CAMBIOColumn),Decimal)
            End Get
            Set
                Me(Me.tableVENTAS_SER.TIPO_CAMBIOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property TIPO_MONEDA() As String
            Get
                Return CType(Me(Me.tableVENTAS_SER.TIPO_MONEDAColumn),String)
            End Get
            Set
                Me(Me.tableVENTAS_SER.TIPO_MONEDAColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property GLOSA_1() As String
            Get
                Return CType(Me(Me.tableVENTAS_SER.GLOSA_1Column),String)
            End Get
            Set
                Me(Me.tableVENTAS_SER.GLOSA_1Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property GLOSA_2() As String
            Get
                Return CType(Me(Me.tableVENTAS_SER.GLOSA_2Column),String)
            End Get
            Set
                Me(Me.tableVENTAS_SER.GLOSA_2Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property GLOSA_3() As String
            Get
                Return CType(Me(Me.tableVENTAS_SER.GLOSA_3Column),String)
            End Get
            Set
                Me(Me.tableVENTAS_SER.GLOSA_3Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property DESCUENTO_1() As Decimal
            Get
                Return CType(Me(Me.tableVENTAS_SER.DESCUENTO_1Column),Decimal)
            End Get
            Set
                Me(Me.tableVENTAS_SER.DESCUENTO_1Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property DESCUENTO_2() As Decimal
            Get
                Return CType(Me(Me.tableVENTAS_SER.DESCUENTO_2Column),Decimal)
            End Get
            Set
                Me(Me.tableVENTAS_SER.DESCUENTO_2Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property DESCUENTO_3() As Decimal
            Get
                Return CType(Me(Me.tableVENTAS_SER.DESCUENTO_3Column),Decimal)
            End Get
            Set
                Me(Me.tableVENTAS_SER.DESCUENTO_3Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property VALOR_EXPORTACION_ORIGEN() As Decimal
            Get
                Return CType(Me(Me.tableVENTAS_SER.VALOR_EXPORTACION_ORIGENColumn),Decimal)
            End Get
            Set
                Me(Me.tableVENTAS_SER.VALOR_EXPORTACION_ORIGENColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property BASE_IMPONIBLE_GRAVADA_ORIGEN() As Decimal
            Get
                Return CType(Me(Me.tableVENTAS_SER.BASE_IMPONIBLE_GRAVADA_ORIGENColumn),Decimal)
            End Get
            Set
                Me(Me.tableVENTAS_SER.BASE_IMPONIBLE_GRAVADA_ORIGENColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property importe_exonerado_ORIGEN() As Decimal
            Get
                Return CType(Me(Me.tableVENTAS_SER.importe_exonerado_ORIGENColumn),Decimal)
            End Get
            Set
                Me(Me.tableVENTAS_SER.importe_exonerado_ORIGENColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property importe_inafecto_ORIGEN() As Decimal
            Get
                Return CType(Me(Me.tableVENTAS_SER.importe_inafecto_ORIGENColumn),Decimal)
            End Get
            Set
                Me(Me.tableVENTAS_SER.importe_inafecto_ORIGENColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property ISC_ORIGEN() As Decimal
            Get
                Return CType(Me(Me.tableVENTAS_SER.ISC_ORIGENColumn),Decimal)
            End Get
            Set
                Me(Me.tableVENTAS_SER.ISC_ORIGENColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property IGV_ORIGEN() As Decimal
            Get
                Return CType(Me(Me.tableVENTAS_SER.IGV_ORIGENColumn),Decimal)
            End Get
            Set
                Me(Me.tableVENTAS_SER.IGV_ORIGENColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property IPM_ORIGEN() As Decimal
            Get
                Return CType(Me(Me.tableVENTAS_SER.IPM_ORIGENColumn),Decimal)
            End Get
            Set
                Me(Me.tableVENTAS_SER.IPM_ORIGENColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property BASE_IMPONIBLE_GRAVADA2_ORIGEN() As Decimal
            Get
                Return CType(Me(Me.tableVENTAS_SER.BASE_IMPONIBLE_GRAVADA2_ORIGENColumn),Decimal)
            End Get
            Set
                Me(Me.tableVENTAS_SER.BASE_IMPONIBLE_GRAVADA2_ORIGENColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property IGV2_ORIGEN() As Decimal
            Get
                Return CType(Me(Me.tableVENTAS_SER.IGV2_ORIGENColumn),Decimal)
            End Get
            Set
                Me(Me.tableVENTAS_SER.IGV2_ORIGENColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property OTROS_TRIBUTOS_ORIGEN() As Decimal
            Get
                Return CType(Me(Me.tableVENTAS_SER.OTROS_TRIBUTOS_ORIGENColumn),Decimal)
            End Get
            Set
                Me(Me.tableVENTAS_SER.OTROS_TRIBUTOS_ORIGENColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property IMPORTE_TOTAL_ORIGEN() As Decimal
            Get
                Return CType(Me(Me.tableVENTAS_SER.IMPORTE_TOTAL_ORIGENColumn),Decimal)
            End Get
            Set
                Me(Me.tableVENTAS_SER.IMPORTE_TOTAL_ORIGENColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property VALOR_EXPORTACION_MN() As Decimal
            Get
                Return CType(Me(Me.tableVENTAS_SER.VALOR_EXPORTACION_MNColumn),Decimal)
            End Get
            Set
                Me(Me.tableVENTAS_SER.VALOR_EXPORTACION_MNColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property BASE_IMPONIBLE_GRAVADA_MN() As Decimal
            Get
                Return CType(Me(Me.tableVENTAS_SER.BASE_IMPONIBLE_GRAVADA_MNColumn),Decimal)
            End Get
            Set
                Me(Me.tableVENTAS_SER.BASE_IMPONIBLE_GRAVADA_MNColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property importe_exonerado_MN() As Decimal
            Get
                Return CType(Me(Me.tableVENTAS_SER.importe_exonerado_MNColumn),Decimal)
            End Get
            Set
                Me(Me.tableVENTAS_SER.importe_exonerado_MNColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property importe_inafecto_MN() As Decimal
            Get
                Return CType(Me(Me.tableVENTAS_SER.importe_inafecto_MNColumn),Decimal)
            End Get
            Set
                Me(Me.tableVENTAS_SER.importe_inafecto_MNColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property ISC_MN() As Decimal
            Get
                Return CType(Me(Me.tableVENTAS_SER.ISC_MNColumn),Decimal)
            End Get
            Set
                Me(Me.tableVENTAS_SER.ISC_MNColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property IGV_MN() As Decimal
            Get
                Return CType(Me(Me.tableVENTAS_SER.IGV_MNColumn),Decimal)
            End Get
            Set
                Me(Me.tableVENTAS_SER.IGV_MNColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property IPM_MN() As Decimal
            Get
                Return CType(Me(Me.tableVENTAS_SER.IPM_MNColumn),Decimal)
            End Get
            Set
                Me(Me.tableVENTAS_SER.IPM_MNColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property BASE_IMPONIBLE_GRAVADA2_MN() As Decimal
            Get
                Return CType(Me(Me.tableVENTAS_SER.BASE_IMPONIBLE_GRAVADA2_MNColumn),Decimal)
            End Get
            Set
                Me(Me.tableVENTAS_SER.BASE_IMPONIBLE_GRAVADA2_MNColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property IGV2_MN() As Decimal
            Get
                Return CType(Me(Me.tableVENTAS_SER.IGV2_MNColumn),Decimal)
            End Get
            Set
                Me(Me.tableVENTAS_SER.IGV2_MNColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property OTROS_TRIBUTOS_MN() As Decimal
            Get
                Return CType(Me(Me.tableVENTAS_SER.OTROS_TRIBUTOS_MNColumn),Decimal)
            End Get
            Set
                Me(Me.tableVENTAS_SER.OTROS_TRIBUTOS_MNColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property IMPORTE_TOTAL_MN() As Decimal
            Get
                Return CType(Me(Me.tableVENTAS_SER.IMPORTE_TOTAL_MNColumn),Decimal)
            End Get
            Set
                Me(Me.tableVENTAS_SER.IMPORTE_TOTAL_MNColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property VALOR_EXPORTACION_ME() As Decimal
            Get
                Return CType(Me(Me.tableVENTAS_SER.VALOR_EXPORTACION_MEColumn),Decimal)
            End Get
            Set
                Me(Me.tableVENTAS_SER.VALOR_EXPORTACION_MEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property BASE_IMPONIBLE_GRAVADA_ME() As Decimal
            Get
                Return CType(Me(Me.tableVENTAS_SER.BASE_IMPONIBLE_GRAVADA_MEColumn),Decimal)
            End Get
            Set
                Me(Me.tableVENTAS_SER.BASE_IMPONIBLE_GRAVADA_MEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property importe_exonerado_ME() As Decimal
            Get
                Return CType(Me(Me.tableVENTAS_SER.importe_exonerado_MEColumn),Decimal)
            End Get
            Set
                Me(Me.tableVENTAS_SER.importe_exonerado_MEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property importe_inafecto_ME() As Decimal
            Get
                Return CType(Me(Me.tableVENTAS_SER.importe_inafecto_MEColumn),Decimal)
            End Get
            Set
                Me(Me.tableVENTAS_SER.importe_inafecto_MEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property ISC_ME() As Decimal
            Get
                Return CType(Me(Me.tableVENTAS_SER.ISC_MEColumn),Decimal)
            End Get
            Set
                Me(Me.tableVENTAS_SER.ISC_MEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property IGV_ME() As Decimal
            Get
                Return CType(Me(Me.tableVENTAS_SER.IGV_MEColumn),Decimal)
            End Get
            Set
                Me(Me.tableVENTAS_SER.IGV_MEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property IPM_ME() As Decimal
            Get
                Return CType(Me(Me.tableVENTAS_SER.IPM_MEColumn),Decimal)
            End Get
            Set
                Me(Me.tableVENTAS_SER.IPM_MEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property BASE_IMPONIBLE_GRAVADA2_ME() As Decimal
            Get
                Return CType(Me(Me.tableVENTAS_SER.BASE_IMPONIBLE_GRAVADA2_MEColumn),Decimal)
            End Get
            Set
                Me(Me.tableVENTAS_SER.BASE_IMPONIBLE_GRAVADA2_MEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property IGV2_ME() As Decimal
            Get
                Return CType(Me(Me.tableVENTAS_SER.IGV2_MEColumn),Decimal)
            End Get
            Set
                Me(Me.tableVENTAS_SER.IGV2_MEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property OTROS_TRIBUTOS_ME() As Decimal
            Get
                Return CType(Me(Me.tableVENTAS_SER.OTROS_TRIBUTOS_MEColumn),Decimal)
            End Get
            Set
                Me(Me.tableVENTAS_SER.OTROS_TRIBUTOS_MEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property IMPORTE_TOTAL_ME() As Decimal
            Get
                Return CType(Me(Me.tableVENTAS_SER.IMPORTE_TOTAL_MEColumn),Decimal)
            End Get
            Set
                Me(Me.tableVENTAS_SER.IMPORTE_TOTAL_MEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property ESTADO() As String
            Get
                Return CType(Me(Me.tableVENTAS_SER.ESTADOColumn),String)
            End Get
            Set
                Me(Me.tableVENTAS_SER.ESTADOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property GUIA_REMITENTE() As String
            Get
                Return CType(Me(Me.tableVENTAS_SER.GUIA_REMITENTEColumn),String)
            End Get
            Set
                Me(Me.tableVENTAS_SER.GUIA_REMITENTEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property CENTRO_COSTO() As String
            Get
                Return CType(Me(Me.tableVENTAS_SER.CENTRO_COSTOColumn),String)
            End Get
            Set
                Me(Me.tableVENTAS_SER.CENTRO_COSTOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property PROYECTO() As String
            Get
                Return CType(Me(Me.tableVENTAS_SER.PROYECTOColumn),String)
            End Get
            Set
                Me(Me.tableVENTAS_SER.PROYECTOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property USUARIO_REGISTRO() As String
            Get
                Return CType(Me(Me.tableVENTAS_SER.USUARIO_REGISTROColumn),String)
            End Get
            Set
                Me(Me.tableVENTAS_SER.USUARIO_REGISTROColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property FECHA_REGISTRO() As Date
            Get
                Return CType(Me(Me.tableVENTAS_SER.FECHA_REGISTROColumn),Date)
            End Get
            Set
                Me(Me.tableVENTAS_SER.FECHA_REGISTROColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property USUARIO_MODIFICA() As String
            Get
                Try 
                    Return CType(Me(Me.tableVENTAS_SER.USUARIO_MODIFICAColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'USUARIO_MODIFICA' de la tabla 'VENTAS_SER' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVENTAS_SER.USUARIO_MODIFICAColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property FECHA_MODIFICA() As Date
            Get
                Try 
                    Return CType(Me(Me.tableVENTAS_SER.FECHA_MODIFICAColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'FECHA_MODIFICA' de la tabla 'VENTAS_SER' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVENTAS_SER.FECHA_MODIFICAColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsUSUARIO_MODIFICANull() As Boolean
            Return Me.IsNull(Me.tableVENTAS_SER.USUARIO_MODIFICAColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetUSUARIO_MODIFICANull()
            Me(Me.tableVENTAS_SER.USUARIO_MODIFICAColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsFECHA_MODIFICANull() As Boolean
            Return Me.IsNull(Me.tableVENTAS_SER.FECHA_MODIFICAColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetFECHA_MODIFICANull()
            Me(Me.tableVENTAS_SER.FECHA_MODIFICAColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Partial Public Class VENTAS_PRODUCTOSRow
        Inherits Global.System.Data.DataRow
        
        Private tableVENTAS_PRODUCTOS As VENTAS_PRODUCTOSDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableVENTAS_PRODUCTOS = CType(Me.Table,VENTAS_PRODUCTOSDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property EJERCICIO() As String
            Get
                Return CType(Me(Me.tableVENTAS_PRODUCTOS.EJERCICIOColumn),String)
            End Get
            Set
                Me(Me.tableVENTAS_PRODUCTOS.EJERCICIOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property MES() As String
            Get
                Return CType(Me(Me.tableVENTAS_PRODUCTOS.MESColumn),String)
            End Get
            Set
                Me(Me.tableVENTAS_PRODUCTOS.MESColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property ALMACEN() As String
            Get
                Return CType(Me(Me.tableVENTAS_PRODUCTOS.ALMACENColumn),String)
            End Get
            Set
                Me(Me.tableVENTAS_PRODUCTOS.ALMACENColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property PRODUCTO() As String
            Get
                Return CType(Me(Me.tableVENTAS_PRODUCTOS.PRODUCTOColumn),String)
            End Get
            Set
                Me(Me.tableVENTAS_PRODUCTOS.PRODUCTOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property NUMERO_LOTE() As String
            Get
                Return CType(Me(Me.tableVENTAS_PRODUCTOS.NUMERO_LOTEColumn),String)
            End Get
            Set
                Me(Me.tableVENTAS_PRODUCTOS.NUMERO_LOTEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property CANTIDAD() As Decimal
            Get
                Return CType(Me(Me.tableVENTAS_PRODUCTOS.CANTIDADColumn),Decimal)
            End Get
            Set
                Me(Me.tableVENTAS_PRODUCTOS.CANTIDADColumn) = value
            End Set
        End Property
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Partial Public Class VENTAS_PEDIDORow
        Inherits Global.System.Data.DataRow
        
        Private tableVENTAS_PEDIDO As VENTAS_PEDIDODataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableVENTAS_PEDIDO = CType(Me.Table,VENTAS_PEDIDODataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property LINEA() As String
            Get
                Return CType(Me(Me.tableVENTAS_PEDIDO.LINEAColumn),String)
            End Get
            Set
                Me(Me.tableVENTAS_PEDIDO.LINEAColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property PRODUCTO() As String
            Get
                Return CType(Me(Me.tableVENTAS_PEDIDO.PRODUCTOColumn),String)
            End Get
            Set
                Me(Me.tableVENTAS_PEDIDO.PRODUCTOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property CANTIDAD() As Decimal
            Get
                Return CType(Me(Me.tableVENTAS_PEDIDO.CANTIDADColumn),Decimal)
            End Get
            Set
                Me(Me.tableVENTAS_PEDIDO.CANTIDADColumn) = value
            End Set
        End Property
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Partial Public Class VENTAS_LISTARow
        Inherits Global.System.Data.DataRow
        
        Private tableVENTAS_LISTA As VENTAS_LISTADataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableVENTAS_LISTA = CType(Me.Table,VENTAS_LISTADataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property VENTA() As String
            Get
                Return CType(Me(Me.tableVENTAS_LISTA.VENTAColumn),String)
            End Get
            Set
                Me(Me.tableVENTAS_LISTA.VENTAColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property COMPROBANTE_FECHA() As Date
            Get
                Return CType(Me(Me.tableVENTAS_LISTA.COMPROBANTE_FECHAColumn),Date)
            End Get
            Set
                Me(Me.tableVENTAS_LISTA.COMPROBANTE_FECHAColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property COMPROBANTE_SERIE() As String
            Get
                Return CType(Me(Me.tableVENTAS_LISTA.COMPROBANTE_SERIEColumn),String)
            End Get
            Set
                Me(Me.tableVENTAS_LISTA.COMPROBANTE_SERIEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property COMPROBANTE_NUMERO() As String
            Get
                Return CType(Me(Me.tableVENTAS_LISTA.COMPROBANTE_NUMEROColumn),String)
            End Get
            Set
                Me(Me.tableVENTAS_LISTA.COMPROBANTE_NUMEROColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property RAZON_SOCIAL() As String
            Get
                Return CType(Me(Me.tableVENTAS_LISTA.RAZON_SOCIALColumn),String)
            End Get
            Set
                Me(Me.tableVENTAS_LISTA.RAZON_SOCIALColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property VENDEDOR() As String
            Get
                Return CType(Me(Me.tableVENTAS_LISTA.VENDEDORColumn),String)
            End Get
            Set
                Me(Me.tableVENTAS_LISTA.VENDEDORColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property VENDEDOR_NOMBRE() As String
            Get
                Return CType(Me(Me.tableVENTAS_LISTA.VENDEDOR_NOMBREColumn),String)
            End Get
            Set
                Me(Me.tableVENTAS_LISTA.VENDEDOR_NOMBREColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property MONEDA() As String
            Get
                Return CType(Me(Me.tableVENTAS_LISTA.MONEDAColumn),String)
            End Get
            Set
                Me(Me.tableVENTAS_LISTA.MONEDAColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property BASE_IMPONIBLE_GRAVADA_ORIGEN() As Decimal
            Get
                Return CType(Me(Me.tableVENTAS_LISTA.BASE_IMPONIBLE_GRAVADA_ORIGENColumn),Decimal)
            End Get
            Set
                Me(Me.tableVENTAS_LISTA.BASE_IMPONIBLE_GRAVADA_ORIGENColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property IGV_ORIGEN() As Decimal
            Get
                Return CType(Me(Me.tableVENTAS_LISTA.IGV_ORIGENColumn),Decimal)
            End Get
            Set
                Me(Me.tableVENTAS_LISTA.IGV_ORIGENColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property IMPORTE_TOTAL_ORIGEN() As Decimal
            Get
                Return CType(Me(Me.tableVENTAS_LISTA.IMPORTE_TOTAL_ORIGENColumn),Decimal)
            End Get
            Set
                Me(Me.tableVENTAS_LISTA.IMPORTE_TOTAL_ORIGENColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property ESTADO() As String
            Get
                Return CType(Me(Me.tableVENTAS_LISTA.ESTADOColumn),String)
            End Get
            Set
                Me(Me.tableVENTAS_LISTA.ESTADOColumn) = value
            End Set
        End Property
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Partial Public Class VENTAS_DETALLERow
        Inherits Global.System.Data.DataRow
        
        Private tableVENTAS_DETALLE As VENTAS_DETALLEDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableVENTAS_DETALLE = CType(Me.Table,VENTAS_DETALLEDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property EMPRESA() As String
            Get
                Return CType(Me(Me.tableVENTAS_DETALLE.EMPRESAColumn),String)
            End Get
            Set
                Me(Me.tableVENTAS_DETALLE.EMPRESAColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property VENTA() As String
            Get
                Return CType(Me(Me.tableVENTAS_DETALLE.VENTAColumn),String)
            End Get
            Set
                Me(Me.tableVENTAS_DETALLE.VENTAColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property LINEA() As String
            Get
                Return CType(Me(Me.tableVENTAS_DETALLE.LINEAColumn),String)
            End Get
            Set
                Me(Me.tableVENTAS_DETALLE.LINEAColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property PRODUCTO() As String
            Get
                Return CType(Me(Me.tableVENTAS_DETALLE.PRODUCTOColumn),String)
            End Get
            Set
                Me(Me.tableVENTAS_DETALLE.PRODUCTOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property DESCRIPCION_AMPLIADA() As String
            Get
                Return CType(Me(Me.tableVENTAS_DETALLE.DESCRIPCION_AMPLIADAColumn),String)
            End Get
            Set
                Me(Me.tableVENTAS_DETALLE.DESCRIPCION_AMPLIADAColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property CANTIDAD() As Decimal
            Get
                Return CType(Me(Me.tableVENTAS_DETALLE.CANTIDADColumn),Decimal)
            End Get
            Set
                Me(Me.tableVENTAS_DETALLE.CANTIDADColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property PRECIO_UNITARIO_ME() As Decimal
            Get
                Return CType(Me(Me.tableVENTAS_DETALLE.PRECIO_UNITARIO_MEColumn),Decimal)
            End Get
            Set
                Me(Me.tableVENTAS_DETALLE.PRECIO_UNITARIO_MEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property IMPORTE_TOTAL_ME() As Decimal
            Get
                Return CType(Me(Me.tableVENTAS_DETALLE.IMPORTE_TOTAL_MEColumn),Decimal)
            End Get
            Set
                Me(Me.tableVENTAS_DETALLE.IMPORTE_TOTAL_MEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property NUMERO_LOTE() As String
            Get
                Return CType(Me(Me.tableVENTAS_DETALLE.NUMERO_LOTEColumn),String)
            End Get
            Set
                Me(Me.tableVENTAS_DETALLE.NUMERO_LOTEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property INDICA_COMPUESTO() As String
            Get
                Return CType(Me(Me.tableVENTAS_DETALLE.INDICA_COMPUESTOColumn),String)
            End Get
            Set
                Me(Me.tableVENTAS_DETALLE.INDICA_COMPUESTOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property INDICA_VALIDA_STOCK() As String
            Get
                Return CType(Me(Me.tableVENTAS_DETALLE.INDICA_VALIDA_STOCKColumn),String)
            End Get
            Set
                Me(Me.tableVENTAS_DETALLE.INDICA_VALIDA_STOCKColumn) = value
            End Set
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Public Class VENTASRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As VENTASRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New(ByVal row As VENTASRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Row() As VENTASRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Public Class VENTAS_PRORowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As VENTAS_PRORow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New(ByVal row As VENTAS_PRORow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Row() As VENTAS_PRORow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Public Class VENTAS_SERRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As VENTAS_SERRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New(ByVal row As VENTAS_SERRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Row() As VENTAS_SERRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Public Class VENTAS_PRODUCTOSRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As VENTAS_PRODUCTOSRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New(ByVal row As VENTAS_PRODUCTOSRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Row() As VENTAS_PRODUCTOSRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Public Class VENTAS_PEDIDORowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As VENTAS_PEDIDORow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New(ByVal row As VENTAS_PEDIDORow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Row() As VENTAS_PEDIDORow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Public Class VENTAS_LISTARowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As VENTAS_LISTARow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New(ByVal row As VENTAS_LISTARow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Row() As VENTAS_LISTARow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Public Class VENTAS_DETALLERowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As VENTAS_DETALLERow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New(ByVal row As VENTAS_DETALLERow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Row() As VENTAS_DETALLERow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
End Class
