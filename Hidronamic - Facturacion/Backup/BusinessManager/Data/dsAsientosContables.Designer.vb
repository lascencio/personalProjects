'------------------------------------------------------------------------------
' <auto-generated>
'     Este código fue generado por una herramienta.
'     Versión del motor en tiempo de ejecución:2.0.50727.5485
'
'     Los cambios en este archivo podrían causar un comportamiento incorrecto y se perderán si
'     se vuelve a generar el código.
' </auto-generated>
'------------------------------------------------------------------------------

Option Strict Off
Option Explicit On



'''<summary>
'''Represents a strongly typed in-memory cache of data.
'''</summary>
<Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0"),  _
 Global.System.Serializable(),  _
 Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
 Global.System.ComponentModel.ToolboxItem(true),  _
 Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema"),  _
 Global.System.Xml.Serialization.XmlRootAttribute("dsAsientosContables"),  _
 Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")>  _
Partial Public Class dsAsientosContables
    Inherits Global.System.Data.DataSet
    
    Private tableASIENTOS_CONTABLES As ASIENTOS_CONTABLESDataTable
    
    Private tableASIENTOS_CONTABLES_DET As ASIENTOS_CONTABLES_DETDataTable
    
    Private _schemaSerializationMode As Global.System.Data.SchemaSerializationMode = Global.System.Data.SchemaSerializationMode.IncludeSchema
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Public Sub New()
        MyBase.New
        Me.BeginInit
        Me.InitClass
        Dim schemaChangedHandler As Global.System.ComponentModel.CollectionChangeEventHandler = AddressOf Me.SchemaChanged
        AddHandler MyBase.Tables.CollectionChanged, schemaChangedHandler
        AddHandler MyBase.Relations.CollectionChanged, schemaChangedHandler
        Me.EndInit
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
        MyBase.New(info, context, false)
        If (Me.IsBinarySerialized(info, context) = true) Then
            Me.InitVars(false)
            Dim schemaChangedHandler1 As Global.System.ComponentModel.CollectionChangeEventHandler = AddressOf Me.SchemaChanged
            AddHandler Me.Tables.CollectionChanged, schemaChangedHandler1
            AddHandler Me.Relations.CollectionChanged, schemaChangedHandler1
            Return
        End If
        Dim strSchema As String = CType(info.GetValue("XmlSchema", GetType(String)),String)
        If (Me.DetermineSchemaSerializationMode(info, context) = Global.System.Data.SchemaSerializationMode.IncludeSchema) Then
            Dim ds As Global.System.Data.DataSet = New Global.System.Data.DataSet
            ds.ReadXmlSchema(New Global.System.Xml.XmlTextReader(New Global.System.IO.StringReader(strSchema)))
            If (Not (ds.Tables("ASIENTOS_CONTABLES")) Is Nothing) Then
                MyBase.Tables.Add(New ASIENTOS_CONTABLESDataTable(ds.Tables("ASIENTOS_CONTABLES")))
            End If
            If (Not (ds.Tables("ASIENTOS_CONTABLES_DET")) Is Nothing) Then
                MyBase.Tables.Add(New ASIENTOS_CONTABLES_DETDataTable(ds.Tables("ASIENTOS_CONTABLES_DET")))
            End If
            Me.DataSetName = ds.DataSetName
            Me.Prefix = ds.Prefix
            Me.Namespace = ds.Namespace
            Me.Locale = ds.Locale
            Me.CaseSensitive = ds.CaseSensitive
            Me.EnforceConstraints = ds.EnforceConstraints
            Me.Merge(ds, false, Global.System.Data.MissingSchemaAction.Add)
            Me.InitVars
        Else
            Me.ReadXmlSchema(New Global.System.Xml.XmlTextReader(New Global.System.IO.StringReader(strSchema)))
        End If
        Me.GetSerializationData(info, context)
        Dim schemaChangedHandler As Global.System.ComponentModel.CollectionChangeEventHandler = AddressOf Me.SchemaChanged
        AddHandler MyBase.Tables.CollectionChanged, schemaChangedHandler
        AddHandler Me.Relations.CollectionChanged, schemaChangedHandler
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property ASIENTOS_CONTABLES() As ASIENTOS_CONTABLESDataTable
        Get
            Return Me.tableASIENTOS_CONTABLES
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property ASIENTOS_CONTABLES_DET() As ASIENTOS_CONTABLES_DETDataTable
        Get
            Return Me.tableASIENTOS_CONTABLES_DET
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.ComponentModel.BrowsableAttribute(true),  _
     Global.System.ComponentModel.DesignerSerializationVisibilityAttribute(Global.System.ComponentModel.DesignerSerializationVisibility.Visible)>  _
    Public Overrides Property SchemaSerializationMode() As Global.System.Data.SchemaSerializationMode
        Get
            Return Me._schemaSerializationMode
        End Get
        Set
            Me._schemaSerializationMode = value
        End Set
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.ComponentModel.DesignerSerializationVisibilityAttribute(Global.System.ComponentModel.DesignerSerializationVisibility.Hidden)>  _
    Public Shadows ReadOnly Property Tables() As Global.System.Data.DataTableCollection
        Get
            Return MyBase.Tables
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.ComponentModel.DesignerSerializationVisibilityAttribute(Global.System.ComponentModel.DesignerSerializationVisibility.Hidden)>  _
    Public Shadows ReadOnly Property Relations() As Global.System.Data.DataRelationCollection
        Get
            Return MyBase.Relations
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Protected Overrides Sub InitializeDerivedDataSet()
        Me.BeginInit
        Me.InitClass
        Me.EndInit
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Public Overrides Function Clone() As Global.System.Data.DataSet
        Dim cln As dsAsientosContables = CType(MyBase.Clone,dsAsientosContables)
        cln.InitVars
        cln.SchemaSerializationMode = Me.SchemaSerializationMode
        Return cln
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Protected Overrides Function ShouldSerializeTables() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Protected Overrides Function ShouldSerializeRelations() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Protected Overrides Sub ReadXmlSerializable(ByVal reader As Global.System.Xml.XmlReader)
        If (Me.DetermineSchemaSerializationMode(reader) = Global.System.Data.SchemaSerializationMode.IncludeSchema) Then
            Me.Reset
            Dim ds As Global.System.Data.DataSet = New Global.System.Data.DataSet
            ds.ReadXml(reader)
            If (Not (ds.Tables("ASIENTOS_CONTABLES")) Is Nothing) Then
                MyBase.Tables.Add(New ASIENTOS_CONTABLESDataTable(ds.Tables("ASIENTOS_CONTABLES")))
            End If
            If (Not (ds.Tables("ASIENTOS_CONTABLES_DET")) Is Nothing) Then
                MyBase.Tables.Add(New ASIENTOS_CONTABLES_DETDataTable(ds.Tables("ASIENTOS_CONTABLES_DET")))
            End If
            Me.DataSetName = ds.DataSetName
            Me.Prefix = ds.Prefix
            Me.Namespace = ds.Namespace
            Me.Locale = ds.Locale
            Me.CaseSensitive = ds.CaseSensitive
            Me.EnforceConstraints = ds.EnforceConstraints
            Me.Merge(ds, false, Global.System.Data.MissingSchemaAction.Add)
            Me.InitVars
        Else
            Me.ReadXml(reader)
            Me.InitVars
        End If
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Protected Overrides Function GetSchemaSerializable() As Global.System.Xml.Schema.XmlSchema
        Dim stream As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
        Me.WriteXmlSchema(New Global.System.Xml.XmlTextWriter(stream, Nothing))
        stream.Position = 0
        Return Global.System.Xml.Schema.XmlSchema.Read(New Global.System.Xml.XmlTextReader(stream), Nothing)
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Friend Overloads Sub InitVars()
        Me.InitVars(true)
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Friend Overloads Sub InitVars(ByVal initTable As Boolean)
        Me.tableASIENTOS_CONTABLES = CType(MyBase.Tables("ASIENTOS_CONTABLES"),ASIENTOS_CONTABLESDataTable)
        If (initTable = true) Then
            If (Not (Me.tableASIENTOS_CONTABLES) Is Nothing) Then
                Me.tableASIENTOS_CONTABLES.InitVars
            End If
        End If
        Me.tableASIENTOS_CONTABLES_DET = CType(MyBase.Tables("ASIENTOS_CONTABLES_DET"),ASIENTOS_CONTABLES_DETDataTable)
        If (initTable = true) Then
            If (Not (Me.tableASIENTOS_CONTABLES_DET) Is Nothing) Then
                Me.tableASIENTOS_CONTABLES_DET.InitVars
            End If
        End If
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Private Sub InitClass()
        Me.DataSetName = "dsAsientosContables"
        Me.Prefix = ""
        Me.Namespace = "http://tempuri.org/dsAsientosContables.xsd"
        Me.EnforceConstraints = true
        Me.SchemaSerializationMode = Global.System.Data.SchemaSerializationMode.IncludeSchema
        Me.tableASIENTOS_CONTABLES = New ASIENTOS_CONTABLESDataTable
        MyBase.Tables.Add(Me.tableASIENTOS_CONTABLES)
        Me.tableASIENTOS_CONTABLES_DET = New ASIENTOS_CONTABLES_DETDataTable
        MyBase.Tables.Add(Me.tableASIENTOS_CONTABLES_DET)
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Private Function ShouldSerializeASIENTOS_CONTABLES() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Private Function ShouldSerializeASIENTOS_CONTABLES_DET() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Private Sub SchemaChanged(ByVal sender As Object, ByVal e As Global.System.ComponentModel.CollectionChangeEventArgs)
        If (e.Action = Global.System.ComponentModel.CollectionChangeAction.Remove) Then
            Me.InitVars
        End If
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Public Shared Function GetTypedDataSetSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
        Dim ds As dsAsientosContables = New dsAsientosContables
        Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType
        Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence
        Dim any As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
        any.Namespace = ds.Namespace
        sequence.Items.Add(any)
        type.Particle = sequence
        Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
        If xs.Contains(dsSchema.TargetNamespace) Then
            Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
            Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
            Try 
                Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                dsSchema.Write(s1)
                Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                Do While schemas.MoveNext
                    schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                    s2.SetLength(0)
                    schema.Write(s2)
                    If (s1.Length = s2.Length) Then
                        s1.Position = 0
                        s2.Position = 0
                        
                        Do While ((s1.Position <> s1.Length)  _
                                    AndAlso (s1.ReadByte = s2.ReadByte))
                            
                            
                        Loop
                        If (s1.Position = s1.Length) Then
                            Return type
                        End If
                    End If
                    
                Loop
            Finally
                If (Not (s1) Is Nothing) Then
                    s1.Close
                End If
                If (Not (s2) Is Nothing) Then
                    s2.Close
                End If
            End Try
        End If
        xs.Add(dsSchema)
        Return type
    End Function
    
    Public Delegate Sub ASIENTOS_CONTABLESRowChangeEventHandler(ByVal sender As Object, ByVal e As ASIENTOS_CONTABLESRowChangeEvent)
    
    Public Delegate Sub ASIENTOS_CONTABLES_DETRowChangeEventHandler(ByVal sender As Object, ByVal e As ASIENTOS_CONTABLES_DETRowChangeEvent)
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0"),  _
     Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class ASIENTOS_CONTABLESDataTable
        Inherits Global.System.Data.TypedTableBase(Of ASIENTOS_CONTABLESRow)
        
        Private columnEMPRESA As Global.System.Data.DataColumn
        
        Private columnEJERCICIO As Global.System.Data.DataColumn
        
        Private columnMES As Global.System.Data.DataColumn
        
        Private columnASIENTO_TIPO As Global.System.Data.DataColumn
        
        Private columnASIENTO_NUMERO As Global.System.Data.DataColumn
        
        Private columnASIENTO_FECHA As Global.System.Data.DataColumn
        
        Private columnTIPO_MONEDA As Global.System.Data.DataColumn
        
        Private columnTIPO_CAMBIO As Global.System.Data.DataColumn
        
        Private columnGLOSA As Global.System.Data.DataColumn
        
        Private columnDEBE_ORIGEN As Global.System.Data.DataColumn
        
        Private columnHABER_ORIGEN As Global.System.Data.DataColumn
        
        Private columnDEBE_MN As Global.System.Data.DataColumn
        
        Private columnHABER_MN As Global.System.Data.DataColumn
        
        Private columnDEBE_ME As Global.System.Data.DataColumn
        
        Private columnHABER_ME As Global.System.Data.DataColumn
        
        Private columnORIGEN As Global.System.Data.DataColumn
        
        Private columnMOVIMIENTOS_FECHA As Global.System.Data.DataColumn
        
        Private columnMOVIMIENTOS_TIPO_CAMBIO As Global.System.Data.DataColumn
        
        Private columnREFERENCIA_CUO As Global.System.Data.DataColumn
        
        Private columnRENDICION_ANEXO As Global.System.Data.DataColumn
        
        Private columnRENDICION_NUMERO As Global.System.Data.DataColumn
        
        Private columnRENDICION_FECHA As Global.System.Data.DataColumn
        
        Private columnORIGEN_FONDOS As Global.System.Data.DataColumn
        
        Private columnCUENTA_CORRIENTE As Global.System.Data.DataColumn
        
        Private columnTIPO_MEDIO_PAGO As Global.System.Data.DataColumn
        
        Private columnDOCUMENTO_PAGO As Global.System.Data.DataColumn
        
        Private columnIMPORTE_PAGO As Global.System.Data.DataColumn
        
        Private columnITEM_FLUJO As Global.System.Data.DataColumn
        
        Private columnESTADO As Global.System.Data.DataColumn
        
        Private columnINDICA_BLOQUEADO As Global.System.Data.DataColumn
        
        Private columnUSUARIO_BLOQUEO As Global.System.Data.DataColumn
        
        Private columnFECHA_BLOQUEO As Global.System.Data.DataColumn
        
        Private columnUSUARIO_REGISTRO As Global.System.Data.DataColumn
        
        Private columnFECHA_REGISTRO As Global.System.Data.DataColumn
        
        Private columnUSUARIO_MODIFICA As Global.System.Data.DataColumn
        
        Private columnFECHA_MODIFICA As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "ASIENTOS_CONTABLES"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property EMPRESAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnEMPRESA
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property EJERCICIOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnEJERCICIO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property MESColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnMES
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property ASIENTO_TIPOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnASIENTO_TIPO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property ASIENTO_NUMEROColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnASIENTO_NUMERO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property ASIENTO_FECHAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnASIENTO_FECHA
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property TIPO_MONEDAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTIPO_MONEDA
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property TIPO_CAMBIOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTIPO_CAMBIO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property GLOSAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnGLOSA
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property DEBE_ORIGENColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDEBE_ORIGEN
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property HABER_ORIGENColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnHABER_ORIGEN
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property DEBE_MNColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDEBE_MN
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property HABER_MNColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnHABER_MN
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property DEBE_MEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDEBE_ME
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property HABER_MEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnHABER_ME
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property ORIGENColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnORIGEN
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property MOVIMIENTOS_FECHAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnMOVIMIENTOS_FECHA
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property MOVIMIENTOS_TIPO_CAMBIOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnMOVIMIENTOS_TIPO_CAMBIO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property REFERENCIA_CUOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnREFERENCIA_CUO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property RENDICION_ANEXOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnRENDICION_ANEXO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property RENDICION_NUMEROColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnRENDICION_NUMERO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property RENDICION_FECHAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnRENDICION_FECHA
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property ORIGEN_FONDOSColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnORIGEN_FONDOS
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property CUENTA_CORRIENTEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCUENTA_CORRIENTE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property TIPO_MEDIO_PAGOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTIPO_MEDIO_PAGO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property DOCUMENTO_PAGOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDOCUMENTO_PAGO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property IMPORTE_PAGOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnIMPORTE_PAGO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property ITEM_FLUJOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnITEM_FLUJO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property ESTADOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnESTADO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property INDICA_BLOQUEADOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnINDICA_BLOQUEADO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property USUARIO_BLOQUEOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnUSUARIO_BLOQUEO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property FECHA_BLOQUEOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnFECHA_BLOQUEO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property USUARIO_REGISTROColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnUSUARIO_REGISTRO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property FECHA_REGISTROColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnFECHA_REGISTRO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property USUARIO_MODIFICAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnUSUARIO_MODIFICA
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property FECHA_MODIFICAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnFECHA_MODIFICA
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As ASIENTOS_CONTABLESRow
            Get
                Return CType(Me.Rows(index),ASIENTOS_CONTABLESRow)
            End Get
        End Property
        
        Public Event ASIENTOS_CONTABLESRowChanging As ASIENTOS_CONTABLESRowChangeEventHandler
        
        Public Event ASIENTOS_CONTABLESRowChanged As ASIENTOS_CONTABLESRowChangeEventHandler
        
        Public Event ASIENTOS_CONTABLESRowDeleting As ASIENTOS_CONTABLESRowChangeEventHandler
        
        Public Event ASIENTOS_CONTABLESRowDeleted As ASIENTOS_CONTABLESRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Sub AddASIENTOS_CONTABLESRow(ByVal row As ASIENTOS_CONTABLESRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Function AddASIENTOS_CONTABLESRow( _
                    ByVal EMPRESA As String,  _
                    ByVal EJERCICIO As String,  _
                    ByVal MES As String,  _
                    ByVal ASIENTO_TIPO As String,  _
                    ByVal ASIENTO_NUMERO As String,  _
                    ByVal ASIENTO_FECHA As Date,  _
                    ByVal TIPO_MONEDA As String,  _
                    ByVal TIPO_CAMBIO As Decimal,  _
                    ByVal GLOSA As String,  _
                    ByVal DEBE_ORIGEN As Decimal,  _
                    ByVal HABER_ORIGEN As Decimal,  _
                    ByVal DEBE_MN As Decimal,  _
                    ByVal HABER_MN As Decimal,  _
                    ByVal DEBE_ME As Decimal,  _
                    ByVal HABER_ME As Decimal,  _
                    ByVal ORIGEN As String,  _
                    ByVal MOVIMIENTOS_FECHA As Date,  _
                    ByVal MOVIMIENTOS_TIPO_CAMBIO As Decimal,  _
                    ByVal REFERENCIA_CUO As String,  _
                    ByVal RENDICION_ANEXO As String,  _
                    ByVal RENDICION_NUMERO As String,  _
                    ByVal RENDICION_FECHA As Date,  _
                    ByVal ORIGEN_FONDOS As String,  _
                    ByVal CUENTA_CORRIENTE As String,  _
                    ByVal TIPO_MEDIO_PAGO As String,  _
                    ByVal DOCUMENTO_PAGO As String,  _
                    ByVal IMPORTE_PAGO As Decimal,  _
                    ByVal ITEM_FLUJO As String,  _
                    ByVal ESTADO As String,  _
                    ByVal INDICA_BLOQUEADO As String,  _
                    ByVal USUARIO_BLOQUEO As String,  _
                    ByVal FECHA_BLOQUEO As Date,  _
                    ByVal USUARIO_REGISTRO As String,  _
                    ByVal FECHA_REGISTRO As Date,  _
                    ByVal USUARIO_MODIFICA As String,  _
                    ByVal FECHA_MODIFICA As Date) As ASIENTOS_CONTABLESRow
            Dim rowASIENTOS_CONTABLESRow As ASIENTOS_CONTABLESRow = CType(Me.NewRow,ASIENTOS_CONTABLESRow)
            Dim columnValuesArray() As Object = New Object() {EMPRESA, EJERCICIO, MES, ASIENTO_TIPO, ASIENTO_NUMERO, ASIENTO_FECHA, TIPO_MONEDA, TIPO_CAMBIO, GLOSA, DEBE_ORIGEN, HABER_ORIGEN, DEBE_MN, HABER_MN, DEBE_ME, HABER_ME, ORIGEN, MOVIMIENTOS_FECHA, MOVIMIENTOS_TIPO_CAMBIO, REFERENCIA_CUO, RENDICION_ANEXO, RENDICION_NUMERO, RENDICION_FECHA, ORIGEN_FONDOS, CUENTA_CORRIENTE, TIPO_MEDIO_PAGO, DOCUMENTO_PAGO, IMPORTE_PAGO, ITEM_FLUJO, ESTADO, INDICA_BLOQUEADO, USUARIO_BLOQUEO, FECHA_BLOQUEO, USUARIO_REGISTRO, FECHA_REGISTRO, USUARIO_MODIFICA, FECHA_MODIFICA}
            rowASIENTOS_CONTABLESRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowASIENTOS_CONTABLESRow)
            Return rowASIENTOS_CONTABLESRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function FindByEMPRESAEJERCICIOMESASIENTO_TIPOASIENTO_NUMERO(ByVal EMPRESA As String, ByVal EJERCICIO As String, ByVal MES As String, ByVal ASIENTO_TIPO As String, ByVal ASIENTO_NUMERO As String) As ASIENTOS_CONTABLESRow
            Return CType(Me.Rows.Find(New Object() {EMPRESA, EJERCICIO, MES, ASIENTO_TIPO, ASIENTO_NUMERO}),ASIENTOS_CONTABLESRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As ASIENTOS_CONTABLESDataTable = CType(MyBase.Clone,ASIENTOS_CONTABLESDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New ASIENTOS_CONTABLESDataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub InitVars()
            Me.columnEMPRESA = MyBase.Columns("EMPRESA")
            Me.columnEJERCICIO = MyBase.Columns("EJERCICIO")
            Me.columnMES = MyBase.Columns("MES")
            Me.columnASIENTO_TIPO = MyBase.Columns("ASIENTO_TIPO")
            Me.columnASIENTO_NUMERO = MyBase.Columns("ASIENTO_NUMERO")
            Me.columnASIENTO_FECHA = MyBase.Columns("ASIENTO_FECHA")
            Me.columnTIPO_MONEDA = MyBase.Columns("TIPO_MONEDA")
            Me.columnTIPO_CAMBIO = MyBase.Columns("TIPO_CAMBIO")
            Me.columnGLOSA = MyBase.Columns("GLOSA")
            Me.columnDEBE_ORIGEN = MyBase.Columns("DEBE_ORIGEN")
            Me.columnHABER_ORIGEN = MyBase.Columns("HABER_ORIGEN")
            Me.columnDEBE_MN = MyBase.Columns("DEBE_MN")
            Me.columnHABER_MN = MyBase.Columns("HABER_MN")
            Me.columnDEBE_ME = MyBase.Columns("DEBE_ME")
            Me.columnHABER_ME = MyBase.Columns("HABER_ME")
            Me.columnORIGEN = MyBase.Columns("ORIGEN")
            Me.columnMOVIMIENTOS_FECHA = MyBase.Columns("MOVIMIENTOS_FECHA")
            Me.columnMOVIMIENTOS_TIPO_CAMBIO = MyBase.Columns("MOVIMIENTOS_TIPO_CAMBIO")
            Me.columnREFERENCIA_CUO = MyBase.Columns("REFERENCIA_CUO")
            Me.columnRENDICION_ANEXO = MyBase.Columns("RENDICION_ANEXO")
            Me.columnRENDICION_NUMERO = MyBase.Columns("RENDICION_NUMERO")
            Me.columnRENDICION_FECHA = MyBase.Columns("RENDICION_FECHA")
            Me.columnORIGEN_FONDOS = MyBase.Columns("ORIGEN_FONDOS")
            Me.columnCUENTA_CORRIENTE = MyBase.Columns("CUENTA_CORRIENTE")
            Me.columnTIPO_MEDIO_PAGO = MyBase.Columns("TIPO_MEDIO_PAGO")
            Me.columnDOCUMENTO_PAGO = MyBase.Columns("DOCUMENTO_PAGO")
            Me.columnIMPORTE_PAGO = MyBase.Columns("IMPORTE_PAGO")
            Me.columnITEM_FLUJO = MyBase.Columns("ITEM_FLUJO")
            Me.columnESTADO = MyBase.Columns("ESTADO")
            Me.columnINDICA_BLOQUEADO = MyBase.Columns("INDICA_BLOQUEADO")
            Me.columnUSUARIO_BLOQUEO = MyBase.Columns("USUARIO_BLOQUEO")
            Me.columnFECHA_BLOQUEO = MyBase.Columns("FECHA_BLOQUEO")
            Me.columnUSUARIO_REGISTRO = MyBase.Columns("USUARIO_REGISTRO")
            Me.columnFECHA_REGISTRO = MyBase.Columns("FECHA_REGISTRO")
            Me.columnUSUARIO_MODIFICA = MyBase.Columns("USUARIO_MODIFICA")
            Me.columnFECHA_MODIFICA = MyBase.Columns("FECHA_MODIFICA")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitClass()
            Me.columnEMPRESA = New Global.System.Data.DataColumn("EMPRESA", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnEMPRESA)
            Me.columnEJERCICIO = New Global.System.Data.DataColumn("EJERCICIO", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnEJERCICIO)
            Me.columnMES = New Global.System.Data.DataColumn("MES", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMES)
            Me.columnASIENTO_TIPO = New Global.System.Data.DataColumn("ASIENTO_TIPO", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnASIENTO_TIPO)
            Me.columnASIENTO_NUMERO = New Global.System.Data.DataColumn("ASIENTO_NUMERO", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnASIENTO_NUMERO)
            Me.columnASIENTO_FECHA = New Global.System.Data.DataColumn("ASIENTO_FECHA", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnASIENTO_FECHA)
            Me.columnTIPO_MONEDA = New Global.System.Data.DataColumn("TIPO_MONEDA", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTIPO_MONEDA)
            Me.columnTIPO_CAMBIO = New Global.System.Data.DataColumn("TIPO_CAMBIO", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTIPO_CAMBIO)
            Me.columnGLOSA = New Global.System.Data.DataColumn("GLOSA", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnGLOSA)
            Me.columnDEBE_ORIGEN = New Global.System.Data.DataColumn("DEBE_ORIGEN", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDEBE_ORIGEN)
            Me.columnHABER_ORIGEN = New Global.System.Data.DataColumn("HABER_ORIGEN", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnHABER_ORIGEN)
            Me.columnDEBE_MN = New Global.System.Data.DataColumn("DEBE_MN", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDEBE_MN)
            Me.columnHABER_MN = New Global.System.Data.DataColumn("HABER_MN", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnHABER_MN)
            Me.columnDEBE_ME = New Global.System.Data.DataColumn("DEBE_ME", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDEBE_ME)
            Me.columnHABER_ME = New Global.System.Data.DataColumn("HABER_ME", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnHABER_ME)
            Me.columnORIGEN = New Global.System.Data.DataColumn("ORIGEN", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnORIGEN)
            Me.columnMOVIMIENTOS_FECHA = New Global.System.Data.DataColumn("MOVIMIENTOS_FECHA", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMOVIMIENTOS_FECHA)
            Me.columnMOVIMIENTOS_TIPO_CAMBIO = New Global.System.Data.DataColumn("MOVIMIENTOS_TIPO_CAMBIO", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMOVIMIENTOS_TIPO_CAMBIO)
            Me.columnREFERENCIA_CUO = New Global.System.Data.DataColumn("REFERENCIA_CUO", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnREFERENCIA_CUO)
            Me.columnRENDICION_ANEXO = New Global.System.Data.DataColumn("RENDICION_ANEXO", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRENDICION_ANEXO)
            Me.columnRENDICION_NUMERO = New Global.System.Data.DataColumn("RENDICION_NUMERO", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRENDICION_NUMERO)
            Me.columnRENDICION_FECHA = New Global.System.Data.DataColumn("RENDICION_FECHA", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRENDICION_FECHA)
            Me.columnORIGEN_FONDOS = New Global.System.Data.DataColumn("ORIGEN_FONDOS", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnORIGEN_FONDOS)
            Me.columnCUENTA_CORRIENTE = New Global.System.Data.DataColumn("CUENTA_CORRIENTE", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCUENTA_CORRIENTE)
            Me.columnTIPO_MEDIO_PAGO = New Global.System.Data.DataColumn("TIPO_MEDIO_PAGO", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTIPO_MEDIO_PAGO)
            Me.columnDOCUMENTO_PAGO = New Global.System.Data.DataColumn("DOCUMENTO_PAGO", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDOCUMENTO_PAGO)
            Me.columnIMPORTE_PAGO = New Global.System.Data.DataColumn("IMPORTE_PAGO", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnIMPORTE_PAGO)
            Me.columnITEM_FLUJO = New Global.System.Data.DataColumn("ITEM_FLUJO", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnITEM_FLUJO)
            Me.columnESTADO = New Global.System.Data.DataColumn("ESTADO", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnESTADO)
            Me.columnINDICA_BLOQUEADO = New Global.System.Data.DataColumn("INDICA_BLOQUEADO", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnINDICA_BLOQUEADO)
            Me.columnUSUARIO_BLOQUEO = New Global.System.Data.DataColumn("USUARIO_BLOQUEO", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnUSUARIO_BLOQUEO)
            Me.columnFECHA_BLOQUEO = New Global.System.Data.DataColumn("FECHA_BLOQUEO", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFECHA_BLOQUEO)
            Me.columnUSUARIO_REGISTRO = New Global.System.Data.DataColumn("USUARIO_REGISTRO", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnUSUARIO_REGISTRO)
            Me.columnFECHA_REGISTRO = New Global.System.Data.DataColumn("FECHA_REGISTRO", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFECHA_REGISTRO)
            Me.columnUSUARIO_MODIFICA = New Global.System.Data.DataColumn("USUARIO_MODIFICA", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnUSUARIO_MODIFICA)
            Me.columnFECHA_MODIFICA = New Global.System.Data.DataColumn("FECHA_MODIFICA", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFECHA_MODIFICA)
            Me.Constraints.Add(New Global.System.Data.UniqueConstraint("Constraint1", New Global.System.Data.DataColumn() {Me.columnEMPRESA, Me.columnEJERCICIO, Me.columnMES, Me.columnASIENTO_TIPO, Me.columnASIENTO_NUMERO}, true))
            Me.columnEMPRESA.AllowDBNull = false
            Me.columnEMPRESA.MaxLength = 3
            Me.columnEJERCICIO.AllowDBNull = false
            Me.columnEJERCICIO.MaxLength = 4
            Me.columnMES.AllowDBNull = false
            Me.columnMES.MaxLength = 2
            Me.columnASIENTO_TIPO.AllowDBNull = false
            Me.columnASIENTO_TIPO.MaxLength = 2
            Me.columnASIENTO_NUMERO.AllowDBNull = false
            Me.columnASIENTO_NUMERO.MaxLength = 5
            Me.columnASIENTO_FECHA.AllowDBNull = false
            Me.columnTIPO_MONEDA.AllowDBNull = false
            Me.columnTIPO_MONEDA.MaxLength = 1
            Me.columnTIPO_CAMBIO.AllowDBNull = false
            Me.columnGLOSA.AllowDBNull = false
            Me.columnGLOSA.MaxLength = 60
            Me.columnDEBE_ORIGEN.AllowDBNull = false
            Me.columnHABER_ORIGEN.AllowDBNull = false
            Me.columnDEBE_MN.AllowDBNull = false
            Me.columnHABER_MN.AllowDBNull = false
            Me.columnDEBE_ME.AllowDBNull = false
            Me.columnHABER_ME.AllowDBNull = false
            Me.columnORIGEN.AllowDBNull = false
            Me.columnORIGEN.MaxLength = 3
            Me.columnMOVIMIENTOS_FECHA.AllowDBNull = false
            Me.columnMOVIMIENTOS_TIPO_CAMBIO.AllowDBNull = false
            Me.columnREFERENCIA_CUO.AllowDBNull = false
            Me.columnREFERENCIA_CUO.MaxLength = 12
            Me.columnRENDICION_ANEXO.AllowDBNull = false
            Me.columnRENDICION_ANEXO.MaxLength = 8
            Me.columnRENDICION_NUMERO.AllowDBNull = false
            Me.columnRENDICION_NUMERO.MaxLength = 10
            Me.columnORIGEN_FONDOS.AllowDBNull = false
            Me.columnORIGEN_FONDOS.MaxLength = 20
            Me.columnCUENTA_CORRIENTE.AllowDBNull = false
            Me.columnCUENTA_CORRIENTE.MaxLength = 8
            Me.columnTIPO_MEDIO_PAGO.AllowDBNull = false
            Me.columnTIPO_MEDIO_PAGO.MaxLength = 3
            Me.columnDOCUMENTO_PAGO.AllowDBNull = false
            Me.columnDOCUMENTO_PAGO.MaxLength = 10
            Me.columnIMPORTE_PAGO.AllowDBNull = false
            Me.columnITEM_FLUJO.AllowDBNull = false
            Me.columnITEM_FLUJO.MaxLength = 20
            Me.columnESTADO.AllowDBNull = false
            Me.columnESTADO.MaxLength = 1
            Me.columnINDICA_BLOQUEADO.AllowDBNull = false
            Me.columnINDICA_BLOQUEADO.MaxLength = 2
            Me.columnUSUARIO_BLOQUEO.AllowDBNull = false
            Me.columnUSUARIO_BLOQUEO.MaxLength = 20
            Me.columnUSUARIO_REGISTRO.AllowDBNull = false
            Me.columnUSUARIO_REGISTRO.MaxLength = 20
            Me.columnFECHA_REGISTRO.AllowDBNull = false
            Me.columnUSUARIO_MODIFICA.AllowDBNull = false
            Me.columnUSUARIO_MODIFICA.MaxLength = 20
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function NewASIENTOS_CONTABLESRow() As ASIENTOS_CONTABLESRow
            Return CType(Me.NewRow,ASIENTOS_CONTABLESRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New ASIENTOS_CONTABLESRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(ASIENTOS_CONTABLESRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.ASIENTOS_CONTABLESRowChangedEvent) Is Nothing) Then
                RaiseEvent ASIENTOS_CONTABLESRowChanged(Me, New ASIENTOS_CONTABLESRowChangeEvent(CType(e.Row,ASIENTOS_CONTABLESRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.ASIENTOS_CONTABLESRowChangingEvent) Is Nothing) Then
                RaiseEvent ASIENTOS_CONTABLESRowChanging(Me, New ASIENTOS_CONTABLESRowChangeEvent(CType(e.Row,ASIENTOS_CONTABLESRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.ASIENTOS_CONTABLESRowDeletedEvent) Is Nothing) Then
                RaiseEvent ASIENTOS_CONTABLESRowDeleted(Me, New ASIENTOS_CONTABLESRowChangeEvent(CType(e.Row,ASIENTOS_CONTABLESRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.ASIENTOS_CONTABLESRowDeletingEvent) Is Nothing) Then
                RaiseEvent ASIENTOS_CONTABLESRowDeleting(Me, New ASIENTOS_CONTABLESRowChangeEvent(CType(e.Row,ASIENTOS_CONTABLESRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub RemoveASIENTOS_CONTABLESRow(ByVal row As ASIENTOS_CONTABLESRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence
            Dim ds As dsAsientosContables = New dsAsientosContables
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "ASIENTOS_CONTABLESDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0"),  _
     Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class ASIENTOS_CONTABLES_DETDataTable
        Inherits Global.System.Data.TypedTableBase(Of ASIENTOS_CONTABLES_DETRow)
        
        Private columnEMPRESA As Global.System.Data.DataColumn
        
        Private columnEJERCICIO As Global.System.Data.DataColumn
        
        Private columnMES As Global.System.Data.DataColumn
        
        Private columnASIENTO_TIPO As Global.System.Data.DataColumn
        
        Private columnASIENTO_NUMERO As Global.System.Data.DataColumn
        
        Private columnASIENTO_LINEA As Global.System.Data.DataColumn
        
        Private columnASIENTO_FECHA As Global.System.Data.DataColumn
        
        Private columnCUENTA_CONTABLE As Global.System.Data.DataColumn
        
        Private columnTIPO_MONEDA As Global.System.Data.DataColumn
        
        Private columnTIPO_CAMBIO As Global.System.Data.DataColumn
        
        Private columnGLOSA As Global.System.Data.DataColumn
        
        Private columnCUENTA_CORRIENTE As Global.System.Data.DataColumn
        
        Private columnCOMPROBANTE_TIPO As Global.System.Data.DataColumn
        
        Private columnCOMPROBANTE_SERIE As Global.System.Data.DataColumn
        
        Private columnCOMPROBANTE_NUMERO As Global.System.Data.DataColumn
        
        Private columnCOMPROBANTE_FECHA As Global.System.Data.DataColumn
        
        Private columnCOMPROBANTE_VENCIMIENTO As Global.System.Data.DataColumn
        
        Private columnDEBE_ORIGEN As Global.System.Data.DataColumn
        
        Private columnHABER_ORIGEN As Global.System.Data.DataColumn
        
        Private columnDEBE_MN As Global.System.Data.DataColumn
        
        Private columnHABER_MN As Global.System.Data.DataColumn
        
        Private columnDEBE_ME As Global.System.Data.DataColumn
        
        Private columnHABER_ME As Global.System.Data.DataColumn
        
        Private columnITEM_GASTO As Global.System.Data.DataColumn
        
        Private columnITEM_FLUJO As Global.System.Data.DataColumn
        
        Private columnGASTO_FUNCION As Global.System.Data.DataColumn
        
        Private columnCENTRO_COSTO As Global.System.Data.DataColumn
        
        Private columnAREA As Global.System.Data.DataColumn
        
        Private columnLINEA_NEGOCIO As Global.System.Data.DataColumn
        
        Private columnPROYECTO As Global.System.Data.DataColumn
        
        Private columnZONA As Global.System.Data.DataColumn
        
        Private columnVENDEDOR As Global.System.Data.DataColumn
        
        Private columnCOMPRADOR As Global.System.Data.DataColumn
        
        Private columnTRANSPORTISTA As Global.System.Data.DataColumn
        
        Private columnANALISIS_01 As Global.System.Data.DataColumn
        
        Private columnANALISIS_02 As Global.System.Data.DataColumn
        
        Private columnANALISIS_03 As Global.System.Data.DataColumn
        
        Private columnANALISIS_04 As Global.System.Data.DataColumn
        
        Private columnANALISIS_05 As Global.System.Data.DataColumn
        
        Private columnANALISIS_06 As Global.System.Data.DataColumn
        
        Private columnANALISIS_07 As Global.System.Data.DataColumn
        
        Private columnANALISIS_08 As Global.System.Data.DataColumn
        
        Private columnANALISIS_09 As Global.System.Data.DataColumn
        
        Private columnANALISIS_10 As Global.System.Data.DataColumn
        
        Private columnCUENTA_BANCARIA As Global.System.Data.DataColumn
        
        Private columnINDICA_CONCILIADO As Global.System.Data.DataColumn
        
        Private columnEJERCICIO_CONCILIADO As Global.System.Data.DataColumn
        
        Private columnMES_CONCILIADO As Global.System.Data.DataColumn
        
        Private columnTIPO_MEDIO_PAGO As Global.System.Data.DataColumn
        
        Private columnDOCUMENTO_PAGO As Global.System.Data.DataColumn
        
        Private columnFECHA_PAGO As Global.System.Data.DataColumn
        
        Private columnINDICA_EN_CARTERA As Global.System.Data.DataColumn
        
        Private columnORIGEN As Global.System.Data.DataColumn
        
        Private columnESTADO As Global.System.Data.DataColumn
        
        Private columnUSUARIO_REGISTRO As Global.System.Data.DataColumn
        
        Private columnFECHA_REGISTRO As Global.System.Data.DataColumn
        
        Private columnUSUARIO_MODIFICA As Global.System.Data.DataColumn
        
        Private columnFECHA_MODIFICA As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "ASIENTOS_CONTABLES_DET"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property EMPRESAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnEMPRESA
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property EJERCICIOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnEJERCICIO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property MESColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnMES
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property ASIENTO_TIPOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnASIENTO_TIPO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property ASIENTO_NUMEROColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnASIENTO_NUMERO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property ASIENTO_LINEAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnASIENTO_LINEA
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property ASIENTO_FECHAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnASIENTO_FECHA
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property CUENTA_CONTABLEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCUENTA_CONTABLE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property TIPO_MONEDAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTIPO_MONEDA
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property TIPO_CAMBIOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTIPO_CAMBIO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property GLOSAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnGLOSA
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property CUENTA_CORRIENTEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCUENTA_CORRIENTE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property COMPROBANTE_TIPOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCOMPROBANTE_TIPO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property COMPROBANTE_SERIEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCOMPROBANTE_SERIE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property COMPROBANTE_NUMEROColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCOMPROBANTE_NUMERO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property COMPROBANTE_FECHAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCOMPROBANTE_FECHA
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property COMPROBANTE_VENCIMIENTOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCOMPROBANTE_VENCIMIENTO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property DEBE_ORIGENColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDEBE_ORIGEN
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property HABER_ORIGENColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnHABER_ORIGEN
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property DEBE_MNColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDEBE_MN
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property HABER_MNColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnHABER_MN
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property DEBE_MEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDEBE_ME
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property HABER_MEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnHABER_ME
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property ITEM_GASTOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnITEM_GASTO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property ITEM_FLUJOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnITEM_FLUJO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property GASTO_FUNCIONColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnGASTO_FUNCION
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property CENTRO_COSTOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCENTRO_COSTO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property AREAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnAREA
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property LINEA_NEGOCIOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnLINEA_NEGOCIO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property PROYECTOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPROYECTO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property ZONAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnZONA
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property VENDEDORColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnVENDEDOR
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property COMPRADORColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCOMPRADOR
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property TRANSPORTISTAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTRANSPORTISTA
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property ANALISIS_01Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnANALISIS_01
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property ANALISIS_02Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnANALISIS_02
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property ANALISIS_03Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnANALISIS_03
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property ANALISIS_04Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnANALISIS_04
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property ANALISIS_05Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnANALISIS_05
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property ANALISIS_06Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnANALISIS_06
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property ANALISIS_07Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnANALISIS_07
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property ANALISIS_08Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnANALISIS_08
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property ANALISIS_09Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnANALISIS_09
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property ANALISIS_10Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnANALISIS_10
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property CUENTA_BANCARIAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCUENTA_BANCARIA
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property INDICA_CONCILIADOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnINDICA_CONCILIADO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property EJERCICIO_CONCILIADOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnEJERCICIO_CONCILIADO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property MES_CONCILIADOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnMES_CONCILIADO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property TIPO_MEDIO_PAGOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTIPO_MEDIO_PAGO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property DOCUMENTO_PAGOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDOCUMENTO_PAGO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property FECHA_PAGOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnFECHA_PAGO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property INDICA_EN_CARTERAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnINDICA_EN_CARTERA
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property ORIGENColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnORIGEN
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property ESTADOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnESTADO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property USUARIO_REGISTROColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnUSUARIO_REGISTRO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property FECHA_REGISTROColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnFECHA_REGISTRO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property USUARIO_MODIFICAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnUSUARIO_MODIFICA
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property FECHA_MODIFICAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnFECHA_MODIFICA
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As ASIENTOS_CONTABLES_DETRow
            Get
                Return CType(Me.Rows(index),ASIENTOS_CONTABLES_DETRow)
            End Get
        End Property
        
        Public Event ASIENTOS_CONTABLES_DETRowChanging As ASIENTOS_CONTABLES_DETRowChangeEventHandler
        
        Public Event ASIENTOS_CONTABLES_DETRowChanged As ASIENTOS_CONTABLES_DETRowChangeEventHandler
        
        Public Event ASIENTOS_CONTABLES_DETRowDeleting As ASIENTOS_CONTABLES_DETRowChangeEventHandler
        
        Public Event ASIENTOS_CONTABLES_DETRowDeleted As ASIENTOS_CONTABLES_DETRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Sub AddASIENTOS_CONTABLES_DETRow(ByVal row As ASIENTOS_CONTABLES_DETRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Function AddASIENTOS_CONTABLES_DETRow( _
                    ByVal EMPRESA As String,  _
                    ByVal EJERCICIO As String,  _
                    ByVal MES As String,  _
                    ByVal ASIENTO_TIPO As String,  _
                    ByVal ASIENTO_NUMERO As String,  _
                    ByVal ASIENTO_LINEA As String,  _
                    ByVal ASIENTO_FECHA As Date,  _
                    ByVal CUENTA_CONTABLE As String,  _
                    ByVal TIPO_MONEDA As String,  _
                    ByVal TIPO_CAMBIO As Decimal,  _
                    ByVal GLOSA As String,  _
                    ByVal CUENTA_CORRIENTE As String,  _
                    ByVal COMPROBANTE_TIPO As String,  _
                    ByVal COMPROBANTE_SERIE As String,  _
                    ByVal COMPROBANTE_NUMERO As String,  _
                    ByVal COMPROBANTE_FECHA As Date,  _
                    ByVal COMPROBANTE_VENCIMIENTO As Date,  _
                    ByVal DEBE_ORIGEN As Decimal,  _
                    ByVal HABER_ORIGEN As Decimal,  _
                    ByVal DEBE_MN As Decimal,  _
                    ByVal HABER_MN As Decimal,  _
                    ByVal DEBE_ME As Decimal,  _
                    ByVal HABER_ME As Decimal,  _
                    ByVal ITEM_GASTO As String,  _
                    ByVal ITEM_FLUJO As String,  _
                    ByVal GASTO_FUNCION As String,  _
                    ByVal CENTRO_COSTO As String,  _
                    ByVal AREA As String,  _
                    ByVal LINEA_NEGOCIO As String,  _
                    ByVal PROYECTO As String,  _
                    ByVal ZONA As String,  _
                    ByVal VENDEDOR As String,  _
                    ByVal COMPRADOR As String,  _
                    ByVal TRANSPORTISTA As String,  _
                    ByVal ANALISIS_01 As String,  _
                    ByVal ANALISIS_02 As String,  _
                    ByVal ANALISIS_03 As String,  _
                    ByVal ANALISIS_04 As String,  _
                    ByVal ANALISIS_05 As String,  _
                    ByVal ANALISIS_06 As String,  _
                    ByVal ANALISIS_07 As String,  _
                    ByVal ANALISIS_08 As String,  _
                    ByVal ANALISIS_09 As String,  _
                    ByVal ANALISIS_10 As String,  _
                    ByVal CUENTA_BANCARIA As String,  _
                    ByVal INDICA_CONCILIADO As String,  _
                    ByVal EJERCICIO_CONCILIADO As String,  _
                    ByVal MES_CONCILIADO As String,  _
                    ByVal TIPO_MEDIO_PAGO As String,  _
                    ByVal DOCUMENTO_PAGO As String,  _
                    ByVal FECHA_PAGO As Date,  _
                    ByVal INDICA_EN_CARTERA As String,  _
                    ByVal ORIGEN As String,  _
                    ByVal ESTADO As String,  _
                    ByVal USUARIO_REGISTRO As String,  _
                    ByVal FECHA_REGISTRO As Date,  _
                    ByVal USUARIO_MODIFICA As String,  _
                    ByVal FECHA_MODIFICA As Date) As ASIENTOS_CONTABLES_DETRow
            Dim rowASIENTOS_CONTABLES_DETRow As ASIENTOS_CONTABLES_DETRow = CType(Me.NewRow,ASIENTOS_CONTABLES_DETRow)
            Dim columnValuesArray() As Object = New Object() {EMPRESA, EJERCICIO, MES, ASIENTO_TIPO, ASIENTO_NUMERO, ASIENTO_LINEA, ASIENTO_FECHA, CUENTA_CONTABLE, TIPO_MONEDA, TIPO_CAMBIO, GLOSA, CUENTA_CORRIENTE, COMPROBANTE_TIPO, COMPROBANTE_SERIE, COMPROBANTE_NUMERO, COMPROBANTE_FECHA, COMPROBANTE_VENCIMIENTO, DEBE_ORIGEN, HABER_ORIGEN, DEBE_MN, HABER_MN, DEBE_ME, HABER_ME, ITEM_GASTO, ITEM_FLUJO, GASTO_FUNCION, CENTRO_COSTO, AREA, LINEA_NEGOCIO, PROYECTO, ZONA, VENDEDOR, COMPRADOR, TRANSPORTISTA, ANALISIS_01, ANALISIS_02, ANALISIS_03, ANALISIS_04, ANALISIS_05, ANALISIS_06, ANALISIS_07, ANALISIS_08, ANALISIS_09, ANALISIS_10, CUENTA_BANCARIA, INDICA_CONCILIADO, EJERCICIO_CONCILIADO, MES_CONCILIADO, TIPO_MEDIO_PAGO, DOCUMENTO_PAGO, FECHA_PAGO, INDICA_EN_CARTERA, ORIGEN, ESTADO, USUARIO_REGISTRO, FECHA_REGISTRO, USUARIO_MODIFICA, FECHA_MODIFICA}
            rowASIENTOS_CONTABLES_DETRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowASIENTOS_CONTABLES_DETRow)
            Return rowASIENTOS_CONTABLES_DETRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function FindByEMPRESAEJERCICIOMESASIENTO_TIPOASIENTO_NUMEROASIENTO_LINEA(ByVal EMPRESA As String, ByVal EJERCICIO As String, ByVal MES As String, ByVal ASIENTO_TIPO As String, ByVal ASIENTO_NUMERO As String, ByVal ASIENTO_LINEA As String) As ASIENTOS_CONTABLES_DETRow
            Return CType(Me.Rows.Find(New Object() {EMPRESA, EJERCICIO, MES, ASIENTO_TIPO, ASIENTO_NUMERO, ASIENTO_LINEA}),ASIENTOS_CONTABLES_DETRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As ASIENTOS_CONTABLES_DETDataTable = CType(MyBase.Clone,ASIENTOS_CONTABLES_DETDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New ASIENTOS_CONTABLES_DETDataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub InitVars()
            Me.columnEMPRESA = MyBase.Columns("EMPRESA")
            Me.columnEJERCICIO = MyBase.Columns("EJERCICIO")
            Me.columnMES = MyBase.Columns("MES")
            Me.columnASIENTO_TIPO = MyBase.Columns("ASIENTO_TIPO")
            Me.columnASIENTO_NUMERO = MyBase.Columns("ASIENTO_NUMERO")
            Me.columnASIENTO_LINEA = MyBase.Columns("ASIENTO_LINEA")
            Me.columnASIENTO_FECHA = MyBase.Columns("ASIENTO_FECHA")
            Me.columnCUENTA_CONTABLE = MyBase.Columns("CUENTA_CONTABLE")
            Me.columnTIPO_MONEDA = MyBase.Columns("TIPO_MONEDA")
            Me.columnTIPO_CAMBIO = MyBase.Columns("TIPO_CAMBIO")
            Me.columnGLOSA = MyBase.Columns("GLOSA")
            Me.columnCUENTA_CORRIENTE = MyBase.Columns("CUENTA_CORRIENTE")
            Me.columnCOMPROBANTE_TIPO = MyBase.Columns("COMPROBANTE_TIPO")
            Me.columnCOMPROBANTE_SERIE = MyBase.Columns("COMPROBANTE_SERIE")
            Me.columnCOMPROBANTE_NUMERO = MyBase.Columns("COMPROBANTE_NUMERO")
            Me.columnCOMPROBANTE_FECHA = MyBase.Columns("COMPROBANTE_FECHA")
            Me.columnCOMPROBANTE_VENCIMIENTO = MyBase.Columns("COMPROBANTE_VENCIMIENTO")
            Me.columnDEBE_ORIGEN = MyBase.Columns("DEBE_ORIGEN")
            Me.columnHABER_ORIGEN = MyBase.Columns("HABER_ORIGEN")
            Me.columnDEBE_MN = MyBase.Columns("DEBE_MN")
            Me.columnHABER_MN = MyBase.Columns("HABER_MN")
            Me.columnDEBE_ME = MyBase.Columns("DEBE_ME")
            Me.columnHABER_ME = MyBase.Columns("HABER_ME")
            Me.columnITEM_GASTO = MyBase.Columns("ITEM_GASTO")
            Me.columnITEM_FLUJO = MyBase.Columns("ITEM_FLUJO")
            Me.columnGASTO_FUNCION = MyBase.Columns("GASTO_FUNCION")
            Me.columnCENTRO_COSTO = MyBase.Columns("CENTRO_COSTO")
            Me.columnAREA = MyBase.Columns("AREA")
            Me.columnLINEA_NEGOCIO = MyBase.Columns("LINEA_NEGOCIO")
            Me.columnPROYECTO = MyBase.Columns("PROYECTO")
            Me.columnZONA = MyBase.Columns("ZONA")
            Me.columnVENDEDOR = MyBase.Columns("VENDEDOR")
            Me.columnCOMPRADOR = MyBase.Columns("COMPRADOR")
            Me.columnTRANSPORTISTA = MyBase.Columns("TRANSPORTISTA")
            Me.columnANALISIS_01 = MyBase.Columns("ANALISIS_01")
            Me.columnANALISIS_02 = MyBase.Columns("ANALISIS_02")
            Me.columnANALISIS_03 = MyBase.Columns("ANALISIS_03")
            Me.columnANALISIS_04 = MyBase.Columns("ANALISIS_04")
            Me.columnANALISIS_05 = MyBase.Columns("ANALISIS_05")
            Me.columnANALISIS_06 = MyBase.Columns("ANALISIS_06")
            Me.columnANALISIS_07 = MyBase.Columns("ANALISIS_07")
            Me.columnANALISIS_08 = MyBase.Columns("ANALISIS_08")
            Me.columnANALISIS_09 = MyBase.Columns("ANALISIS_09")
            Me.columnANALISIS_10 = MyBase.Columns("ANALISIS_10")
            Me.columnCUENTA_BANCARIA = MyBase.Columns("CUENTA_BANCARIA")
            Me.columnINDICA_CONCILIADO = MyBase.Columns("INDICA_CONCILIADO")
            Me.columnEJERCICIO_CONCILIADO = MyBase.Columns("EJERCICIO_CONCILIADO")
            Me.columnMES_CONCILIADO = MyBase.Columns("MES_CONCILIADO")
            Me.columnTIPO_MEDIO_PAGO = MyBase.Columns("TIPO_MEDIO_PAGO")
            Me.columnDOCUMENTO_PAGO = MyBase.Columns("DOCUMENTO_PAGO")
            Me.columnFECHA_PAGO = MyBase.Columns("FECHA_PAGO")
            Me.columnINDICA_EN_CARTERA = MyBase.Columns("INDICA_EN_CARTERA")
            Me.columnORIGEN = MyBase.Columns("ORIGEN")
            Me.columnESTADO = MyBase.Columns("ESTADO")
            Me.columnUSUARIO_REGISTRO = MyBase.Columns("USUARIO_REGISTRO")
            Me.columnFECHA_REGISTRO = MyBase.Columns("FECHA_REGISTRO")
            Me.columnUSUARIO_MODIFICA = MyBase.Columns("USUARIO_MODIFICA")
            Me.columnFECHA_MODIFICA = MyBase.Columns("FECHA_MODIFICA")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitClass()
            Me.columnEMPRESA = New Global.System.Data.DataColumn("EMPRESA", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnEMPRESA)
            Me.columnEJERCICIO = New Global.System.Data.DataColumn("EJERCICIO", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnEJERCICIO)
            Me.columnMES = New Global.System.Data.DataColumn("MES", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMES)
            Me.columnASIENTO_TIPO = New Global.System.Data.DataColumn("ASIENTO_TIPO", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnASIENTO_TIPO)
            Me.columnASIENTO_NUMERO = New Global.System.Data.DataColumn("ASIENTO_NUMERO", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnASIENTO_NUMERO)
            Me.columnASIENTO_LINEA = New Global.System.Data.DataColumn("ASIENTO_LINEA", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnASIENTO_LINEA)
            Me.columnASIENTO_FECHA = New Global.System.Data.DataColumn("ASIENTO_FECHA", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnASIENTO_FECHA)
            Me.columnCUENTA_CONTABLE = New Global.System.Data.DataColumn("CUENTA_CONTABLE", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCUENTA_CONTABLE)
            Me.columnTIPO_MONEDA = New Global.System.Data.DataColumn("TIPO_MONEDA", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTIPO_MONEDA)
            Me.columnTIPO_CAMBIO = New Global.System.Data.DataColumn("TIPO_CAMBIO", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTIPO_CAMBIO)
            Me.columnGLOSA = New Global.System.Data.DataColumn("GLOSA", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnGLOSA)
            Me.columnCUENTA_CORRIENTE = New Global.System.Data.DataColumn("CUENTA_CORRIENTE", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCUENTA_CORRIENTE)
            Me.columnCOMPROBANTE_TIPO = New Global.System.Data.DataColumn("COMPROBANTE_TIPO", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCOMPROBANTE_TIPO)
            Me.columnCOMPROBANTE_SERIE = New Global.System.Data.DataColumn("COMPROBANTE_SERIE", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCOMPROBANTE_SERIE)
            Me.columnCOMPROBANTE_NUMERO = New Global.System.Data.DataColumn("COMPROBANTE_NUMERO", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCOMPROBANTE_NUMERO)
            Me.columnCOMPROBANTE_FECHA = New Global.System.Data.DataColumn("COMPROBANTE_FECHA", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCOMPROBANTE_FECHA)
            Me.columnCOMPROBANTE_VENCIMIENTO = New Global.System.Data.DataColumn("COMPROBANTE_VENCIMIENTO", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCOMPROBANTE_VENCIMIENTO)
            Me.columnDEBE_ORIGEN = New Global.System.Data.DataColumn("DEBE_ORIGEN", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDEBE_ORIGEN)
            Me.columnHABER_ORIGEN = New Global.System.Data.DataColumn("HABER_ORIGEN", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnHABER_ORIGEN)
            Me.columnDEBE_MN = New Global.System.Data.DataColumn("DEBE_MN", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDEBE_MN)
            Me.columnHABER_MN = New Global.System.Data.DataColumn("HABER_MN", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnHABER_MN)
            Me.columnDEBE_ME = New Global.System.Data.DataColumn("DEBE_ME", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDEBE_ME)
            Me.columnHABER_ME = New Global.System.Data.DataColumn("HABER_ME", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnHABER_ME)
            Me.columnITEM_GASTO = New Global.System.Data.DataColumn("ITEM_GASTO", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnITEM_GASTO)
            Me.columnITEM_FLUJO = New Global.System.Data.DataColumn("ITEM_FLUJO", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnITEM_FLUJO)
            Me.columnGASTO_FUNCION = New Global.System.Data.DataColumn("GASTO_FUNCION", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnGASTO_FUNCION)
            Me.columnCENTRO_COSTO = New Global.System.Data.DataColumn("CENTRO_COSTO", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCENTRO_COSTO)
            Me.columnAREA = New Global.System.Data.DataColumn("AREA", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnAREA)
            Me.columnLINEA_NEGOCIO = New Global.System.Data.DataColumn("LINEA_NEGOCIO", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnLINEA_NEGOCIO)
            Me.columnPROYECTO = New Global.System.Data.DataColumn("PROYECTO", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPROYECTO)
            Me.columnZONA = New Global.System.Data.DataColumn("ZONA", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnZONA)
            Me.columnVENDEDOR = New Global.System.Data.DataColumn("VENDEDOR", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnVENDEDOR)
            Me.columnCOMPRADOR = New Global.System.Data.DataColumn("COMPRADOR", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCOMPRADOR)
            Me.columnTRANSPORTISTA = New Global.System.Data.DataColumn("TRANSPORTISTA", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTRANSPORTISTA)
            Me.columnANALISIS_01 = New Global.System.Data.DataColumn("ANALISIS_01", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnANALISIS_01)
            Me.columnANALISIS_02 = New Global.System.Data.DataColumn("ANALISIS_02", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnANALISIS_02)
            Me.columnANALISIS_03 = New Global.System.Data.DataColumn("ANALISIS_03", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnANALISIS_03)
            Me.columnANALISIS_04 = New Global.System.Data.DataColumn("ANALISIS_04", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnANALISIS_04)
            Me.columnANALISIS_05 = New Global.System.Data.DataColumn("ANALISIS_05", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnANALISIS_05)
            Me.columnANALISIS_06 = New Global.System.Data.DataColumn("ANALISIS_06", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnANALISIS_06)
            Me.columnANALISIS_07 = New Global.System.Data.DataColumn("ANALISIS_07", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnANALISIS_07)
            Me.columnANALISIS_08 = New Global.System.Data.DataColumn("ANALISIS_08", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnANALISIS_08)
            Me.columnANALISIS_09 = New Global.System.Data.DataColumn("ANALISIS_09", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnANALISIS_09)
            Me.columnANALISIS_10 = New Global.System.Data.DataColumn("ANALISIS_10", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnANALISIS_10)
            Me.columnCUENTA_BANCARIA = New Global.System.Data.DataColumn("CUENTA_BANCARIA", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCUENTA_BANCARIA)
            Me.columnINDICA_CONCILIADO = New Global.System.Data.DataColumn("INDICA_CONCILIADO", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnINDICA_CONCILIADO)
            Me.columnEJERCICIO_CONCILIADO = New Global.System.Data.DataColumn("EJERCICIO_CONCILIADO", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnEJERCICIO_CONCILIADO)
            Me.columnMES_CONCILIADO = New Global.System.Data.DataColumn("MES_CONCILIADO", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMES_CONCILIADO)
            Me.columnTIPO_MEDIO_PAGO = New Global.System.Data.DataColumn("TIPO_MEDIO_PAGO", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTIPO_MEDIO_PAGO)
            Me.columnDOCUMENTO_PAGO = New Global.System.Data.DataColumn("DOCUMENTO_PAGO", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDOCUMENTO_PAGO)
            Me.columnFECHA_PAGO = New Global.System.Data.DataColumn("FECHA_PAGO", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFECHA_PAGO)
            Me.columnINDICA_EN_CARTERA = New Global.System.Data.DataColumn("INDICA_EN_CARTERA", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnINDICA_EN_CARTERA)
            Me.columnORIGEN = New Global.System.Data.DataColumn("ORIGEN", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnORIGEN)
            Me.columnESTADO = New Global.System.Data.DataColumn("ESTADO", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnESTADO)
            Me.columnUSUARIO_REGISTRO = New Global.System.Data.DataColumn("USUARIO_REGISTRO", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnUSUARIO_REGISTRO)
            Me.columnFECHA_REGISTRO = New Global.System.Data.DataColumn("FECHA_REGISTRO", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFECHA_REGISTRO)
            Me.columnUSUARIO_MODIFICA = New Global.System.Data.DataColumn("USUARIO_MODIFICA", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnUSUARIO_MODIFICA)
            Me.columnFECHA_MODIFICA = New Global.System.Data.DataColumn("FECHA_MODIFICA", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFECHA_MODIFICA)
            Me.Constraints.Add(New Global.System.Data.UniqueConstraint("Constraint1", New Global.System.Data.DataColumn() {Me.columnEMPRESA, Me.columnEJERCICIO, Me.columnMES, Me.columnASIENTO_TIPO, Me.columnASIENTO_NUMERO, Me.columnASIENTO_LINEA}, true))
            Me.columnEMPRESA.AllowDBNull = false
            Me.columnEMPRESA.MaxLength = 3
            Me.columnEJERCICIO.AllowDBNull = false
            Me.columnEJERCICIO.MaxLength = 4
            Me.columnMES.AllowDBNull = false
            Me.columnMES.MaxLength = 2
            Me.columnASIENTO_TIPO.AllowDBNull = false
            Me.columnASIENTO_TIPO.MaxLength = 2
            Me.columnASIENTO_NUMERO.AllowDBNull = false
            Me.columnASIENTO_NUMERO.MaxLength = 5
            Me.columnASIENTO_LINEA.AllowDBNull = false
            Me.columnASIENTO_LINEA.MaxLength = 4
            Me.columnASIENTO_FECHA.AllowDBNull = false
            Me.columnCUENTA_CONTABLE.AllowDBNull = false
            Me.columnCUENTA_CONTABLE.MaxLength = 20
            Me.columnTIPO_MONEDA.AllowDBNull = false
            Me.columnTIPO_MONEDA.MaxLength = 1
            Me.columnTIPO_CAMBIO.AllowDBNull = false
            Me.columnGLOSA.AllowDBNull = false
            Me.columnGLOSA.MaxLength = 60
            Me.columnCUENTA_CORRIENTE.AllowDBNull = false
            Me.columnCUENTA_CORRIENTE.MaxLength = 18
            Me.columnCOMPROBANTE_TIPO.AllowDBNull = false
            Me.columnCOMPROBANTE_TIPO.MaxLength = 2
            Me.columnCOMPROBANTE_SERIE.AllowDBNull = false
            Me.columnCOMPROBANTE_SERIE.MaxLength = 4
            Me.columnCOMPROBANTE_NUMERO.AllowDBNull = false
            Me.columnCOMPROBANTE_NUMERO.MaxLength = 10
            Me.columnDEBE_ORIGEN.AllowDBNull = false
            Me.columnHABER_ORIGEN.AllowDBNull = false
            Me.columnDEBE_MN.AllowDBNull = false
            Me.columnHABER_MN.AllowDBNull = false
            Me.columnDEBE_ME.AllowDBNull = false
            Me.columnHABER_ME.AllowDBNull = false
            Me.columnITEM_GASTO.AllowDBNull = false
            Me.columnITEM_GASTO.MaxLength = 20
            Me.columnITEM_FLUJO.AllowDBNull = false
            Me.columnITEM_FLUJO.MaxLength = 20
            Me.columnGASTO_FUNCION.AllowDBNull = false
            Me.columnGASTO_FUNCION.MaxLength = 20
            Me.columnCENTRO_COSTO.AllowDBNull = false
            Me.columnCENTRO_COSTO.MaxLength = 20
            Me.columnAREA.AllowDBNull = false
            Me.columnAREA.MaxLength = 20
            Me.columnLINEA_NEGOCIO.AllowDBNull = false
            Me.columnLINEA_NEGOCIO.MaxLength = 20
            Me.columnPROYECTO.AllowDBNull = false
            Me.columnPROYECTO.MaxLength = 20
            Me.columnZONA.AllowDBNull = false
            Me.columnZONA.MaxLength = 20
            Me.columnVENDEDOR.AllowDBNull = false
            Me.columnVENDEDOR.MaxLength = 20
            Me.columnCOMPRADOR.AllowDBNull = false
            Me.columnCOMPRADOR.MaxLength = 20
            Me.columnTRANSPORTISTA.AllowDBNull = false
            Me.columnTRANSPORTISTA.MaxLength = 20
            Me.columnANALISIS_01.AllowDBNull = false
            Me.columnANALISIS_01.MaxLength = 20
            Me.columnANALISIS_02.AllowDBNull = false
            Me.columnANALISIS_02.MaxLength = 20
            Me.columnANALISIS_03.AllowDBNull = false
            Me.columnANALISIS_03.MaxLength = 20
            Me.columnANALISIS_04.AllowDBNull = false
            Me.columnANALISIS_04.MaxLength = 20
            Me.columnANALISIS_05.AllowDBNull = false
            Me.columnANALISIS_05.MaxLength = 20
            Me.columnANALISIS_06.AllowDBNull = false
            Me.columnANALISIS_06.MaxLength = 20
            Me.columnANALISIS_07.AllowDBNull = false
            Me.columnANALISIS_07.MaxLength = 20
            Me.columnANALISIS_08.AllowDBNull = false
            Me.columnANALISIS_08.MaxLength = 20
            Me.columnANALISIS_09.AllowDBNull = false
            Me.columnANALISIS_09.MaxLength = 20
            Me.columnANALISIS_10.AllowDBNull = false
            Me.columnANALISIS_10.MaxLength = 20
            Me.columnCUENTA_BANCARIA.AllowDBNull = false
            Me.columnCUENTA_BANCARIA.MaxLength = 8
            Me.columnINDICA_CONCILIADO.AllowDBNull = false
            Me.columnINDICA_CONCILIADO.MaxLength = 2
            Me.columnEJERCICIO_CONCILIADO.AllowDBNull = false
            Me.columnEJERCICIO_CONCILIADO.MaxLength = 4
            Me.columnMES_CONCILIADO.AllowDBNull = false
            Me.columnMES_CONCILIADO.MaxLength = 2
            Me.columnTIPO_MEDIO_PAGO.AllowDBNull = false
            Me.columnTIPO_MEDIO_PAGO.MaxLength = 3
            Me.columnDOCUMENTO_PAGO.AllowDBNull = false
            Me.columnDOCUMENTO_PAGO.MaxLength = 10
            Me.columnINDICA_EN_CARTERA.AllowDBNull = false
            Me.columnINDICA_EN_CARTERA.MaxLength = 2
            Me.columnORIGEN.AllowDBNull = false
            Me.columnORIGEN.MaxLength = 3
            Me.columnESTADO.AllowDBNull = false
            Me.columnESTADO.MaxLength = 1
            Me.columnUSUARIO_REGISTRO.AllowDBNull = false
            Me.columnUSUARIO_REGISTRO.MaxLength = 20
            Me.columnFECHA_REGISTRO.AllowDBNull = false
            Me.columnUSUARIO_MODIFICA.AllowDBNull = false
            Me.columnUSUARIO_MODIFICA.MaxLength = 20
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function NewASIENTOS_CONTABLES_DETRow() As ASIENTOS_CONTABLES_DETRow
            Return CType(Me.NewRow,ASIENTOS_CONTABLES_DETRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New ASIENTOS_CONTABLES_DETRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(ASIENTOS_CONTABLES_DETRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.ASIENTOS_CONTABLES_DETRowChangedEvent) Is Nothing) Then
                RaiseEvent ASIENTOS_CONTABLES_DETRowChanged(Me, New ASIENTOS_CONTABLES_DETRowChangeEvent(CType(e.Row,ASIENTOS_CONTABLES_DETRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.ASIENTOS_CONTABLES_DETRowChangingEvent) Is Nothing) Then
                RaiseEvent ASIENTOS_CONTABLES_DETRowChanging(Me, New ASIENTOS_CONTABLES_DETRowChangeEvent(CType(e.Row,ASIENTOS_CONTABLES_DETRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.ASIENTOS_CONTABLES_DETRowDeletedEvent) Is Nothing) Then
                RaiseEvent ASIENTOS_CONTABLES_DETRowDeleted(Me, New ASIENTOS_CONTABLES_DETRowChangeEvent(CType(e.Row,ASIENTOS_CONTABLES_DETRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.ASIENTOS_CONTABLES_DETRowDeletingEvent) Is Nothing) Then
                RaiseEvent ASIENTOS_CONTABLES_DETRowDeleting(Me, New ASIENTOS_CONTABLES_DETRowChangeEvent(CType(e.Row,ASIENTOS_CONTABLES_DETRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub RemoveASIENTOS_CONTABLES_DETRow(ByVal row As ASIENTOS_CONTABLES_DETRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence
            Dim ds As dsAsientosContables = New dsAsientosContables
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "ASIENTOS_CONTABLES_DETDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Partial Public Class ASIENTOS_CONTABLESRow
        Inherits Global.System.Data.DataRow
        
        Private tableASIENTOS_CONTABLES As ASIENTOS_CONTABLESDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableASIENTOS_CONTABLES = CType(Me.Table,ASIENTOS_CONTABLESDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property EMPRESA() As String
            Get
                Return CType(Me(Me.tableASIENTOS_CONTABLES.EMPRESAColumn),String)
            End Get
            Set
                Me(Me.tableASIENTOS_CONTABLES.EMPRESAColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property EJERCICIO() As String
            Get
                Return CType(Me(Me.tableASIENTOS_CONTABLES.EJERCICIOColumn),String)
            End Get
            Set
                Me(Me.tableASIENTOS_CONTABLES.EJERCICIOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property MES() As String
            Get
                Return CType(Me(Me.tableASIENTOS_CONTABLES.MESColumn),String)
            End Get
            Set
                Me(Me.tableASIENTOS_CONTABLES.MESColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property ASIENTO_TIPO() As String
            Get
                Return CType(Me(Me.tableASIENTOS_CONTABLES.ASIENTO_TIPOColumn),String)
            End Get
            Set
                Me(Me.tableASIENTOS_CONTABLES.ASIENTO_TIPOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property ASIENTO_NUMERO() As String
            Get
                Return CType(Me(Me.tableASIENTOS_CONTABLES.ASIENTO_NUMEROColumn),String)
            End Get
            Set
                Me(Me.tableASIENTOS_CONTABLES.ASIENTO_NUMEROColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property ASIENTO_FECHA() As Date
            Get
                Return CType(Me(Me.tableASIENTOS_CONTABLES.ASIENTO_FECHAColumn),Date)
            End Get
            Set
                Me(Me.tableASIENTOS_CONTABLES.ASIENTO_FECHAColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property TIPO_MONEDA() As String
            Get
                Return CType(Me(Me.tableASIENTOS_CONTABLES.TIPO_MONEDAColumn),String)
            End Get
            Set
                Me(Me.tableASIENTOS_CONTABLES.TIPO_MONEDAColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property TIPO_CAMBIO() As Decimal
            Get
                Return CType(Me(Me.tableASIENTOS_CONTABLES.TIPO_CAMBIOColumn),Decimal)
            End Get
            Set
                Me(Me.tableASIENTOS_CONTABLES.TIPO_CAMBIOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property GLOSA() As String
            Get
                Return CType(Me(Me.tableASIENTOS_CONTABLES.GLOSAColumn),String)
            End Get
            Set
                Me(Me.tableASIENTOS_CONTABLES.GLOSAColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property DEBE_ORIGEN() As Decimal
            Get
                Return CType(Me(Me.tableASIENTOS_CONTABLES.DEBE_ORIGENColumn),Decimal)
            End Get
            Set
                Me(Me.tableASIENTOS_CONTABLES.DEBE_ORIGENColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property HABER_ORIGEN() As Decimal
            Get
                Return CType(Me(Me.tableASIENTOS_CONTABLES.HABER_ORIGENColumn),Decimal)
            End Get
            Set
                Me(Me.tableASIENTOS_CONTABLES.HABER_ORIGENColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property DEBE_MN() As Decimal
            Get
                Return CType(Me(Me.tableASIENTOS_CONTABLES.DEBE_MNColumn),Decimal)
            End Get
            Set
                Me(Me.tableASIENTOS_CONTABLES.DEBE_MNColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property HABER_MN() As Decimal
            Get
                Return CType(Me(Me.tableASIENTOS_CONTABLES.HABER_MNColumn),Decimal)
            End Get
            Set
                Me(Me.tableASIENTOS_CONTABLES.HABER_MNColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property DEBE_ME() As Decimal
            Get
                Return CType(Me(Me.tableASIENTOS_CONTABLES.DEBE_MEColumn),Decimal)
            End Get
            Set
                Me(Me.tableASIENTOS_CONTABLES.DEBE_MEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property HABER_ME() As Decimal
            Get
                Return CType(Me(Me.tableASIENTOS_CONTABLES.HABER_MEColumn),Decimal)
            End Get
            Set
                Me(Me.tableASIENTOS_CONTABLES.HABER_MEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property ORIGEN() As String
            Get
                Return CType(Me(Me.tableASIENTOS_CONTABLES.ORIGENColumn),String)
            End Get
            Set
                Me(Me.tableASIENTOS_CONTABLES.ORIGENColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property MOVIMIENTOS_FECHA() As Date
            Get
                Return CType(Me(Me.tableASIENTOS_CONTABLES.MOVIMIENTOS_FECHAColumn),Date)
            End Get
            Set
                Me(Me.tableASIENTOS_CONTABLES.MOVIMIENTOS_FECHAColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property MOVIMIENTOS_TIPO_CAMBIO() As Decimal
            Get
                Return CType(Me(Me.tableASIENTOS_CONTABLES.MOVIMIENTOS_TIPO_CAMBIOColumn),Decimal)
            End Get
            Set
                Me(Me.tableASIENTOS_CONTABLES.MOVIMIENTOS_TIPO_CAMBIOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property REFERENCIA_CUO() As String
            Get
                Return CType(Me(Me.tableASIENTOS_CONTABLES.REFERENCIA_CUOColumn),String)
            End Get
            Set
                Me(Me.tableASIENTOS_CONTABLES.REFERENCIA_CUOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property RENDICION_ANEXO() As String
            Get
                Return CType(Me(Me.tableASIENTOS_CONTABLES.RENDICION_ANEXOColumn),String)
            End Get
            Set
                Me(Me.tableASIENTOS_CONTABLES.RENDICION_ANEXOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property RENDICION_NUMERO() As String
            Get
                Return CType(Me(Me.tableASIENTOS_CONTABLES.RENDICION_NUMEROColumn),String)
            End Get
            Set
                Me(Me.tableASIENTOS_CONTABLES.RENDICION_NUMEROColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property RENDICION_FECHA() As Date
            Get
                Try 
                    Return CType(Me(Me.tableASIENTOS_CONTABLES.RENDICION_FECHAColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'RENDICION_FECHA' de la tabla 'ASIENTOS_CONTABLES' es DBNu"& _ 
                            "ll.", e)
                End Try
            End Get
            Set
                Me(Me.tableASIENTOS_CONTABLES.RENDICION_FECHAColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property ORIGEN_FONDOS() As String
            Get
                Return CType(Me(Me.tableASIENTOS_CONTABLES.ORIGEN_FONDOSColumn),String)
            End Get
            Set
                Me(Me.tableASIENTOS_CONTABLES.ORIGEN_FONDOSColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property CUENTA_CORRIENTE() As String
            Get
                Return CType(Me(Me.tableASIENTOS_CONTABLES.CUENTA_CORRIENTEColumn),String)
            End Get
            Set
                Me(Me.tableASIENTOS_CONTABLES.CUENTA_CORRIENTEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property TIPO_MEDIO_PAGO() As String
            Get
                Return CType(Me(Me.tableASIENTOS_CONTABLES.TIPO_MEDIO_PAGOColumn),String)
            End Get
            Set
                Me(Me.tableASIENTOS_CONTABLES.TIPO_MEDIO_PAGOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property DOCUMENTO_PAGO() As String
            Get
                Return CType(Me(Me.tableASIENTOS_CONTABLES.DOCUMENTO_PAGOColumn),String)
            End Get
            Set
                Me(Me.tableASIENTOS_CONTABLES.DOCUMENTO_PAGOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property IMPORTE_PAGO() As Decimal
            Get
                Return CType(Me(Me.tableASIENTOS_CONTABLES.IMPORTE_PAGOColumn),Decimal)
            End Get
            Set
                Me(Me.tableASIENTOS_CONTABLES.IMPORTE_PAGOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property ITEM_FLUJO() As String
            Get
                Return CType(Me(Me.tableASIENTOS_CONTABLES.ITEM_FLUJOColumn),String)
            End Get
            Set
                Me(Me.tableASIENTOS_CONTABLES.ITEM_FLUJOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property ESTADO() As String
            Get
                Return CType(Me(Me.tableASIENTOS_CONTABLES.ESTADOColumn),String)
            End Get
            Set
                Me(Me.tableASIENTOS_CONTABLES.ESTADOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property INDICA_BLOQUEADO() As String
            Get
                Return CType(Me(Me.tableASIENTOS_CONTABLES.INDICA_BLOQUEADOColumn),String)
            End Get
            Set
                Me(Me.tableASIENTOS_CONTABLES.INDICA_BLOQUEADOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property USUARIO_BLOQUEO() As String
            Get
                Return CType(Me(Me.tableASIENTOS_CONTABLES.USUARIO_BLOQUEOColumn),String)
            End Get
            Set
                Me(Me.tableASIENTOS_CONTABLES.USUARIO_BLOQUEOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property FECHA_BLOQUEO() As Date
            Get
                Try 
                    Return CType(Me(Me.tableASIENTOS_CONTABLES.FECHA_BLOQUEOColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'FECHA_BLOQUEO' de la tabla 'ASIENTOS_CONTABLES' es DBNull"& _ 
                            ".", e)
                End Try
            End Get
            Set
                Me(Me.tableASIENTOS_CONTABLES.FECHA_BLOQUEOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property USUARIO_REGISTRO() As String
            Get
                Return CType(Me(Me.tableASIENTOS_CONTABLES.USUARIO_REGISTROColumn),String)
            End Get
            Set
                Me(Me.tableASIENTOS_CONTABLES.USUARIO_REGISTROColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property FECHA_REGISTRO() As Date
            Get
                Return CType(Me(Me.tableASIENTOS_CONTABLES.FECHA_REGISTROColumn),Date)
            End Get
            Set
                Me(Me.tableASIENTOS_CONTABLES.FECHA_REGISTROColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property USUARIO_MODIFICA() As String
            Get
                Return CType(Me(Me.tableASIENTOS_CONTABLES.USUARIO_MODIFICAColumn),String)
            End Get
            Set
                Me(Me.tableASIENTOS_CONTABLES.USUARIO_MODIFICAColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property FECHA_MODIFICA() As Date
            Get
                Try 
                    Return CType(Me(Me.tableASIENTOS_CONTABLES.FECHA_MODIFICAColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'FECHA_MODIFICA' de la tabla 'ASIENTOS_CONTABLES' es DBNul"& _ 
                            "l.", e)
                End Try
            End Get
            Set
                Me(Me.tableASIENTOS_CONTABLES.FECHA_MODIFICAColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsRENDICION_FECHANull() As Boolean
            Return Me.IsNull(Me.tableASIENTOS_CONTABLES.RENDICION_FECHAColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetRENDICION_FECHANull()
            Me(Me.tableASIENTOS_CONTABLES.RENDICION_FECHAColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsFECHA_BLOQUEONull() As Boolean
            Return Me.IsNull(Me.tableASIENTOS_CONTABLES.FECHA_BLOQUEOColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetFECHA_BLOQUEONull()
            Me(Me.tableASIENTOS_CONTABLES.FECHA_BLOQUEOColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsFECHA_MODIFICANull() As Boolean
            Return Me.IsNull(Me.tableASIENTOS_CONTABLES.FECHA_MODIFICAColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetFECHA_MODIFICANull()
            Me(Me.tableASIENTOS_CONTABLES.FECHA_MODIFICAColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Partial Public Class ASIENTOS_CONTABLES_DETRow
        Inherits Global.System.Data.DataRow
        
        Private tableASIENTOS_CONTABLES_DET As ASIENTOS_CONTABLES_DETDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableASIENTOS_CONTABLES_DET = CType(Me.Table,ASIENTOS_CONTABLES_DETDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property EMPRESA() As String
            Get
                Return CType(Me(Me.tableASIENTOS_CONTABLES_DET.EMPRESAColumn),String)
            End Get
            Set
                Me(Me.tableASIENTOS_CONTABLES_DET.EMPRESAColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property EJERCICIO() As String
            Get
                Return CType(Me(Me.tableASIENTOS_CONTABLES_DET.EJERCICIOColumn),String)
            End Get
            Set
                Me(Me.tableASIENTOS_CONTABLES_DET.EJERCICIOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property MES() As String
            Get
                Return CType(Me(Me.tableASIENTOS_CONTABLES_DET.MESColumn),String)
            End Get
            Set
                Me(Me.tableASIENTOS_CONTABLES_DET.MESColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property ASIENTO_TIPO() As String
            Get
                Return CType(Me(Me.tableASIENTOS_CONTABLES_DET.ASIENTO_TIPOColumn),String)
            End Get
            Set
                Me(Me.tableASIENTOS_CONTABLES_DET.ASIENTO_TIPOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property ASIENTO_NUMERO() As String
            Get
                Return CType(Me(Me.tableASIENTOS_CONTABLES_DET.ASIENTO_NUMEROColumn),String)
            End Get
            Set
                Me(Me.tableASIENTOS_CONTABLES_DET.ASIENTO_NUMEROColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property ASIENTO_LINEA() As String
            Get
                Return CType(Me(Me.tableASIENTOS_CONTABLES_DET.ASIENTO_LINEAColumn),String)
            End Get
            Set
                Me(Me.tableASIENTOS_CONTABLES_DET.ASIENTO_LINEAColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property ASIENTO_FECHA() As Date
            Get
                Return CType(Me(Me.tableASIENTOS_CONTABLES_DET.ASIENTO_FECHAColumn),Date)
            End Get
            Set
                Me(Me.tableASIENTOS_CONTABLES_DET.ASIENTO_FECHAColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property CUENTA_CONTABLE() As String
            Get
                Return CType(Me(Me.tableASIENTOS_CONTABLES_DET.CUENTA_CONTABLEColumn),String)
            End Get
            Set
                Me(Me.tableASIENTOS_CONTABLES_DET.CUENTA_CONTABLEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property TIPO_MONEDA() As String
            Get
                Return CType(Me(Me.tableASIENTOS_CONTABLES_DET.TIPO_MONEDAColumn),String)
            End Get
            Set
                Me(Me.tableASIENTOS_CONTABLES_DET.TIPO_MONEDAColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property TIPO_CAMBIO() As Decimal
            Get
                Return CType(Me(Me.tableASIENTOS_CONTABLES_DET.TIPO_CAMBIOColumn),Decimal)
            End Get
            Set
                Me(Me.tableASIENTOS_CONTABLES_DET.TIPO_CAMBIOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property GLOSA() As String
            Get
                Return CType(Me(Me.tableASIENTOS_CONTABLES_DET.GLOSAColumn),String)
            End Get
            Set
                Me(Me.tableASIENTOS_CONTABLES_DET.GLOSAColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property CUENTA_CORRIENTE() As String
            Get
                Return CType(Me(Me.tableASIENTOS_CONTABLES_DET.CUENTA_CORRIENTEColumn),String)
            End Get
            Set
                Me(Me.tableASIENTOS_CONTABLES_DET.CUENTA_CORRIENTEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property COMPROBANTE_TIPO() As String
            Get
                Return CType(Me(Me.tableASIENTOS_CONTABLES_DET.COMPROBANTE_TIPOColumn),String)
            End Get
            Set
                Me(Me.tableASIENTOS_CONTABLES_DET.COMPROBANTE_TIPOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property COMPROBANTE_SERIE() As String
            Get
                Return CType(Me(Me.tableASIENTOS_CONTABLES_DET.COMPROBANTE_SERIEColumn),String)
            End Get
            Set
                Me(Me.tableASIENTOS_CONTABLES_DET.COMPROBANTE_SERIEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property COMPROBANTE_NUMERO() As String
            Get
                Return CType(Me(Me.tableASIENTOS_CONTABLES_DET.COMPROBANTE_NUMEROColumn),String)
            End Get
            Set
                Me(Me.tableASIENTOS_CONTABLES_DET.COMPROBANTE_NUMEROColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property COMPROBANTE_FECHA() As Date
            Get
                Try 
                    Return CType(Me(Me.tableASIENTOS_CONTABLES_DET.COMPROBANTE_FECHAColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'COMPROBANTE_FECHA' de la tabla 'ASIENTOS_CONTABLES_DET' e"& _ 
                            "s DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableASIENTOS_CONTABLES_DET.COMPROBANTE_FECHAColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property COMPROBANTE_VENCIMIENTO() As Date
            Get
                Try 
                    Return CType(Me(Me.tableASIENTOS_CONTABLES_DET.COMPROBANTE_VENCIMIENTOColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'COMPROBANTE_VENCIMIENTO' de la tabla 'ASIENTOS_CONTABLES_"& _ 
                            "DET' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableASIENTOS_CONTABLES_DET.COMPROBANTE_VENCIMIENTOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property DEBE_ORIGEN() As Decimal
            Get
                Return CType(Me(Me.tableASIENTOS_CONTABLES_DET.DEBE_ORIGENColumn),Decimal)
            End Get
            Set
                Me(Me.tableASIENTOS_CONTABLES_DET.DEBE_ORIGENColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property HABER_ORIGEN() As Decimal
            Get
                Return CType(Me(Me.tableASIENTOS_CONTABLES_DET.HABER_ORIGENColumn),Decimal)
            End Get
            Set
                Me(Me.tableASIENTOS_CONTABLES_DET.HABER_ORIGENColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property DEBE_MN() As Decimal
            Get
                Return CType(Me(Me.tableASIENTOS_CONTABLES_DET.DEBE_MNColumn),Decimal)
            End Get
            Set
                Me(Me.tableASIENTOS_CONTABLES_DET.DEBE_MNColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property HABER_MN() As Decimal
            Get
                Return CType(Me(Me.tableASIENTOS_CONTABLES_DET.HABER_MNColumn),Decimal)
            End Get
            Set
                Me(Me.tableASIENTOS_CONTABLES_DET.HABER_MNColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property DEBE_ME() As Decimal
            Get
                Return CType(Me(Me.tableASIENTOS_CONTABLES_DET.DEBE_MEColumn),Decimal)
            End Get
            Set
                Me(Me.tableASIENTOS_CONTABLES_DET.DEBE_MEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property HABER_ME() As Decimal
            Get
                Return CType(Me(Me.tableASIENTOS_CONTABLES_DET.HABER_MEColumn),Decimal)
            End Get
            Set
                Me(Me.tableASIENTOS_CONTABLES_DET.HABER_MEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property ITEM_GASTO() As String
            Get
                Return CType(Me(Me.tableASIENTOS_CONTABLES_DET.ITEM_GASTOColumn),String)
            End Get
            Set
                Me(Me.tableASIENTOS_CONTABLES_DET.ITEM_GASTOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property ITEM_FLUJO() As String
            Get
                Return CType(Me(Me.tableASIENTOS_CONTABLES_DET.ITEM_FLUJOColumn),String)
            End Get
            Set
                Me(Me.tableASIENTOS_CONTABLES_DET.ITEM_FLUJOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property GASTO_FUNCION() As String
            Get
                Return CType(Me(Me.tableASIENTOS_CONTABLES_DET.GASTO_FUNCIONColumn),String)
            End Get
            Set
                Me(Me.tableASIENTOS_CONTABLES_DET.GASTO_FUNCIONColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property CENTRO_COSTO() As String
            Get
                Return CType(Me(Me.tableASIENTOS_CONTABLES_DET.CENTRO_COSTOColumn),String)
            End Get
            Set
                Me(Me.tableASIENTOS_CONTABLES_DET.CENTRO_COSTOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property AREA() As String
            Get
                Return CType(Me(Me.tableASIENTOS_CONTABLES_DET.AREAColumn),String)
            End Get
            Set
                Me(Me.tableASIENTOS_CONTABLES_DET.AREAColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property LINEA_NEGOCIO() As String
            Get
                Return CType(Me(Me.tableASIENTOS_CONTABLES_DET.LINEA_NEGOCIOColumn),String)
            End Get
            Set
                Me(Me.tableASIENTOS_CONTABLES_DET.LINEA_NEGOCIOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property PROYECTO() As String
            Get
                Return CType(Me(Me.tableASIENTOS_CONTABLES_DET.PROYECTOColumn),String)
            End Get
            Set
                Me(Me.tableASIENTOS_CONTABLES_DET.PROYECTOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property ZONA() As String
            Get
                Return CType(Me(Me.tableASIENTOS_CONTABLES_DET.ZONAColumn),String)
            End Get
            Set
                Me(Me.tableASIENTOS_CONTABLES_DET.ZONAColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property VENDEDOR() As String
            Get
                Return CType(Me(Me.tableASIENTOS_CONTABLES_DET.VENDEDORColumn),String)
            End Get
            Set
                Me(Me.tableASIENTOS_CONTABLES_DET.VENDEDORColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property COMPRADOR() As String
            Get
                Return CType(Me(Me.tableASIENTOS_CONTABLES_DET.COMPRADORColumn),String)
            End Get
            Set
                Me(Me.tableASIENTOS_CONTABLES_DET.COMPRADORColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property TRANSPORTISTA() As String
            Get
                Return CType(Me(Me.tableASIENTOS_CONTABLES_DET.TRANSPORTISTAColumn),String)
            End Get
            Set
                Me(Me.tableASIENTOS_CONTABLES_DET.TRANSPORTISTAColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property ANALISIS_01() As String
            Get
                Return CType(Me(Me.tableASIENTOS_CONTABLES_DET.ANALISIS_01Column),String)
            End Get
            Set
                Me(Me.tableASIENTOS_CONTABLES_DET.ANALISIS_01Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property ANALISIS_02() As String
            Get
                Return CType(Me(Me.tableASIENTOS_CONTABLES_DET.ANALISIS_02Column),String)
            End Get
            Set
                Me(Me.tableASIENTOS_CONTABLES_DET.ANALISIS_02Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property ANALISIS_03() As String
            Get
                Return CType(Me(Me.tableASIENTOS_CONTABLES_DET.ANALISIS_03Column),String)
            End Get
            Set
                Me(Me.tableASIENTOS_CONTABLES_DET.ANALISIS_03Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property ANALISIS_04() As String
            Get
                Return CType(Me(Me.tableASIENTOS_CONTABLES_DET.ANALISIS_04Column),String)
            End Get
            Set
                Me(Me.tableASIENTOS_CONTABLES_DET.ANALISIS_04Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property ANALISIS_05() As String
            Get
                Return CType(Me(Me.tableASIENTOS_CONTABLES_DET.ANALISIS_05Column),String)
            End Get
            Set
                Me(Me.tableASIENTOS_CONTABLES_DET.ANALISIS_05Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property ANALISIS_06() As String
            Get
                Return CType(Me(Me.tableASIENTOS_CONTABLES_DET.ANALISIS_06Column),String)
            End Get
            Set
                Me(Me.tableASIENTOS_CONTABLES_DET.ANALISIS_06Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property ANALISIS_07() As String
            Get
                Return CType(Me(Me.tableASIENTOS_CONTABLES_DET.ANALISIS_07Column),String)
            End Get
            Set
                Me(Me.tableASIENTOS_CONTABLES_DET.ANALISIS_07Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property ANALISIS_08() As String
            Get
                Return CType(Me(Me.tableASIENTOS_CONTABLES_DET.ANALISIS_08Column),String)
            End Get
            Set
                Me(Me.tableASIENTOS_CONTABLES_DET.ANALISIS_08Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property ANALISIS_09() As String
            Get
                Return CType(Me(Me.tableASIENTOS_CONTABLES_DET.ANALISIS_09Column),String)
            End Get
            Set
                Me(Me.tableASIENTOS_CONTABLES_DET.ANALISIS_09Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property ANALISIS_10() As String
            Get
                Return CType(Me(Me.tableASIENTOS_CONTABLES_DET.ANALISIS_10Column),String)
            End Get
            Set
                Me(Me.tableASIENTOS_CONTABLES_DET.ANALISIS_10Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property CUENTA_BANCARIA() As String
            Get
                Return CType(Me(Me.tableASIENTOS_CONTABLES_DET.CUENTA_BANCARIAColumn),String)
            End Get
            Set
                Me(Me.tableASIENTOS_CONTABLES_DET.CUENTA_BANCARIAColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property INDICA_CONCILIADO() As String
            Get
                Return CType(Me(Me.tableASIENTOS_CONTABLES_DET.INDICA_CONCILIADOColumn),String)
            End Get
            Set
                Me(Me.tableASIENTOS_CONTABLES_DET.INDICA_CONCILIADOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property EJERCICIO_CONCILIADO() As String
            Get
                Return CType(Me(Me.tableASIENTOS_CONTABLES_DET.EJERCICIO_CONCILIADOColumn),String)
            End Get
            Set
                Me(Me.tableASIENTOS_CONTABLES_DET.EJERCICIO_CONCILIADOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property MES_CONCILIADO() As String
            Get
                Return CType(Me(Me.tableASIENTOS_CONTABLES_DET.MES_CONCILIADOColumn),String)
            End Get
            Set
                Me(Me.tableASIENTOS_CONTABLES_DET.MES_CONCILIADOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property TIPO_MEDIO_PAGO() As String
            Get
                Return CType(Me(Me.tableASIENTOS_CONTABLES_DET.TIPO_MEDIO_PAGOColumn),String)
            End Get
            Set
                Me(Me.tableASIENTOS_CONTABLES_DET.TIPO_MEDIO_PAGOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property DOCUMENTO_PAGO() As String
            Get
                Return CType(Me(Me.tableASIENTOS_CONTABLES_DET.DOCUMENTO_PAGOColumn),String)
            End Get
            Set
                Me(Me.tableASIENTOS_CONTABLES_DET.DOCUMENTO_PAGOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property FECHA_PAGO() As Date
            Get
                Try 
                    Return CType(Me(Me.tableASIENTOS_CONTABLES_DET.FECHA_PAGOColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'FECHA_PAGO' de la tabla 'ASIENTOS_CONTABLES_DET' es DBNul"& _ 
                            "l.", e)
                End Try
            End Get
            Set
                Me(Me.tableASIENTOS_CONTABLES_DET.FECHA_PAGOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property INDICA_EN_CARTERA() As String
            Get
                Return CType(Me(Me.tableASIENTOS_CONTABLES_DET.INDICA_EN_CARTERAColumn),String)
            End Get
            Set
                Me(Me.tableASIENTOS_CONTABLES_DET.INDICA_EN_CARTERAColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property ORIGEN() As String
            Get
                Return CType(Me(Me.tableASIENTOS_CONTABLES_DET.ORIGENColumn),String)
            End Get
            Set
                Me(Me.tableASIENTOS_CONTABLES_DET.ORIGENColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property ESTADO() As String
            Get
                Return CType(Me(Me.tableASIENTOS_CONTABLES_DET.ESTADOColumn),String)
            End Get
            Set
                Me(Me.tableASIENTOS_CONTABLES_DET.ESTADOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property USUARIO_REGISTRO() As String
            Get
                Return CType(Me(Me.tableASIENTOS_CONTABLES_DET.USUARIO_REGISTROColumn),String)
            End Get
            Set
                Me(Me.tableASIENTOS_CONTABLES_DET.USUARIO_REGISTROColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property FECHA_REGISTRO() As Date
            Get
                Return CType(Me(Me.tableASIENTOS_CONTABLES_DET.FECHA_REGISTROColumn),Date)
            End Get
            Set
                Me(Me.tableASIENTOS_CONTABLES_DET.FECHA_REGISTROColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property USUARIO_MODIFICA() As String
            Get
                Return CType(Me(Me.tableASIENTOS_CONTABLES_DET.USUARIO_MODIFICAColumn),String)
            End Get
            Set
                Me(Me.tableASIENTOS_CONTABLES_DET.USUARIO_MODIFICAColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property FECHA_MODIFICA() As Date
            Get
                Try 
                    Return CType(Me(Me.tableASIENTOS_CONTABLES_DET.FECHA_MODIFICAColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'FECHA_MODIFICA' de la tabla 'ASIENTOS_CONTABLES_DET' es D"& _ 
                            "BNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableASIENTOS_CONTABLES_DET.FECHA_MODIFICAColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsCOMPROBANTE_FECHANull() As Boolean
            Return Me.IsNull(Me.tableASIENTOS_CONTABLES_DET.COMPROBANTE_FECHAColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetCOMPROBANTE_FECHANull()
            Me(Me.tableASIENTOS_CONTABLES_DET.COMPROBANTE_FECHAColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsCOMPROBANTE_VENCIMIENTONull() As Boolean
            Return Me.IsNull(Me.tableASIENTOS_CONTABLES_DET.COMPROBANTE_VENCIMIENTOColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetCOMPROBANTE_VENCIMIENTONull()
            Me(Me.tableASIENTOS_CONTABLES_DET.COMPROBANTE_VENCIMIENTOColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsFECHA_PAGONull() As Boolean
            Return Me.IsNull(Me.tableASIENTOS_CONTABLES_DET.FECHA_PAGOColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetFECHA_PAGONull()
            Me(Me.tableASIENTOS_CONTABLES_DET.FECHA_PAGOColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsFECHA_MODIFICANull() As Boolean
            Return Me.IsNull(Me.tableASIENTOS_CONTABLES_DET.FECHA_MODIFICAColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetFECHA_MODIFICANull()
            Me(Me.tableASIENTOS_CONTABLES_DET.FECHA_MODIFICAColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Public Class ASIENTOS_CONTABLESRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As ASIENTOS_CONTABLESRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New(ByVal row As ASIENTOS_CONTABLESRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Row() As ASIENTOS_CONTABLESRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Public Class ASIENTOS_CONTABLES_DETRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As ASIENTOS_CONTABLES_DETRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New(ByVal row As ASIENTOS_CONTABLES_DETRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Row() As ASIENTOS_CONTABLES_DETRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
End Class
