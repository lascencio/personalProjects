'------------------------------------------------------------------------------
' <auto-generated>
'     Este código fue generado por una herramienta.
'     Versión del motor en tiempo de ejecución:2.0.50727.8009
'
'     Los cambios en este archivo podrían causar un comportamiento incorrecto y se perderán si
'     se vuelve a generar el código.
' </auto-generated>
'------------------------------------------------------------------------------

Option Strict Off
Option Explicit On



'''<summary>
'''Represents a strongly typed in-memory cache of data.
'''</summary>
<Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0"),  _
 Global.System.Serializable(),  _
 Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
 Global.System.ComponentModel.ToolboxItem(true),  _
 Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema"),  _
 Global.System.Xml.Serialization.XmlRootAttribute("dsProductos"),  _
 Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")>  _
Partial Public Class dsProductos
    Inherits Global.System.Data.DataSet
    
    Private tablePRODUCTOS As PRODUCTOSDataTable
    
    Private tableCOMPUESTOS As COMPUESTOSDataTable
    
    Private tablePRODUCTOS_LISTA As PRODUCTOS_LISTADataTable
    
    Private _schemaSerializationMode As Global.System.Data.SchemaSerializationMode = Global.System.Data.SchemaSerializationMode.IncludeSchema
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Public Sub New()
        MyBase.New
        Me.BeginInit
        Me.InitClass
        Dim schemaChangedHandler As Global.System.ComponentModel.CollectionChangeEventHandler = AddressOf Me.SchemaChanged
        AddHandler MyBase.Tables.CollectionChanged, schemaChangedHandler
        AddHandler MyBase.Relations.CollectionChanged, schemaChangedHandler
        Me.EndInit
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
        MyBase.New(info, context, false)
        If (Me.IsBinarySerialized(info, context) = true) Then
            Me.InitVars(false)
            Dim schemaChangedHandler1 As Global.System.ComponentModel.CollectionChangeEventHandler = AddressOf Me.SchemaChanged
            AddHandler Me.Tables.CollectionChanged, schemaChangedHandler1
            AddHandler Me.Relations.CollectionChanged, schemaChangedHandler1
            Return
        End If
        Dim strSchema As String = CType(info.GetValue("XmlSchema", GetType(String)),String)
        If (Me.DetermineSchemaSerializationMode(info, context) = Global.System.Data.SchemaSerializationMode.IncludeSchema) Then
            Dim ds As Global.System.Data.DataSet = New Global.System.Data.DataSet
            ds.ReadXmlSchema(New Global.System.Xml.XmlTextReader(New Global.System.IO.StringReader(strSchema)))
            If (Not (ds.Tables("PRODUCTOS")) Is Nothing) Then
                MyBase.Tables.Add(New PRODUCTOSDataTable(ds.Tables("PRODUCTOS")))
            End If
            If (Not (ds.Tables("COMPUESTOS")) Is Nothing) Then
                MyBase.Tables.Add(New COMPUESTOSDataTable(ds.Tables("COMPUESTOS")))
            End If
            If (Not (ds.Tables("PRODUCTOS_LISTA")) Is Nothing) Then
                MyBase.Tables.Add(New PRODUCTOS_LISTADataTable(ds.Tables("PRODUCTOS_LISTA")))
            End If
            Me.DataSetName = ds.DataSetName
            Me.Prefix = ds.Prefix
            Me.Namespace = ds.Namespace
            Me.Locale = ds.Locale
            Me.CaseSensitive = ds.CaseSensitive
            Me.EnforceConstraints = ds.EnforceConstraints
            Me.Merge(ds, false, Global.System.Data.MissingSchemaAction.Add)
            Me.InitVars
        Else
            Me.ReadXmlSchema(New Global.System.Xml.XmlTextReader(New Global.System.IO.StringReader(strSchema)))
        End If
        Me.GetSerializationData(info, context)
        Dim schemaChangedHandler As Global.System.ComponentModel.CollectionChangeEventHandler = AddressOf Me.SchemaChanged
        AddHandler MyBase.Tables.CollectionChanged, schemaChangedHandler
        AddHandler Me.Relations.CollectionChanged, schemaChangedHandler
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property PRODUCTOS() As PRODUCTOSDataTable
        Get
            Return Me.tablePRODUCTOS
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property COMPUESTOS() As COMPUESTOSDataTable
        Get
            Return Me.tableCOMPUESTOS
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property PRODUCTOS_LISTA() As PRODUCTOS_LISTADataTable
        Get
            Return Me.tablePRODUCTOS_LISTA
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.ComponentModel.BrowsableAttribute(true),  _
     Global.System.ComponentModel.DesignerSerializationVisibilityAttribute(Global.System.ComponentModel.DesignerSerializationVisibility.Visible)>  _
    Public Overrides Property SchemaSerializationMode() As Global.System.Data.SchemaSerializationMode
        Get
            Return Me._schemaSerializationMode
        End Get
        Set
            Me._schemaSerializationMode = value
        End Set
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.ComponentModel.DesignerSerializationVisibilityAttribute(Global.System.ComponentModel.DesignerSerializationVisibility.Hidden)>  _
    Public Shadows ReadOnly Property Tables() As Global.System.Data.DataTableCollection
        Get
            Return MyBase.Tables
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.ComponentModel.DesignerSerializationVisibilityAttribute(Global.System.ComponentModel.DesignerSerializationVisibility.Hidden)>  _
    Public Shadows ReadOnly Property Relations() As Global.System.Data.DataRelationCollection
        Get
            Return MyBase.Relations
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Protected Overrides Sub InitializeDerivedDataSet()
        Me.BeginInit
        Me.InitClass
        Me.EndInit
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Public Overrides Function Clone() As Global.System.Data.DataSet
        Dim cln As dsProductos = CType(MyBase.Clone,dsProductos)
        cln.InitVars
        cln.SchemaSerializationMode = Me.SchemaSerializationMode
        Return cln
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Protected Overrides Function ShouldSerializeTables() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Protected Overrides Function ShouldSerializeRelations() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Protected Overrides Sub ReadXmlSerializable(ByVal reader As Global.System.Xml.XmlReader)
        If (Me.DetermineSchemaSerializationMode(reader) = Global.System.Data.SchemaSerializationMode.IncludeSchema) Then
            Me.Reset
            Dim ds As Global.System.Data.DataSet = New Global.System.Data.DataSet
            ds.ReadXml(reader)
            If (Not (ds.Tables("PRODUCTOS")) Is Nothing) Then
                MyBase.Tables.Add(New PRODUCTOSDataTable(ds.Tables("PRODUCTOS")))
            End If
            If (Not (ds.Tables("COMPUESTOS")) Is Nothing) Then
                MyBase.Tables.Add(New COMPUESTOSDataTable(ds.Tables("COMPUESTOS")))
            End If
            If (Not (ds.Tables("PRODUCTOS_LISTA")) Is Nothing) Then
                MyBase.Tables.Add(New PRODUCTOS_LISTADataTable(ds.Tables("PRODUCTOS_LISTA")))
            End If
            Me.DataSetName = ds.DataSetName
            Me.Prefix = ds.Prefix
            Me.Namespace = ds.Namespace
            Me.Locale = ds.Locale
            Me.CaseSensitive = ds.CaseSensitive
            Me.EnforceConstraints = ds.EnforceConstraints
            Me.Merge(ds, false, Global.System.Data.MissingSchemaAction.Add)
            Me.InitVars
        Else
            Me.ReadXml(reader)
            Me.InitVars
        End If
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Protected Overrides Function GetSchemaSerializable() As Global.System.Xml.Schema.XmlSchema
        Dim stream As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
        Me.WriteXmlSchema(New Global.System.Xml.XmlTextWriter(stream, Nothing))
        stream.Position = 0
        Return Global.System.Xml.Schema.XmlSchema.Read(New Global.System.Xml.XmlTextReader(stream), Nothing)
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Friend Overloads Sub InitVars()
        Me.InitVars(true)
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Friend Overloads Sub InitVars(ByVal initTable As Boolean)
        Me.tablePRODUCTOS = CType(MyBase.Tables("PRODUCTOS"),PRODUCTOSDataTable)
        If (initTable = true) Then
            If (Not (Me.tablePRODUCTOS) Is Nothing) Then
                Me.tablePRODUCTOS.InitVars
            End If
        End If
        Me.tableCOMPUESTOS = CType(MyBase.Tables("COMPUESTOS"),COMPUESTOSDataTable)
        If (initTable = true) Then
            If (Not (Me.tableCOMPUESTOS) Is Nothing) Then
                Me.tableCOMPUESTOS.InitVars
            End If
        End If
        Me.tablePRODUCTOS_LISTA = CType(MyBase.Tables("PRODUCTOS_LISTA"),PRODUCTOS_LISTADataTable)
        If (initTable = true) Then
            If (Not (Me.tablePRODUCTOS_LISTA) Is Nothing) Then
                Me.tablePRODUCTOS_LISTA.InitVars
            End If
        End If
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Private Sub InitClass()
        Me.DataSetName = "dsProductos"
        Me.Prefix = ""
        Me.Namespace = "http://tempuri.org/dsProductos.xsd"
        Me.EnforceConstraints = true
        Me.SchemaSerializationMode = Global.System.Data.SchemaSerializationMode.IncludeSchema
        Me.tablePRODUCTOS = New PRODUCTOSDataTable
        MyBase.Tables.Add(Me.tablePRODUCTOS)
        Me.tableCOMPUESTOS = New COMPUESTOSDataTable
        MyBase.Tables.Add(Me.tableCOMPUESTOS)
        Me.tablePRODUCTOS_LISTA = New PRODUCTOS_LISTADataTable
        MyBase.Tables.Add(Me.tablePRODUCTOS_LISTA)
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Private Function ShouldSerializePRODUCTOS() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Private Function ShouldSerializeCOMPUESTOS() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Private Function ShouldSerializePRODUCTOS_LISTA() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Private Sub SchemaChanged(ByVal sender As Object, ByVal e As Global.System.ComponentModel.CollectionChangeEventArgs)
        If (e.Action = Global.System.ComponentModel.CollectionChangeAction.Remove) Then
            Me.InitVars
        End If
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Public Shared Function GetTypedDataSetSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
        Dim ds As dsProductos = New dsProductos
        Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType
        Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence
        Dim any As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
        any.Namespace = ds.Namespace
        sequence.Items.Add(any)
        type.Particle = sequence
        Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
        If xs.Contains(dsSchema.TargetNamespace) Then
            Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
            Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
            Try 
                Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                dsSchema.Write(s1)
                Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                Do While schemas.MoveNext
                    schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                    s2.SetLength(0)
                    schema.Write(s2)
                    If (s1.Length = s2.Length) Then
                        s1.Position = 0
                        s2.Position = 0
                        
                        Do While ((s1.Position <> s1.Length)  _
                                    AndAlso (s1.ReadByte = s2.ReadByte))
                            
                            
                        Loop
                        If (s1.Position = s1.Length) Then
                            Return type
                        End If
                    End If
                    
                Loop
            Finally
                If (Not (s1) Is Nothing) Then
                    s1.Close
                End If
                If (Not (s2) Is Nothing) Then
                    s2.Close
                End If
            End Try
        End If
        xs.Add(dsSchema)
        Return type
    End Function
    
    Public Delegate Sub PRODUCTOSRowChangeEventHandler(ByVal sender As Object, ByVal e As PRODUCTOSRowChangeEvent)
    
    Public Delegate Sub COMPUESTOSRowChangeEventHandler(ByVal sender As Object, ByVal e As COMPUESTOSRowChangeEvent)
    
    Public Delegate Sub PRODUCTOS_LISTARowChangeEventHandler(ByVal sender As Object, ByVal e As PRODUCTOS_LISTARowChangeEvent)
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0"),  _
     Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class PRODUCTOSDataTable
        Inherits Global.System.Data.TypedTableBase(Of PRODUCTOSRow)
        
        Private columnEMPRESA As Global.System.Data.DataColumn
        
        Private columnPRODUCTO As Global.System.Data.DataColumn
        
        Private columnTIPO_EXISTENCIA As Global.System.Data.DataColumn
        
        Private columnDESCRIPCION As Global.System.Data.DataColumn
        
        Private columnDESCRIPCION_AMPLIADA As Global.System.Data.DataColumn
        
        Private columnPRODUCTO_FAMILIA As Global.System.Data.DataColumn
        
        Private columnPRODUCTO_SUB_FAMILIA As Global.System.Data.DataColumn
        
        Private columnPRODUCTO_TIPO As Global.System.Data.DataColumn
        
        Private columnPRODUCTO_SUB_TIPO As Global.System.Data.DataColumn
        
        Private columnUNIDAD_MEDIDA As Global.System.Data.DataColumn
        
        Private columnUNIDAD_COMPRA As Global.System.Data.DataColumn
        
        Private columnUNIDAD_VENTA As Global.System.Data.DataColumn
        
        Private columnDECIMALES As Global.System.Data.DataColumn
        
        Private columnFACTOR_COMPRA As Global.System.Data.DataColumn
        
        Private columnFACTOR_VENTA As Global.System.Data.DataColumn
        
        Private columnVOLUMEN_COMPRA As Global.System.Data.DataColumn
        
        Private columnVOLUMEN_VENTA As Global.System.Data.DataColumn
        
        Private columnPESO_COMPRA As Global.System.Data.DataColumn
        
        Private columnPESO_VENTA As Global.System.Data.DataColumn
        
        Private columnSTOCK_ACTUAL As Global.System.Data.DataColumn
        
        Private columnSTOCK_COMPROMETIDO As Global.System.Data.DataColumn
        
        Private columnSTOCK_TRANSITO As Global.System.Data.DataColumn
        
        Private columnALMACEN As Global.System.Data.DataColumn
        
        Private columnUBICACION As Global.System.Data.DataColumn
        
        Private columnPRECIO_COMPRA_MN As Global.System.Data.DataColumn
        
        Private columnPRECIO_VENTA_MN As Global.System.Data.DataColumn
        
        Private columnPRECIO_COMPRA_ME As Global.System.Data.DataColumn
        
        Private columnPRECIO_VENTA_ME As Global.System.Data.DataColumn
        
        Private columnPROCEDENCIA As Global.System.Data.DataColumn
        
        Private columnCUENTA_COMPRA_MN As Global.System.Data.DataColumn
        
        Private columnCUENTA_VENTA_MN As Global.System.Data.DataColumn
        
        Private columnCUENTA_COMPRA_ME As Global.System.Data.DataColumn
        
        Private columnCUENTA_VENTA_ME As Global.System.Data.DataColumn
        
        Private columnCUENTA_COSTO_MN As Global.System.Data.DataColumn
        
        Private columnCUENTA_COSTO_ME As Global.System.Data.DataColumn
        
        Private columnTIPO_MONEDA As Global.System.Data.DataColumn
        
        Private columnPRIORIDAD As Global.System.Data.DataColumn
        
        Private columnCODIGO_COMPRA As Global.System.Data.DataColumn
        
        Private columnDESCRIPCION_COMPRA As Global.System.Data.DataColumn
        
        Private columnTIEMPO_ENTREGA As Global.System.Data.DataColumn
        
        Private columnTIEMPO_PROCESO As Global.System.Data.DataColumn
        
        Private columnSTOCK_SEGURIDAD As Global.System.Data.DataColumn
        
        Private columnCADUCIDAD As Global.System.Data.DataColumn
        
        Private columnESTADO As Global.System.Data.DataColumn
        
        Private columnINDICA_SERIE As Global.System.Data.DataColumn
        
        Private columnINDICA_LOTE As Global.System.Data.DataColumn
        
        Private columnINDICA_VENCIMIENTO As Global.System.Data.DataColumn
        
        Private columnINDICA_VALIDA_STOCK As Global.System.Data.DataColumn
        
        Private columnINDICA_AFECTO As Global.System.Data.DataColumn
        
        Private columnINDICA_COMPUESTO As Global.System.Data.DataColumn
        
        Private columnINDICA_PROMOCIONAL As Global.System.Data.DataColumn
        
        Private columnINDICA_SIN_PLANIFICACION As Global.System.Data.DataColumn
        
        Private columnPORCENTAJE_GANANCIA_COSTO As Global.System.Data.DataColumn
        
        Private columnPORCENTAJE_GANANCIA_PRECIO As Global.System.Data.DataColumn
        
        Private columnPUNTOS_BONIFICACION As Global.System.Data.DataColumn
        
        Private columnLARGO_CMS As Global.System.Data.DataColumn
        
        Private columnANCHO_CMS As Global.System.Data.DataColumn
        
        Private columnPROFUNDIDAD_CMS As Global.System.Data.DataColumn
        
        Private columnSTOCK_MINIMO As Global.System.Data.DataColumn
        
        Private columnSTOCK_MAXIMO As Global.System.Data.DataColumn
        
        Private columnPARTIDA_ARANCELARIA As Global.System.Data.DataColumn
        
        Private columnCOSTO_FOB As Global.System.Data.DataColumn
        
        Private columnFLETE As Global.System.Data.DataColumn
        
        Private columnSEGUROS As Global.System.Data.DataColumn
        
        Private columnAGENTE_ADUANAS As Global.System.Data.DataColumn
        
        Private columnDERECHO_ADVALOREM As Global.System.Data.DataColumn
        
        Private columnGASTOS_DESPACHO As Global.System.Data.DataColumn
        
        Private columnCOSTO_ESTANDAR As Global.System.Data.DataColumn
        
        Private columnCODIGO_ANTIGUO As Global.System.Data.DataColumn
        
        Private columnCODIGO_VENDEDOR As Global.System.Data.DataColumn
        
        Private columnCODIGO_COMPRADOR As Global.System.Data.DataColumn
        
        Private columnULTIMA_COMPRA As Global.System.Data.DataColumn
        
        Private columnULTIMA_VENTA As Global.System.Data.DataColumn
        
        Private columnCOMENTARIO As Global.System.Data.DataColumn
        
        Private columnIMAGEN As Global.System.Data.DataColumn
        
        Private columnUSUARIO_REGISTRO As Global.System.Data.DataColumn
        
        Private columnFECHA_REGISTRO As Global.System.Data.DataColumn
        
        Private columnUSUARIO_MODIFICA As Global.System.Data.DataColumn
        
        Private columnFECHA_MODIFICA As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "PRODUCTOS"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property EMPRESAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnEMPRESA
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property PRODUCTOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPRODUCTO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property TIPO_EXISTENCIAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTIPO_EXISTENCIA
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property DESCRIPCIONColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDESCRIPCION
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property DESCRIPCION_AMPLIADAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDESCRIPCION_AMPLIADA
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property PRODUCTO_FAMILIAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPRODUCTO_FAMILIA
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property PRODUCTO_SUB_FAMILIAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPRODUCTO_SUB_FAMILIA
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property PRODUCTO_TIPOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPRODUCTO_TIPO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property PRODUCTO_SUB_TIPOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPRODUCTO_SUB_TIPO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property UNIDAD_MEDIDAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnUNIDAD_MEDIDA
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property UNIDAD_COMPRAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnUNIDAD_COMPRA
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property UNIDAD_VENTAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnUNIDAD_VENTA
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property DECIMALESColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDECIMALES
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property FACTOR_COMPRAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnFACTOR_COMPRA
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property FACTOR_VENTAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnFACTOR_VENTA
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property VOLUMEN_COMPRAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnVOLUMEN_COMPRA
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property VOLUMEN_VENTAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnVOLUMEN_VENTA
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property PESO_COMPRAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPESO_COMPRA
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property PESO_VENTAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPESO_VENTA
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property STOCK_ACTUALColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSTOCK_ACTUAL
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property STOCK_COMPROMETIDOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSTOCK_COMPROMETIDO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property STOCK_TRANSITOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSTOCK_TRANSITO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property ALMACENColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnALMACEN
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property UBICACIONColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnUBICACION
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property PRECIO_COMPRA_MNColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPRECIO_COMPRA_MN
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property PRECIO_VENTA_MNColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPRECIO_VENTA_MN
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property PRECIO_COMPRA_MEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPRECIO_COMPRA_ME
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property PRECIO_VENTA_MEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPRECIO_VENTA_ME
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property PROCEDENCIAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPROCEDENCIA
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property CUENTA_COMPRA_MNColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCUENTA_COMPRA_MN
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property CUENTA_VENTA_MNColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCUENTA_VENTA_MN
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property CUENTA_COMPRA_MEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCUENTA_COMPRA_ME
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property CUENTA_VENTA_MEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCUENTA_VENTA_ME
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property CUENTA_COSTO_MNColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCUENTA_COSTO_MN
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property CUENTA_COSTO_MEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCUENTA_COSTO_ME
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property TIPO_MONEDAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTIPO_MONEDA
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property PRIORIDADColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPRIORIDAD
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property CODIGO_COMPRAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCODIGO_COMPRA
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property DESCRIPCION_COMPRAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDESCRIPCION_COMPRA
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property TIEMPO_ENTREGAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTIEMPO_ENTREGA
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property TIEMPO_PROCESOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTIEMPO_PROCESO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property STOCK_SEGURIDADColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSTOCK_SEGURIDAD
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property CADUCIDADColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCADUCIDAD
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property ESTADOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnESTADO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property INDICA_SERIEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnINDICA_SERIE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property INDICA_LOTEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnINDICA_LOTE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property INDICA_VENCIMIENTOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnINDICA_VENCIMIENTO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property INDICA_VALIDA_STOCKColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnINDICA_VALIDA_STOCK
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property INDICA_AFECTOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnINDICA_AFECTO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property INDICA_COMPUESTOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnINDICA_COMPUESTO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property INDICA_PROMOCIONALColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnINDICA_PROMOCIONAL
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property INDICA_SIN_PLANIFICACIONColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnINDICA_SIN_PLANIFICACION
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property PORCENTAJE_GANANCIA_COSTOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPORCENTAJE_GANANCIA_COSTO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property PORCENTAJE_GANANCIA_PRECIOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPORCENTAJE_GANANCIA_PRECIO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property PUNTOS_BONIFICACIONColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPUNTOS_BONIFICACION
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property LARGO_CMSColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnLARGO_CMS
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property ANCHO_CMSColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnANCHO_CMS
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property PROFUNDIDAD_CMSColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPROFUNDIDAD_CMS
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property STOCK_MINIMOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSTOCK_MINIMO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property STOCK_MAXIMOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSTOCK_MAXIMO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property PARTIDA_ARANCELARIAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPARTIDA_ARANCELARIA
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property COSTO_FOBColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCOSTO_FOB
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property FLETEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnFLETE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property SEGUROSColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSEGUROS
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property AGENTE_ADUANASColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnAGENTE_ADUANAS
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property DERECHO_ADVALOREMColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDERECHO_ADVALOREM
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property GASTOS_DESPACHOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnGASTOS_DESPACHO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property COSTO_ESTANDARColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCOSTO_ESTANDAR
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property CODIGO_ANTIGUOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCODIGO_ANTIGUO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property CODIGO_VENDEDORColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCODIGO_VENDEDOR
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property CODIGO_COMPRADORColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCODIGO_COMPRADOR
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property ULTIMA_COMPRAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnULTIMA_COMPRA
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property ULTIMA_VENTAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnULTIMA_VENTA
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property COMENTARIOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCOMENTARIO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property IMAGENColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnIMAGEN
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property USUARIO_REGISTROColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnUSUARIO_REGISTRO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property FECHA_REGISTROColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnFECHA_REGISTRO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property USUARIO_MODIFICAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnUSUARIO_MODIFICA
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property FECHA_MODIFICAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnFECHA_MODIFICA
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As PRODUCTOSRow
            Get
                Return CType(Me.Rows(index),PRODUCTOSRow)
            End Get
        End Property
        
        Public Event PRODUCTOSRowChanging As PRODUCTOSRowChangeEventHandler
        
        Public Event PRODUCTOSRowChanged As PRODUCTOSRowChangeEventHandler
        
        Public Event PRODUCTOSRowDeleting As PRODUCTOSRowChangeEventHandler
        
        Public Event PRODUCTOSRowDeleted As PRODUCTOSRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Sub AddPRODUCTOSRow(ByVal row As PRODUCTOSRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Function AddPRODUCTOSRow( _
                    ByVal EMPRESA As String,  _
                    ByVal PRODUCTO As String,  _
                    ByVal TIPO_EXISTENCIA As String,  _
                    ByVal DESCRIPCION As String,  _
                    ByVal DESCRIPCION_AMPLIADA As String,  _
                    ByVal PRODUCTO_FAMILIA As String,  _
                    ByVal PRODUCTO_SUB_FAMILIA As String,  _
                    ByVal PRODUCTO_TIPO As String,  _
                    ByVal PRODUCTO_SUB_TIPO As String,  _
                    ByVal UNIDAD_MEDIDA As String,  _
                    ByVal UNIDAD_COMPRA As String,  _
                    ByVal UNIDAD_VENTA As String,  _
                    ByVal DECIMALES As Byte,  _
                    ByVal FACTOR_COMPRA As Decimal,  _
                    ByVal FACTOR_VENTA As Decimal,  _
                    ByVal VOLUMEN_COMPRA As Decimal,  _
                    ByVal VOLUMEN_VENTA As Decimal,  _
                    ByVal PESO_COMPRA As Decimal,  _
                    ByVal PESO_VENTA As Decimal,  _
                    ByVal STOCK_ACTUAL As Decimal,  _
                    ByVal STOCK_COMPROMETIDO As Decimal,  _
                    ByVal STOCK_TRANSITO As Decimal,  _
                    ByVal ALMACEN As String,  _
                    ByVal UBICACION As String,  _
                    ByVal PRECIO_COMPRA_MN As Decimal,  _
                    ByVal PRECIO_VENTA_MN As Decimal,  _
                    ByVal PRECIO_COMPRA_ME As Decimal,  _
                    ByVal PRECIO_VENTA_ME As Decimal,  _
                    ByVal PROCEDENCIA As String,  _
                    ByVal CUENTA_COMPRA_MN As String,  _
                    ByVal CUENTA_VENTA_MN As String,  _
                    ByVal CUENTA_COMPRA_ME As String,  _
                    ByVal CUENTA_VENTA_ME As String,  _
                    ByVal CUENTA_COSTO_MN As String,  _
                    ByVal CUENTA_COSTO_ME As String,  _
                    ByVal TIPO_MONEDA As String,  _
                    ByVal PRIORIDAD As String,  _
                    ByVal CODIGO_COMPRA As String,  _
                    ByVal DESCRIPCION_COMPRA As String,  _
                    ByVal TIEMPO_ENTREGA As Decimal,  _
                    ByVal TIEMPO_PROCESO As Decimal,  _
                    ByVal STOCK_SEGURIDAD As Decimal,  _
                    ByVal CADUCIDAD As Decimal,  _
                    ByVal ESTADO As String,  _
                    ByVal INDICA_SERIE As String,  _
                    ByVal INDICA_LOTE As String,  _
                    ByVal INDICA_VENCIMIENTO As String,  _
                    ByVal INDICA_VALIDA_STOCK As String,  _
                    ByVal INDICA_AFECTO As String,  _
                    ByVal INDICA_COMPUESTO As String,  _
                    ByVal INDICA_PROMOCIONAL As String,  _
                    ByVal INDICA_SIN_PLANIFICACION As String,  _
                    ByVal PORCENTAJE_GANANCIA_COSTO As Decimal,  _
                    ByVal PORCENTAJE_GANANCIA_PRECIO As Decimal,  _
                    ByVal PUNTOS_BONIFICACION As Decimal,  _
                    ByVal LARGO_CMS As Decimal,  _
                    ByVal ANCHO_CMS As Decimal,  _
                    ByVal PROFUNDIDAD_CMS As Decimal,  _
                    ByVal STOCK_MINIMO As Decimal,  _
                    ByVal STOCK_MAXIMO As Decimal,  _
                    ByVal PARTIDA_ARANCELARIA As String,  _
                    ByVal COSTO_FOB As Decimal,  _
                    ByVal FLETE As Decimal,  _
                    ByVal SEGUROS As Decimal,  _
                    ByVal AGENTE_ADUANAS As Decimal,  _
                    ByVal DERECHO_ADVALOREM As Decimal,  _
                    ByVal GASTOS_DESPACHO As Decimal,  _
                    ByVal COSTO_ESTANDAR As Decimal,  _
                    ByVal CODIGO_ANTIGUO As String,  _
                    ByVal CODIGO_VENDEDOR As String,  _
                    ByVal CODIGO_COMPRADOR As String,  _
                    ByVal ULTIMA_COMPRA As String,  _
                    ByVal ULTIMA_VENTA As String,  _
                    ByVal COMENTARIO As String,  _
                    ByVal IMAGEN As String,  _
                    ByVal USUARIO_REGISTRO As String,  _
                    ByVal FECHA_REGISTRO As Date,  _
                    ByVal USUARIO_MODIFICA As String,  _
                    ByVal FECHA_MODIFICA As Date) As PRODUCTOSRow
            Dim rowPRODUCTOSRow As PRODUCTOSRow = CType(Me.NewRow,PRODUCTOSRow)
            Dim columnValuesArray() As Object = New Object() {EMPRESA, PRODUCTO, TIPO_EXISTENCIA, DESCRIPCION, DESCRIPCION_AMPLIADA, PRODUCTO_FAMILIA, PRODUCTO_SUB_FAMILIA, PRODUCTO_TIPO, PRODUCTO_SUB_TIPO, UNIDAD_MEDIDA, UNIDAD_COMPRA, UNIDAD_VENTA, DECIMALES, FACTOR_COMPRA, FACTOR_VENTA, VOLUMEN_COMPRA, VOLUMEN_VENTA, PESO_COMPRA, PESO_VENTA, STOCK_ACTUAL, STOCK_COMPROMETIDO, STOCK_TRANSITO, ALMACEN, UBICACION, PRECIO_COMPRA_MN, PRECIO_VENTA_MN, PRECIO_COMPRA_ME, PRECIO_VENTA_ME, PROCEDENCIA, CUENTA_COMPRA_MN, CUENTA_VENTA_MN, CUENTA_COMPRA_ME, CUENTA_VENTA_ME, CUENTA_COSTO_MN, CUENTA_COSTO_ME, TIPO_MONEDA, PRIORIDAD, CODIGO_COMPRA, DESCRIPCION_COMPRA, TIEMPO_ENTREGA, TIEMPO_PROCESO, STOCK_SEGURIDAD, CADUCIDAD, ESTADO, INDICA_SERIE, INDICA_LOTE, INDICA_VENCIMIENTO, INDICA_VALIDA_STOCK, INDICA_AFECTO, INDICA_COMPUESTO, INDICA_PROMOCIONAL, INDICA_SIN_PLANIFICACION, PORCENTAJE_GANANCIA_COSTO, PORCENTAJE_GANANCIA_PRECIO, PUNTOS_BONIFICACION, LARGO_CMS, ANCHO_CMS, PROFUNDIDAD_CMS, STOCK_MINIMO, STOCK_MAXIMO, PARTIDA_ARANCELARIA, COSTO_FOB, FLETE, SEGUROS, AGENTE_ADUANAS, DERECHO_ADVALOREM, GASTOS_DESPACHO, COSTO_ESTANDAR, CODIGO_ANTIGUO, CODIGO_VENDEDOR, CODIGO_COMPRADOR, ULTIMA_COMPRA, ULTIMA_VENTA, COMENTARIO, IMAGEN, USUARIO_REGISTRO, FECHA_REGISTRO, USUARIO_MODIFICA, FECHA_MODIFICA}
            rowPRODUCTOSRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowPRODUCTOSRow)
            Return rowPRODUCTOSRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function FindByEMPRESAPRODUCTO(ByVal EMPRESA As String, ByVal PRODUCTO As String) As PRODUCTOSRow
            Return CType(Me.Rows.Find(New Object() {EMPRESA, PRODUCTO}),PRODUCTOSRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As PRODUCTOSDataTable = CType(MyBase.Clone,PRODUCTOSDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New PRODUCTOSDataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub InitVars()
            Me.columnEMPRESA = MyBase.Columns("EMPRESA")
            Me.columnPRODUCTO = MyBase.Columns("PRODUCTO")
            Me.columnTIPO_EXISTENCIA = MyBase.Columns("TIPO_EXISTENCIA")
            Me.columnDESCRIPCION = MyBase.Columns("DESCRIPCION")
            Me.columnDESCRIPCION_AMPLIADA = MyBase.Columns("DESCRIPCION_AMPLIADA")
            Me.columnPRODUCTO_FAMILIA = MyBase.Columns("PRODUCTO_FAMILIA")
            Me.columnPRODUCTO_SUB_FAMILIA = MyBase.Columns("PRODUCTO_SUB_FAMILIA")
            Me.columnPRODUCTO_TIPO = MyBase.Columns("PRODUCTO_TIPO")
            Me.columnPRODUCTO_SUB_TIPO = MyBase.Columns("PRODUCTO_SUB_TIPO")
            Me.columnUNIDAD_MEDIDA = MyBase.Columns("UNIDAD_MEDIDA")
            Me.columnUNIDAD_COMPRA = MyBase.Columns("UNIDAD_COMPRA")
            Me.columnUNIDAD_VENTA = MyBase.Columns("UNIDAD_VENTA")
            Me.columnDECIMALES = MyBase.Columns("DECIMALES")
            Me.columnFACTOR_COMPRA = MyBase.Columns("FACTOR_COMPRA")
            Me.columnFACTOR_VENTA = MyBase.Columns("FACTOR_VENTA")
            Me.columnVOLUMEN_COMPRA = MyBase.Columns("VOLUMEN_COMPRA")
            Me.columnVOLUMEN_VENTA = MyBase.Columns("VOLUMEN_VENTA")
            Me.columnPESO_COMPRA = MyBase.Columns("PESO_COMPRA")
            Me.columnPESO_VENTA = MyBase.Columns("PESO_VENTA")
            Me.columnSTOCK_ACTUAL = MyBase.Columns("STOCK_ACTUAL")
            Me.columnSTOCK_COMPROMETIDO = MyBase.Columns("STOCK_COMPROMETIDO")
            Me.columnSTOCK_TRANSITO = MyBase.Columns("STOCK_TRANSITO")
            Me.columnALMACEN = MyBase.Columns("ALMACEN")
            Me.columnUBICACION = MyBase.Columns("UBICACION")
            Me.columnPRECIO_COMPRA_MN = MyBase.Columns("PRECIO_COMPRA_MN")
            Me.columnPRECIO_VENTA_MN = MyBase.Columns("PRECIO_VENTA_MN")
            Me.columnPRECIO_COMPRA_ME = MyBase.Columns("PRECIO_COMPRA_ME")
            Me.columnPRECIO_VENTA_ME = MyBase.Columns("PRECIO_VENTA_ME")
            Me.columnPROCEDENCIA = MyBase.Columns("PROCEDENCIA")
            Me.columnCUENTA_COMPRA_MN = MyBase.Columns("CUENTA_COMPRA_MN")
            Me.columnCUENTA_VENTA_MN = MyBase.Columns("CUENTA_VENTA_MN")
            Me.columnCUENTA_COMPRA_ME = MyBase.Columns("CUENTA_COMPRA_ME")
            Me.columnCUENTA_VENTA_ME = MyBase.Columns("CUENTA_VENTA_ME")
            Me.columnCUENTA_COSTO_MN = MyBase.Columns("CUENTA_COSTO_MN")
            Me.columnCUENTA_COSTO_ME = MyBase.Columns("CUENTA_COSTO_ME")
            Me.columnTIPO_MONEDA = MyBase.Columns("TIPO_MONEDA")
            Me.columnPRIORIDAD = MyBase.Columns("PRIORIDAD")
            Me.columnCODIGO_COMPRA = MyBase.Columns("CODIGO_COMPRA")
            Me.columnDESCRIPCION_COMPRA = MyBase.Columns("DESCRIPCION_COMPRA")
            Me.columnTIEMPO_ENTREGA = MyBase.Columns("TIEMPO_ENTREGA")
            Me.columnTIEMPO_PROCESO = MyBase.Columns("TIEMPO_PROCESO")
            Me.columnSTOCK_SEGURIDAD = MyBase.Columns("STOCK_SEGURIDAD")
            Me.columnCADUCIDAD = MyBase.Columns("CADUCIDAD")
            Me.columnESTADO = MyBase.Columns("ESTADO")
            Me.columnINDICA_SERIE = MyBase.Columns("INDICA_SERIE")
            Me.columnINDICA_LOTE = MyBase.Columns("INDICA_LOTE")
            Me.columnINDICA_VENCIMIENTO = MyBase.Columns("INDICA_VENCIMIENTO")
            Me.columnINDICA_VALIDA_STOCK = MyBase.Columns("INDICA_VALIDA_STOCK")
            Me.columnINDICA_AFECTO = MyBase.Columns("INDICA_AFECTO")
            Me.columnINDICA_COMPUESTO = MyBase.Columns("INDICA_COMPUESTO")
            Me.columnINDICA_PROMOCIONAL = MyBase.Columns("INDICA_PROMOCIONAL")
            Me.columnINDICA_SIN_PLANIFICACION = MyBase.Columns("INDICA_SIN_PLANIFICACION")
            Me.columnPORCENTAJE_GANANCIA_COSTO = MyBase.Columns("PORCENTAJE_GANANCIA_COSTO")
            Me.columnPORCENTAJE_GANANCIA_PRECIO = MyBase.Columns("PORCENTAJE_GANANCIA_PRECIO")
            Me.columnPUNTOS_BONIFICACION = MyBase.Columns("PUNTOS_BONIFICACION")
            Me.columnLARGO_CMS = MyBase.Columns("LARGO_CMS")
            Me.columnANCHO_CMS = MyBase.Columns("ANCHO_CMS")
            Me.columnPROFUNDIDAD_CMS = MyBase.Columns("PROFUNDIDAD_CMS")
            Me.columnSTOCK_MINIMO = MyBase.Columns("STOCK_MINIMO")
            Me.columnSTOCK_MAXIMO = MyBase.Columns("STOCK_MAXIMO")
            Me.columnPARTIDA_ARANCELARIA = MyBase.Columns("PARTIDA_ARANCELARIA")
            Me.columnCOSTO_FOB = MyBase.Columns("COSTO_FOB")
            Me.columnFLETE = MyBase.Columns("FLETE")
            Me.columnSEGUROS = MyBase.Columns("SEGUROS")
            Me.columnAGENTE_ADUANAS = MyBase.Columns("AGENTE_ADUANAS")
            Me.columnDERECHO_ADVALOREM = MyBase.Columns("DERECHO_ADVALOREM")
            Me.columnGASTOS_DESPACHO = MyBase.Columns("GASTOS_DESPACHO")
            Me.columnCOSTO_ESTANDAR = MyBase.Columns("COSTO_ESTANDAR")
            Me.columnCODIGO_ANTIGUO = MyBase.Columns("CODIGO_ANTIGUO")
            Me.columnCODIGO_VENDEDOR = MyBase.Columns("CODIGO_VENDEDOR")
            Me.columnCODIGO_COMPRADOR = MyBase.Columns("CODIGO_COMPRADOR")
            Me.columnULTIMA_COMPRA = MyBase.Columns("ULTIMA_COMPRA")
            Me.columnULTIMA_VENTA = MyBase.Columns("ULTIMA_VENTA")
            Me.columnCOMENTARIO = MyBase.Columns("COMENTARIO")
            Me.columnIMAGEN = MyBase.Columns("IMAGEN")
            Me.columnUSUARIO_REGISTRO = MyBase.Columns("USUARIO_REGISTRO")
            Me.columnFECHA_REGISTRO = MyBase.Columns("FECHA_REGISTRO")
            Me.columnUSUARIO_MODIFICA = MyBase.Columns("USUARIO_MODIFICA")
            Me.columnFECHA_MODIFICA = MyBase.Columns("FECHA_MODIFICA")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitClass()
            Me.columnEMPRESA = New Global.System.Data.DataColumn("EMPRESA", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnEMPRESA)
            Me.columnPRODUCTO = New Global.System.Data.DataColumn("PRODUCTO", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPRODUCTO)
            Me.columnTIPO_EXISTENCIA = New Global.System.Data.DataColumn("TIPO_EXISTENCIA", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTIPO_EXISTENCIA)
            Me.columnDESCRIPCION = New Global.System.Data.DataColumn("DESCRIPCION", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDESCRIPCION)
            Me.columnDESCRIPCION_AMPLIADA = New Global.System.Data.DataColumn("DESCRIPCION_AMPLIADA", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDESCRIPCION_AMPLIADA)
            Me.columnPRODUCTO_FAMILIA = New Global.System.Data.DataColumn("PRODUCTO_FAMILIA", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPRODUCTO_FAMILIA)
            Me.columnPRODUCTO_SUB_FAMILIA = New Global.System.Data.DataColumn("PRODUCTO_SUB_FAMILIA", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPRODUCTO_SUB_FAMILIA)
            Me.columnPRODUCTO_TIPO = New Global.System.Data.DataColumn("PRODUCTO_TIPO", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPRODUCTO_TIPO)
            Me.columnPRODUCTO_SUB_TIPO = New Global.System.Data.DataColumn("PRODUCTO_SUB_TIPO", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPRODUCTO_SUB_TIPO)
            Me.columnUNIDAD_MEDIDA = New Global.System.Data.DataColumn("UNIDAD_MEDIDA", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnUNIDAD_MEDIDA)
            Me.columnUNIDAD_COMPRA = New Global.System.Data.DataColumn("UNIDAD_COMPRA", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnUNIDAD_COMPRA)
            Me.columnUNIDAD_VENTA = New Global.System.Data.DataColumn("UNIDAD_VENTA", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnUNIDAD_VENTA)
            Me.columnDECIMALES = New Global.System.Data.DataColumn("DECIMALES", GetType(Byte), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDECIMALES)
            Me.columnFACTOR_COMPRA = New Global.System.Data.DataColumn("FACTOR_COMPRA", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFACTOR_COMPRA)
            Me.columnFACTOR_VENTA = New Global.System.Data.DataColumn("FACTOR_VENTA", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFACTOR_VENTA)
            Me.columnVOLUMEN_COMPRA = New Global.System.Data.DataColumn("VOLUMEN_COMPRA", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnVOLUMEN_COMPRA)
            Me.columnVOLUMEN_VENTA = New Global.System.Data.DataColumn("VOLUMEN_VENTA", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnVOLUMEN_VENTA)
            Me.columnPESO_COMPRA = New Global.System.Data.DataColumn("PESO_COMPRA", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPESO_COMPRA)
            Me.columnPESO_VENTA = New Global.System.Data.DataColumn("PESO_VENTA", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPESO_VENTA)
            Me.columnSTOCK_ACTUAL = New Global.System.Data.DataColumn("STOCK_ACTUAL", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSTOCK_ACTUAL)
            Me.columnSTOCK_COMPROMETIDO = New Global.System.Data.DataColumn("STOCK_COMPROMETIDO", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSTOCK_COMPROMETIDO)
            Me.columnSTOCK_TRANSITO = New Global.System.Data.DataColumn("STOCK_TRANSITO", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSTOCK_TRANSITO)
            Me.columnALMACEN = New Global.System.Data.DataColumn("ALMACEN", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnALMACEN)
            Me.columnUBICACION = New Global.System.Data.DataColumn("UBICACION", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnUBICACION)
            Me.columnPRECIO_COMPRA_MN = New Global.System.Data.DataColumn("PRECIO_COMPRA_MN", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPRECIO_COMPRA_MN)
            Me.columnPRECIO_VENTA_MN = New Global.System.Data.DataColumn("PRECIO_VENTA_MN", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPRECIO_VENTA_MN)
            Me.columnPRECIO_COMPRA_ME = New Global.System.Data.DataColumn("PRECIO_COMPRA_ME", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPRECIO_COMPRA_ME)
            Me.columnPRECIO_VENTA_ME = New Global.System.Data.DataColumn("PRECIO_VENTA_ME", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPRECIO_VENTA_ME)
            Me.columnPROCEDENCIA = New Global.System.Data.DataColumn("PROCEDENCIA", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPROCEDENCIA)
            Me.columnCUENTA_COMPRA_MN = New Global.System.Data.DataColumn("CUENTA_COMPRA_MN", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCUENTA_COMPRA_MN)
            Me.columnCUENTA_VENTA_MN = New Global.System.Data.DataColumn("CUENTA_VENTA_MN", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCUENTA_VENTA_MN)
            Me.columnCUENTA_COMPRA_ME = New Global.System.Data.DataColumn("CUENTA_COMPRA_ME", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCUENTA_COMPRA_ME)
            Me.columnCUENTA_VENTA_ME = New Global.System.Data.DataColumn("CUENTA_VENTA_ME", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCUENTA_VENTA_ME)
            Me.columnCUENTA_COSTO_MN = New Global.System.Data.DataColumn("CUENTA_COSTO_MN", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCUENTA_COSTO_MN)
            Me.columnCUENTA_COSTO_ME = New Global.System.Data.DataColumn("CUENTA_COSTO_ME", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCUENTA_COSTO_ME)
            Me.columnTIPO_MONEDA = New Global.System.Data.DataColumn("TIPO_MONEDA", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTIPO_MONEDA)
            Me.columnPRIORIDAD = New Global.System.Data.DataColumn("PRIORIDAD", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPRIORIDAD)
            Me.columnCODIGO_COMPRA = New Global.System.Data.DataColumn("CODIGO_COMPRA", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCODIGO_COMPRA)
            Me.columnDESCRIPCION_COMPRA = New Global.System.Data.DataColumn("DESCRIPCION_COMPRA", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDESCRIPCION_COMPRA)
            Me.columnTIEMPO_ENTREGA = New Global.System.Data.DataColumn("TIEMPO_ENTREGA", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTIEMPO_ENTREGA)
            Me.columnTIEMPO_PROCESO = New Global.System.Data.DataColumn("TIEMPO_PROCESO", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTIEMPO_PROCESO)
            Me.columnSTOCK_SEGURIDAD = New Global.System.Data.DataColumn("STOCK_SEGURIDAD", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSTOCK_SEGURIDAD)
            Me.columnCADUCIDAD = New Global.System.Data.DataColumn("CADUCIDAD", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCADUCIDAD)
            Me.columnESTADO = New Global.System.Data.DataColumn("ESTADO", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnESTADO)
            Me.columnINDICA_SERIE = New Global.System.Data.DataColumn("INDICA_SERIE", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnINDICA_SERIE)
            Me.columnINDICA_LOTE = New Global.System.Data.DataColumn("INDICA_LOTE", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnINDICA_LOTE)
            Me.columnINDICA_VENCIMIENTO = New Global.System.Data.DataColumn("INDICA_VENCIMIENTO", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnINDICA_VENCIMIENTO)
            Me.columnINDICA_VALIDA_STOCK = New Global.System.Data.DataColumn("INDICA_VALIDA_STOCK", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnINDICA_VALIDA_STOCK)
            Me.columnINDICA_AFECTO = New Global.System.Data.DataColumn("INDICA_AFECTO", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnINDICA_AFECTO)
            Me.columnINDICA_COMPUESTO = New Global.System.Data.DataColumn("INDICA_COMPUESTO", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnINDICA_COMPUESTO)
            Me.columnINDICA_PROMOCIONAL = New Global.System.Data.DataColumn("INDICA_PROMOCIONAL", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnINDICA_PROMOCIONAL)
            Me.columnINDICA_SIN_PLANIFICACION = New Global.System.Data.DataColumn("INDICA_SIN_PLANIFICACION", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnINDICA_SIN_PLANIFICACION)
            Me.columnPORCENTAJE_GANANCIA_COSTO = New Global.System.Data.DataColumn("PORCENTAJE_GANANCIA_COSTO", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPORCENTAJE_GANANCIA_COSTO)
            Me.columnPORCENTAJE_GANANCIA_PRECIO = New Global.System.Data.DataColumn("PORCENTAJE_GANANCIA_PRECIO", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPORCENTAJE_GANANCIA_PRECIO)
            Me.columnPUNTOS_BONIFICACION = New Global.System.Data.DataColumn("PUNTOS_BONIFICACION", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPUNTOS_BONIFICACION)
            Me.columnLARGO_CMS = New Global.System.Data.DataColumn("LARGO_CMS", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnLARGO_CMS)
            Me.columnANCHO_CMS = New Global.System.Data.DataColumn("ANCHO_CMS", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnANCHO_CMS)
            Me.columnPROFUNDIDAD_CMS = New Global.System.Data.DataColumn("PROFUNDIDAD_CMS", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPROFUNDIDAD_CMS)
            Me.columnSTOCK_MINIMO = New Global.System.Data.DataColumn("STOCK_MINIMO", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSTOCK_MINIMO)
            Me.columnSTOCK_MAXIMO = New Global.System.Data.DataColumn("STOCK_MAXIMO", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSTOCK_MAXIMO)
            Me.columnPARTIDA_ARANCELARIA = New Global.System.Data.DataColumn("PARTIDA_ARANCELARIA", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPARTIDA_ARANCELARIA)
            Me.columnCOSTO_FOB = New Global.System.Data.DataColumn("COSTO_FOB", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCOSTO_FOB)
            Me.columnFLETE = New Global.System.Data.DataColumn("FLETE", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFLETE)
            Me.columnSEGUROS = New Global.System.Data.DataColumn("SEGUROS", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSEGUROS)
            Me.columnAGENTE_ADUANAS = New Global.System.Data.DataColumn("AGENTE_ADUANAS", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnAGENTE_ADUANAS)
            Me.columnDERECHO_ADVALOREM = New Global.System.Data.DataColumn("DERECHO_ADVALOREM", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDERECHO_ADVALOREM)
            Me.columnGASTOS_DESPACHO = New Global.System.Data.DataColumn("GASTOS_DESPACHO", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnGASTOS_DESPACHO)
            Me.columnCOSTO_ESTANDAR = New Global.System.Data.DataColumn("COSTO_ESTANDAR", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCOSTO_ESTANDAR)
            Me.columnCODIGO_ANTIGUO = New Global.System.Data.DataColumn("CODIGO_ANTIGUO", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCODIGO_ANTIGUO)
            Me.columnCODIGO_VENDEDOR = New Global.System.Data.DataColumn("CODIGO_VENDEDOR", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCODIGO_VENDEDOR)
            Me.columnCODIGO_COMPRADOR = New Global.System.Data.DataColumn("CODIGO_COMPRADOR", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCODIGO_COMPRADOR)
            Me.columnULTIMA_COMPRA = New Global.System.Data.DataColumn("ULTIMA_COMPRA", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnULTIMA_COMPRA)
            Me.columnULTIMA_VENTA = New Global.System.Data.DataColumn("ULTIMA_VENTA", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnULTIMA_VENTA)
            Me.columnCOMENTARIO = New Global.System.Data.DataColumn("COMENTARIO", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCOMENTARIO)
            Me.columnIMAGEN = New Global.System.Data.DataColumn("IMAGEN", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnIMAGEN)
            Me.columnUSUARIO_REGISTRO = New Global.System.Data.DataColumn("USUARIO_REGISTRO", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnUSUARIO_REGISTRO)
            Me.columnFECHA_REGISTRO = New Global.System.Data.DataColumn("FECHA_REGISTRO", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFECHA_REGISTRO)
            Me.columnUSUARIO_MODIFICA = New Global.System.Data.DataColumn("USUARIO_MODIFICA", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnUSUARIO_MODIFICA)
            Me.columnFECHA_MODIFICA = New Global.System.Data.DataColumn("FECHA_MODIFICA", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFECHA_MODIFICA)
            Me.Constraints.Add(New Global.System.Data.UniqueConstraint("Constraint1", New Global.System.Data.DataColumn() {Me.columnEMPRESA, Me.columnPRODUCTO}, true))
            Me.columnEMPRESA.AllowDBNull = false
            Me.columnEMPRESA.MaxLength = 3
            Me.columnPRODUCTO.AllowDBNull = false
            Me.columnPRODUCTO.MaxLength = 8
            Me.columnTIPO_EXISTENCIA.AllowDBNull = false
            Me.columnTIPO_EXISTENCIA.MaxLength = 2
            Me.columnDESCRIPCION.AllowDBNull = false
            Me.columnDESCRIPCION.MaxLength = 50
            Me.columnDESCRIPCION_AMPLIADA.AllowDBNull = false
            Me.columnDESCRIPCION_AMPLIADA.MaxLength = 200
            Me.columnPRODUCTO_FAMILIA.AllowDBNull = false
            Me.columnPRODUCTO_FAMILIA.MaxLength = 20
            Me.columnPRODUCTO_SUB_FAMILIA.AllowDBNull = false
            Me.columnPRODUCTO_SUB_FAMILIA.MaxLength = 20
            Me.columnPRODUCTO_TIPO.AllowDBNull = false
            Me.columnPRODUCTO_TIPO.MaxLength = 20
            Me.columnPRODUCTO_SUB_TIPO.AllowDBNull = false
            Me.columnPRODUCTO_SUB_TIPO.MaxLength = 20
            Me.columnUNIDAD_MEDIDA.AllowDBNull = false
            Me.columnUNIDAD_MEDIDA.MaxLength = 2
            Me.columnUNIDAD_COMPRA.AllowDBNull = false
            Me.columnUNIDAD_COMPRA.MaxLength = 2
            Me.columnUNIDAD_VENTA.AllowDBNull = false
            Me.columnUNIDAD_VENTA.MaxLength = 2
            Me.columnDECIMALES.AllowDBNull = false
            Me.columnFACTOR_COMPRA.AllowDBNull = false
            Me.columnFACTOR_VENTA.AllowDBNull = false
            Me.columnVOLUMEN_COMPRA.AllowDBNull = false
            Me.columnVOLUMEN_VENTA.AllowDBNull = false
            Me.columnPESO_COMPRA.AllowDBNull = false
            Me.columnPESO_VENTA.AllowDBNull = false
            Me.columnSTOCK_ACTUAL.AllowDBNull = false
            Me.columnSTOCK_COMPROMETIDO.AllowDBNull = false
            Me.columnSTOCK_TRANSITO.AllowDBNull = false
            Me.columnALMACEN.AllowDBNull = false
            Me.columnALMACEN.MaxLength = 20
            Me.columnUBICACION.AllowDBNull = false
            Me.columnUBICACION.MaxLength = 20
            Me.columnPRECIO_COMPRA_MN.AllowDBNull = false
            Me.columnPRECIO_VENTA_MN.AllowDBNull = false
            Me.columnPRECIO_COMPRA_ME.AllowDBNull = false
            Me.columnPRECIO_VENTA_ME.AllowDBNull = false
            Me.columnPROCEDENCIA.AllowDBNull = false
            Me.columnPROCEDENCIA.MaxLength = 1
            Me.columnCUENTA_COMPRA_MN.AllowDBNull = false
            Me.columnCUENTA_COMPRA_MN.MaxLength = 20
            Me.columnCUENTA_VENTA_MN.AllowDBNull = false
            Me.columnCUENTA_VENTA_MN.MaxLength = 20
            Me.columnCUENTA_COMPRA_ME.AllowDBNull = false
            Me.columnCUENTA_COMPRA_ME.MaxLength = 20
            Me.columnCUENTA_VENTA_ME.AllowDBNull = false
            Me.columnCUENTA_VENTA_ME.MaxLength = 20
            Me.columnCUENTA_COSTO_MN.AllowDBNull = false
            Me.columnCUENTA_COSTO_MN.MaxLength = 20
            Me.columnCUENTA_COSTO_ME.AllowDBNull = false
            Me.columnCUENTA_COSTO_ME.MaxLength = 20
            Me.columnTIPO_MONEDA.AllowDBNull = false
            Me.columnTIPO_MONEDA.MaxLength = 1
            Me.columnPRIORIDAD.AllowDBNull = false
            Me.columnPRIORIDAD.MaxLength = 1
            Me.columnCODIGO_COMPRA.AllowDBNull = false
            Me.columnCODIGO_COMPRA.MaxLength = 20
            Me.columnDESCRIPCION_COMPRA.AllowDBNull = false
            Me.columnDESCRIPCION_COMPRA.MaxLength = 200
            Me.columnTIEMPO_ENTREGA.AllowDBNull = false
            Me.columnTIEMPO_PROCESO.AllowDBNull = false
            Me.columnSTOCK_SEGURIDAD.AllowDBNull = false
            Me.columnCADUCIDAD.AllowDBNull = false
            Me.columnESTADO.AllowDBNull = false
            Me.columnESTADO.MaxLength = 1
            Me.columnINDICA_SERIE.AllowDBNull = false
            Me.columnINDICA_SERIE.MaxLength = 2
            Me.columnINDICA_LOTE.AllowDBNull = false
            Me.columnINDICA_LOTE.MaxLength = 2
            Me.columnINDICA_VENCIMIENTO.AllowDBNull = false
            Me.columnINDICA_VENCIMIENTO.MaxLength = 2
            Me.columnINDICA_VALIDA_STOCK.AllowDBNull = false
            Me.columnINDICA_VALIDA_STOCK.MaxLength = 2
            Me.columnINDICA_AFECTO.AllowDBNull = false
            Me.columnINDICA_AFECTO.MaxLength = 2
            Me.columnINDICA_COMPUESTO.AllowDBNull = false
            Me.columnINDICA_COMPUESTO.MaxLength = 2
            Me.columnINDICA_PROMOCIONAL.AllowDBNull = false
            Me.columnINDICA_PROMOCIONAL.MaxLength = 2
            Me.columnINDICA_SIN_PLANIFICACION.AllowDBNull = false
            Me.columnINDICA_SIN_PLANIFICACION.MaxLength = 2
            Me.columnPORCENTAJE_GANANCIA_COSTO.AllowDBNull = false
            Me.columnPORCENTAJE_GANANCIA_PRECIO.AllowDBNull = false
            Me.columnPUNTOS_BONIFICACION.AllowDBNull = false
            Me.columnLARGO_CMS.AllowDBNull = false
            Me.columnANCHO_CMS.AllowDBNull = false
            Me.columnPROFUNDIDAD_CMS.AllowDBNull = false
            Me.columnSTOCK_MINIMO.AllowDBNull = false
            Me.columnSTOCK_MAXIMO.AllowDBNull = false
            Me.columnPARTIDA_ARANCELARIA.AllowDBNull = false
            Me.columnPARTIDA_ARANCELARIA.MaxLength = 20
            Me.columnCOSTO_FOB.AllowDBNull = false
            Me.columnFLETE.AllowDBNull = false
            Me.columnSEGUROS.AllowDBNull = false
            Me.columnAGENTE_ADUANAS.AllowDBNull = false
            Me.columnDERECHO_ADVALOREM.AllowDBNull = false
            Me.columnGASTOS_DESPACHO.AllowDBNull = false
            Me.columnCOSTO_ESTANDAR.AllowDBNull = false
            Me.columnCODIGO_ANTIGUO.AllowDBNull = false
            Me.columnCODIGO_ANTIGUO.MaxLength = 20
            Me.columnCODIGO_VENDEDOR.AllowDBNull = false
            Me.columnCODIGO_VENDEDOR.MaxLength = 20
            Me.columnCODIGO_COMPRADOR.AllowDBNull = false
            Me.columnCODIGO_COMPRADOR.MaxLength = 20
            Me.columnULTIMA_COMPRA.AllowDBNull = false
            Me.columnULTIMA_COMPRA.MaxLength = 12
            Me.columnULTIMA_VENTA.AllowDBNull = false
            Me.columnULTIMA_VENTA.MaxLength = 12
            Me.columnCOMENTARIO.AllowDBNull = false
            Me.columnCOMENTARIO.MaxLength = 100
            Me.columnIMAGEN.AllowDBNull = false
            Me.columnIMAGEN.MaxLength = 100
            Me.columnUSUARIO_REGISTRO.AllowDBNull = false
            Me.columnUSUARIO_REGISTRO.MaxLength = 12
            Me.columnFECHA_REGISTRO.AllowDBNull = false
            Me.columnUSUARIO_MODIFICA.MaxLength = 12
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function NewPRODUCTOSRow() As PRODUCTOSRow
            Return CType(Me.NewRow,PRODUCTOSRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New PRODUCTOSRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(PRODUCTOSRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.PRODUCTOSRowChangedEvent) Is Nothing) Then
                RaiseEvent PRODUCTOSRowChanged(Me, New PRODUCTOSRowChangeEvent(CType(e.Row,PRODUCTOSRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.PRODUCTOSRowChangingEvent) Is Nothing) Then
                RaiseEvent PRODUCTOSRowChanging(Me, New PRODUCTOSRowChangeEvent(CType(e.Row,PRODUCTOSRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.PRODUCTOSRowDeletedEvent) Is Nothing) Then
                RaiseEvent PRODUCTOSRowDeleted(Me, New PRODUCTOSRowChangeEvent(CType(e.Row,PRODUCTOSRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.PRODUCTOSRowDeletingEvent) Is Nothing) Then
                RaiseEvent PRODUCTOSRowDeleting(Me, New PRODUCTOSRowChangeEvent(CType(e.Row,PRODUCTOSRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub RemovePRODUCTOSRow(ByVal row As PRODUCTOSRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence
            Dim ds As dsProductos = New dsProductos
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "PRODUCTOSDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0"),  _
     Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class COMPUESTOSDataTable
        Inherits Global.System.Data.TypedTableBase(Of COMPUESTOSRow)
        
        Private columnPRODUCTO As Global.System.Data.DataColumn
        
        Private columnDESCRIPCION As Global.System.Data.DataColumn
        
        Private columnCANTIDAD As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "COMPUESTOS"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property PRODUCTOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPRODUCTO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property DESCRIPCIONColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDESCRIPCION
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property CANTIDADColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCANTIDAD
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As COMPUESTOSRow
            Get
                Return CType(Me.Rows(index),COMPUESTOSRow)
            End Get
        End Property
        
        Public Event COMPUESTOSRowChanging As COMPUESTOSRowChangeEventHandler
        
        Public Event COMPUESTOSRowChanged As COMPUESTOSRowChangeEventHandler
        
        Public Event COMPUESTOSRowDeleting As COMPUESTOSRowChangeEventHandler
        
        Public Event COMPUESTOSRowDeleted As COMPUESTOSRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Sub AddCOMPUESTOSRow(ByVal row As COMPUESTOSRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Function AddCOMPUESTOSRow(ByVal PRODUCTO As String, ByVal DESCRIPCION As String, ByVal CANTIDAD As Decimal) As COMPUESTOSRow
            Dim rowCOMPUESTOSRow As COMPUESTOSRow = CType(Me.NewRow,COMPUESTOSRow)
            Dim columnValuesArray() As Object = New Object() {PRODUCTO, DESCRIPCION, CANTIDAD}
            rowCOMPUESTOSRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowCOMPUESTOSRow)
            Return rowCOMPUESTOSRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function FindByPRODUCTO(ByVal PRODUCTO As String) As COMPUESTOSRow
            Return CType(Me.Rows.Find(New Object() {PRODUCTO}),COMPUESTOSRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As COMPUESTOSDataTable = CType(MyBase.Clone,COMPUESTOSDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New COMPUESTOSDataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub InitVars()
            Me.columnPRODUCTO = MyBase.Columns("PRODUCTO")
            Me.columnDESCRIPCION = MyBase.Columns("DESCRIPCION")
            Me.columnCANTIDAD = MyBase.Columns("CANTIDAD")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitClass()
            Me.columnPRODUCTO = New Global.System.Data.DataColumn("PRODUCTO", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPRODUCTO)
            Me.columnDESCRIPCION = New Global.System.Data.DataColumn("DESCRIPCION", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDESCRIPCION)
            Me.columnCANTIDAD = New Global.System.Data.DataColumn("CANTIDAD", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCANTIDAD)
            Me.Constraints.Add(New Global.System.Data.UniqueConstraint("Constraint1", New Global.System.Data.DataColumn() {Me.columnPRODUCTO}, true))
            Me.columnPRODUCTO.AllowDBNull = false
            Me.columnPRODUCTO.Unique = true
            Me.columnPRODUCTO.MaxLength = 8
            Me.columnDESCRIPCION.AllowDBNull = false
            Me.columnDESCRIPCION.MaxLength = 200
            Me.columnCANTIDAD.AllowDBNull = false
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function NewCOMPUESTOSRow() As COMPUESTOSRow
            Return CType(Me.NewRow,COMPUESTOSRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New COMPUESTOSRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(COMPUESTOSRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.COMPUESTOSRowChangedEvent) Is Nothing) Then
                RaiseEvent COMPUESTOSRowChanged(Me, New COMPUESTOSRowChangeEvent(CType(e.Row,COMPUESTOSRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.COMPUESTOSRowChangingEvent) Is Nothing) Then
                RaiseEvent COMPUESTOSRowChanging(Me, New COMPUESTOSRowChangeEvent(CType(e.Row,COMPUESTOSRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.COMPUESTOSRowDeletedEvent) Is Nothing) Then
                RaiseEvent COMPUESTOSRowDeleted(Me, New COMPUESTOSRowChangeEvent(CType(e.Row,COMPUESTOSRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.COMPUESTOSRowDeletingEvent) Is Nothing) Then
                RaiseEvent COMPUESTOSRowDeleting(Me, New COMPUESTOSRowChangeEvent(CType(e.Row,COMPUESTOSRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub RemoveCOMPUESTOSRow(ByVal row As COMPUESTOSRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence
            Dim ds As dsProductos = New dsProductos
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "COMPUESTOSDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0"),  _
     Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class PRODUCTOS_LISTADataTable
        Inherits Global.System.Data.TypedTableBase(Of PRODUCTOS_LISTARow)
        
        Private columnPRODUCTO As Global.System.Data.DataColumn
        
        Private columnDESCRIPCION As Global.System.Data.DataColumn
        
        Private columnDESCRIPCION_AMPLIADA As Global.System.Data.DataColumn
        
        Private columnTIPO_EXISTENCIA As Global.System.Data.DataColumn
        
        Private columnPRODUCTO_FAMILIA As Global.System.Data.DataColumn
        
        Private columnPRODUCTO_SUB_FAMILIA As Global.System.Data.DataColumn
        
        Private columnPRODUCTO_TIPO As Global.System.Data.DataColumn
        
        Private columnPRODUCTO_SUB_TIPO As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "PRODUCTOS_LISTA"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property PRODUCTOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPRODUCTO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property DESCRIPCIONColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDESCRIPCION
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property DESCRIPCION_AMPLIADAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDESCRIPCION_AMPLIADA
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property TIPO_EXISTENCIAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTIPO_EXISTENCIA
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property PRODUCTO_FAMILIAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPRODUCTO_FAMILIA
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property PRODUCTO_SUB_FAMILIAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPRODUCTO_SUB_FAMILIA
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property PRODUCTO_TIPOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPRODUCTO_TIPO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property PRODUCTO_SUB_TIPOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPRODUCTO_SUB_TIPO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As PRODUCTOS_LISTARow
            Get
                Return CType(Me.Rows(index),PRODUCTOS_LISTARow)
            End Get
        End Property
        
        Public Event PRODUCTOS_LISTARowChanging As PRODUCTOS_LISTARowChangeEventHandler
        
        Public Event PRODUCTOS_LISTARowChanged As PRODUCTOS_LISTARowChangeEventHandler
        
        Public Event PRODUCTOS_LISTARowDeleting As PRODUCTOS_LISTARowChangeEventHandler
        
        Public Event PRODUCTOS_LISTARowDeleted As PRODUCTOS_LISTARowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Sub AddPRODUCTOS_LISTARow(ByVal row As PRODUCTOS_LISTARow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Function AddPRODUCTOS_LISTARow(ByVal PRODUCTO As String, ByVal DESCRIPCION As String, ByVal DESCRIPCION_AMPLIADA As String, ByVal TIPO_EXISTENCIA As String, ByVal PRODUCTO_FAMILIA As String, ByVal PRODUCTO_SUB_FAMILIA As String, ByVal PRODUCTO_TIPO As String, ByVal PRODUCTO_SUB_TIPO As String) As PRODUCTOS_LISTARow
            Dim rowPRODUCTOS_LISTARow As PRODUCTOS_LISTARow = CType(Me.NewRow,PRODUCTOS_LISTARow)
            Dim columnValuesArray() As Object = New Object() {PRODUCTO, DESCRIPCION, DESCRIPCION_AMPLIADA, TIPO_EXISTENCIA, PRODUCTO_FAMILIA, PRODUCTO_SUB_FAMILIA, PRODUCTO_TIPO, PRODUCTO_SUB_TIPO}
            rowPRODUCTOS_LISTARow.ItemArray = columnValuesArray
            Me.Rows.Add(rowPRODUCTOS_LISTARow)
            Return rowPRODUCTOS_LISTARow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function FindByPRODUCTO(ByVal PRODUCTO As String) As PRODUCTOS_LISTARow
            Return CType(Me.Rows.Find(New Object() {PRODUCTO}),PRODUCTOS_LISTARow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As PRODUCTOS_LISTADataTable = CType(MyBase.Clone,PRODUCTOS_LISTADataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New PRODUCTOS_LISTADataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub InitVars()
            Me.columnPRODUCTO = MyBase.Columns("PRODUCTO")
            Me.columnDESCRIPCION = MyBase.Columns("DESCRIPCION")
            Me.columnDESCRIPCION_AMPLIADA = MyBase.Columns("DESCRIPCION_AMPLIADA")
            Me.columnTIPO_EXISTENCIA = MyBase.Columns("TIPO_EXISTENCIA")
            Me.columnPRODUCTO_FAMILIA = MyBase.Columns("PRODUCTO_FAMILIA")
            Me.columnPRODUCTO_SUB_FAMILIA = MyBase.Columns("PRODUCTO_SUB_FAMILIA")
            Me.columnPRODUCTO_TIPO = MyBase.Columns("PRODUCTO_TIPO")
            Me.columnPRODUCTO_SUB_TIPO = MyBase.Columns("PRODUCTO_SUB_TIPO")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitClass()
            Me.columnPRODUCTO = New Global.System.Data.DataColumn("PRODUCTO", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPRODUCTO)
            Me.columnDESCRIPCION = New Global.System.Data.DataColumn("DESCRIPCION", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDESCRIPCION)
            Me.columnDESCRIPCION_AMPLIADA = New Global.System.Data.DataColumn("DESCRIPCION_AMPLIADA", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDESCRIPCION_AMPLIADA)
            Me.columnTIPO_EXISTENCIA = New Global.System.Data.DataColumn("TIPO_EXISTENCIA", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTIPO_EXISTENCIA)
            Me.columnPRODUCTO_FAMILIA = New Global.System.Data.DataColumn("PRODUCTO_FAMILIA", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPRODUCTO_FAMILIA)
            Me.columnPRODUCTO_SUB_FAMILIA = New Global.System.Data.DataColumn("PRODUCTO_SUB_FAMILIA", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPRODUCTO_SUB_FAMILIA)
            Me.columnPRODUCTO_TIPO = New Global.System.Data.DataColumn("PRODUCTO_TIPO", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPRODUCTO_TIPO)
            Me.columnPRODUCTO_SUB_TIPO = New Global.System.Data.DataColumn("PRODUCTO_SUB_TIPO", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPRODUCTO_SUB_TIPO)
            Me.Constraints.Add(New Global.System.Data.UniqueConstraint("Constraint1", New Global.System.Data.DataColumn() {Me.columnPRODUCTO}, true))
            Me.columnPRODUCTO.AllowDBNull = false
            Me.columnPRODUCTO.Unique = true
            Me.columnPRODUCTO.MaxLength = 8
            Me.columnDESCRIPCION.AllowDBNull = false
            Me.columnDESCRIPCION.MaxLength = 50
            Me.columnDESCRIPCION_AMPLIADA.AllowDBNull = false
            Me.columnDESCRIPCION_AMPLIADA.Caption = "DESCRIPCION"
            Me.columnDESCRIPCION_AMPLIADA.MaxLength = 200
            Me.columnTIPO_EXISTENCIA.MaxLength = 2
            Me.columnPRODUCTO_FAMILIA.MaxLength = 20
            Me.columnPRODUCTO_SUB_FAMILIA.MaxLength = 20
            Me.columnPRODUCTO_TIPO.MaxLength = 20
            Me.columnPRODUCTO_SUB_TIPO.AllowDBNull = false
            Me.columnPRODUCTO_SUB_TIPO.MaxLength = 20
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function NewPRODUCTOS_LISTARow() As PRODUCTOS_LISTARow
            Return CType(Me.NewRow,PRODUCTOS_LISTARow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New PRODUCTOS_LISTARow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(PRODUCTOS_LISTARow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.PRODUCTOS_LISTARowChangedEvent) Is Nothing) Then
                RaiseEvent PRODUCTOS_LISTARowChanged(Me, New PRODUCTOS_LISTARowChangeEvent(CType(e.Row,PRODUCTOS_LISTARow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.PRODUCTOS_LISTARowChangingEvent) Is Nothing) Then
                RaiseEvent PRODUCTOS_LISTARowChanging(Me, New PRODUCTOS_LISTARowChangeEvent(CType(e.Row,PRODUCTOS_LISTARow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.PRODUCTOS_LISTARowDeletedEvent) Is Nothing) Then
                RaiseEvent PRODUCTOS_LISTARowDeleted(Me, New PRODUCTOS_LISTARowChangeEvent(CType(e.Row,PRODUCTOS_LISTARow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.PRODUCTOS_LISTARowDeletingEvent) Is Nothing) Then
                RaiseEvent PRODUCTOS_LISTARowDeleting(Me, New PRODUCTOS_LISTARowChangeEvent(CType(e.Row,PRODUCTOS_LISTARow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub RemovePRODUCTOS_LISTARow(ByVal row As PRODUCTOS_LISTARow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence
            Dim ds As dsProductos = New dsProductos
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "PRODUCTOS_LISTADataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Partial Public Class PRODUCTOSRow
        Inherits Global.System.Data.DataRow
        
        Private tablePRODUCTOS As PRODUCTOSDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tablePRODUCTOS = CType(Me.Table,PRODUCTOSDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property EMPRESA() As String
            Get
                Return CType(Me(Me.tablePRODUCTOS.EMPRESAColumn),String)
            End Get
            Set
                Me(Me.tablePRODUCTOS.EMPRESAColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property PRODUCTO() As String
            Get
                Return CType(Me(Me.tablePRODUCTOS.PRODUCTOColumn),String)
            End Get
            Set
                Me(Me.tablePRODUCTOS.PRODUCTOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property TIPO_EXISTENCIA() As String
            Get
                Return CType(Me(Me.tablePRODUCTOS.TIPO_EXISTENCIAColumn),String)
            End Get
            Set
                Me(Me.tablePRODUCTOS.TIPO_EXISTENCIAColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property DESCRIPCION() As String
            Get
                Return CType(Me(Me.tablePRODUCTOS.DESCRIPCIONColumn),String)
            End Get
            Set
                Me(Me.tablePRODUCTOS.DESCRIPCIONColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property DESCRIPCION_AMPLIADA() As String
            Get
                Return CType(Me(Me.tablePRODUCTOS.DESCRIPCION_AMPLIADAColumn),String)
            End Get
            Set
                Me(Me.tablePRODUCTOS.DESCRIPCION_AMPLIADAColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property PRODUCTO_FAMILIA() As String
            Get
                Return CType(Me(Me.tablePRODUCTOS.PRODUCTO_FAMILIAColumn),String)
            End Get
            Set
                Me(Me.tablePRODUCTOS.PRODUCTO_FAMILIAColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property PRODUCTO_SUB_FAMILIA() As String
            Get
                Return CType(Me(Me.tablePRODUCTOS.PRODUCTO_SUB_FAMILIAColumn),String)
            End Get
            Set
                Me(Me.tablePRODUCTOS.PRODUCTO_SUB_FAMILIAColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property PRODUCTO_TIPO() As String
            Get
                Return CType(Me(Me.tablePRODUCTOS.PRODUCTO_TIPOColumn),String)
            End Get
            Set
                Me(Me.tablePRODUCTOS.PRODUCTO_TIPOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property PRODUCTO_SUB_TIPO() As String
            Get
                Return CType(Me(Me.tablePRODUCTOS.PRODUCTO_SUB_TIPOColumn),String)
            End Get
            Set
                Me(Me.tablePRODUCTOS.PRODUCTO_SUB_TIPOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property UNIDAD_MEDIDA() As String
            Get
                Return CType(Me(Me.tablePRODUCTOS.UNIDAD_MEDIDAColumn),String)
            End Get
            Set
                Me(Me.tablePRODUCTOS.UNIDAD_MEDIDAColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property UNIDAD_COMPRA() As String
            Get
                Return CType(Me(Me.tablePRODUCTOS.UNIDAD_COMPRAColumn),String)
            End Get
            Set
                Me(Me.tablePRODUCTOS.UNIDAD_COMPRAColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property UNIDAD_VENTA() As String
            Get
                Return CType(Me(Me.tablePRODUCTOS.UNIDAD_VENTAColumn),String)
            End Get
            Set
                Me(Me.tablePRODUCTOS.UNIDAD_VENTAColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property DECIMALES() As Byte
            Get
                Return CType(Me(Me.tablePRODUCTOS.DECIMALESColumn),Byte)
            End Get
            Set
                Me(Me.tablePRODUCTOS.DECIMALESColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property FACTOR_COMPRA() As Decimal
            Get
                Return CType(Me(Me.tablePRODUCTOS.FACTOR_COMPRAColumn),Decimal)
            End Get
            Set
                Me(Me.tablePRODUCTOS.FACTOR_COMPRAColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property FACTOR_VENTA() As Decimal
            Get
                Return CType(Me(Me.tablePRODUCTOS.FACTOR_VENTAColumn),Decimal)
            End Get
            Set
                Me(Me.tablePRODUCTOS.FACTOR_VENTAColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property VOLUMEN_COMPRA() As Decimal
            Get
                Return CType(Me(Me.tablePRODUCTOS.VOLUMEN_COMPRAColumn),Decimal)
            End Get
            Set
                Me(Me.tablePRODUCTOS.VOLUMEN_COMPRAColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property VOLUMEN_VENTA() As Decimal
            Get
                Return CType(Me(Me.tablePRODUCTOS.VOLUMEN_VENTAColumn),Decimal)
            End Get
            Set
                Me(Me.tablePRODUCTOS.VOLUMEN_VENTAColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property PESO_COMPRA() As Decimal
            Get
                Return CType(Me(Me.tablePRODUCTOS.PESO_COMPRAColumn),Decimal)
            End Get
            Set
                Me(Me.tablePRODUCTOS.PESO_COMPRAColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property PESO_VENTA() As Decimal
            Get
                Return CType(Me(Me.tablePRODUCTOS.PESO_VENTAColumn),Decimal)
            End Get
            Set
                Me(Me.tablePRODUCTOS.PESO_VENTAColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property STOCK_ACTUAL() As Decimal
            Get
                Return CType(Me(Me.tablePRODUCTOS.STOCK_ACTUALColumn),Decimal)
            End Get
            Set
                Me(Me.tablePRODUCTOS.STOCK_ACTUALColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property STOCK_COMPROMETIDO() As Decimal
            Get
                Return CType(Me(Me.tablePRODUCTOS.STOCK_COMPROMETIDOColumn),Decimal)
            End Get
            Set
                Me(Me.tablePRODUCTOS.STOCK_COMPROMETIDOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property STOCK_TRANSITO() As Decimal
            Get
                Return CType(Me(Me.tablePRODUCTOS.STOCK_TRANSITOColumn),Decimal)
            End Get
            Set
                Me(Me.tablePRODUCTOS.STOCK_TRANSITOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property ALMACEN() As String
            Get
                Return CType(Me(Me.tablePRODUCTOS.ALMACENColumn),String)
            End Get
            Set
                Me(Me.tablePRODUCTOS.ALMACENColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property UBICACION() As String
            Get
                Return CType(Me(Me.tablePRODUCTOS.UBICACIONColumn),String)
            End Get
            Set
                Me(Me.tablePRODUCTOS.UBICACIONColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property PRECIO_COMPRA_MN() As Decimal
            Get
                Return CType(Me(Me.tablePRODUCTOS.PRECIO_COMPRA_MNColumn),Decimal)
            End Get
            Set
                Me(Me.tablePRODUCTOS.PRECIO_COMPRA_MNColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property PRECIO_VENTA_MN() As Decimal
            Get
                Return CType(Me(Me.tablePRODUCTOS.PRECIO_VENTA_MNColumn),Decimal)
            End Get
            Set
                Me(Me.tablePRODUCTOS.PRECIO_VENTA_MNColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property PRECIO_COMPRA_ME() As Decimal
            Get
                Return CType(Me(Me.tablePRODUCTOS.PRECIO_COMPRA_MEColumn),Decimal)
            End Get
            Set
                Me(Me.tablePRODUCTOS.PRECIO_COMPRA_MEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property PRECIO_VENTA_ME() As Decimal
            Get
                Return CType(Me(Me.tablePRODUCTOS.PRECIO_VENTA_MEColumn),Decimal)
            End Get
            Set
                Me(Me.tablePRODUCTOS.PRECIO_VENTA_MEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property PROCEDENCIA() As String
            Get
                Return CType(Me(Me.tablePRODUCTOS.PROCEDENCIAColumn),String)
            End Get
            Set
                Me(Me.tablePRODUCTOS.PROCEDENCIAColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property CUENTA_COMPRA_MN() As String
            Get
                Return CType(Me(Me.tablePRODUCTOS.CUENTA_COMPRA_MNColumn),String)
            End Get
            Set
                Me(Me.tablePRODUCTOS.CUENTA_COMPRA_MNColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property CUENTA_VENTA_MN() As String
            Get
                Return CType(Me(Me.tablePRODUCTOS.CUENTA_VENTA_MNColumn),String)
            End Get
            Set
                Me(Me.tablePRODUCTOS.CUENTA_VENTA_MNColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property CUENTA_COMPRA_ME() As String
            Get
                Return CType(Me(Me.tablePRODUCTOS.CUENTA_COMPRA_MEColumn),String)
            End Get
            Set
                Me(Me.tablePRODUCTOS.CUENTA_COMPRA_MEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property CUENTA_VENTA_ME() As String
            Get
                Return CType(Me(Me.tablePRODUCTOS.CUENTA_VENTA_MEColumn),String)
            End Get
            Set
                Me(Me.tablePRODUCTOS.CUENTA_VENTA_MEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property CUENTA_COSTO_MN() As String
            Get
                Return CType(Me(Me.tablePRODUCTOS.CUENTA_COSTO_MNColumn),String)
            End Get
            Set
                Me(Me.tablePRODUCTOS.CUENTA_COSTO_MNColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property CUENTA_COSTO_ME() As String
            Get
                Return CType(Me(Me.tablePRODUCTOS.CUENTA_COSTO_MEColumn),String)
            End Get
            Set
                Me(Me.tablePRODUCTOS.CUENTA_COSTO_MEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property TIPO_MONEDA() As String
            Get
                Return CType(Me(Me.tablePRODUCTOS.TIPO_MONEDAColumn),String)
            End Get
            Set
                Me(Me.tablePRODUCTOS.TIPO_MONEDAColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property PRIORIDAD() As String
            Get
                Return CType(Me(Me.tablePRODUCTOS.PRIORIDADColumn),String)
            End Get
            Set
                Me(Me.tablePRODUCTOS.PRIORIDADColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property CODIGO_COMPRA() As String
            Get
                Return CType(Me(Me.tablePRODUCTOS.CODIGO_COMPRAColumn),String)
            End Get
            Set
                Me(Me.tablePRODUCTOS.CODIGO_COMPRAColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property DESCRIPCION_COMPRA() As String
            Get
                Return CType(Me(Me.tablePRODUCTOS.DESCRIPCION_COMPRAColumn),String)
            End Get
            Set
                Me(Me.tablePRODUCTOS.DESCRIPCION_COMPRAColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property TIEMPO_ENTREGA() As Decimal
            Get
                Return CType(Me(Me.tablePRODUCTOS.TIEMPO_ENTREGAColumn),Decimal)
            End Get
            Set
                Me(Me.tablePRODUCTOS.TIEMPO_ENTREGAColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property TIEMPO_PROCESO() As Decimal
            Get
                Return CType(Me(Me.tablePRODUCTOS.TIEMPO_PROCESOColumn),Decimal)
            End Get
            Set
                Me(Me.tablePRODUCTOS.TIEMPO_PROCESOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property STOCK_SEGURIDAD() As Decimal
            Get
                Return CType(Me(Me.tablePRODUCTOS.STOCK_SEGURIDADColumn),Decimal)
            End Get
            Set
                Me(Me.tablePRODUCTOS.STOCK_SEGURIDADColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property CADUCIDAD() As Decimal
            Get
                Return CType(Me(Me.tablePRODUCTOS.CADUCIDADColumn),Decimal)
            End Get
            Set
                Me(Me.tablePRODUCTOS.CADUCIDADColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property ESTADO() As String
            Get
                Return CType(Me(Me.tablePRODUCTOS.ESTADOColumn),String)
            End Get
            Set
                Me(Me.tablePRODUCTOS.ESTADOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property INDICA_SERIE() As String
            Get
                Return CType(Me(Me.tablePRODUCTOS.INDICA_SERIEColumn),String)
            End Get
            Set
                Me(Me.tablePRODUCTOS.INDICA_SERIEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property INDICA_LOTE() As String
            Get
                Return CType(Me(Me.tablePRODUCTOS.INDICA_LOTEColumn),String)
            End Get
            Set
                Me(Me.tablePRODUCTOS.INDICA_LOTEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property INDICA_VENCIMIENTO() As String
            Get
                Return CType(Me(Me.tablePRODUCTOS.INDICA_VENCIMIENTOColumn),String)
            End Get
            Set
                Me(Me.tablePRODUCTOS.INDICA_VENCIMIENTOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property INDICA_VALIDA_STOCK() As String
            Get
                Return CType(Me(Me.tablePRODUCTOS.INDICA_VALIDA_STOCKColumn),String)
            End Get
            Set
                Me(Me.tablePRODUCTOS.INDICA_VALIDA_STOCKColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property INDICA_AFECTO() As String
            Get
                Return CType(Me(Me.tablePRODUCTOS.INDICA_AFECTOColumn),String)
            End Get
            Set
                Me(Me.tablePRODUCTOS.INDICA_AFECTOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property INDICA_COMPUESTO() As String
            Get
                Return CType(Me(Me.tablePRODUCTOS.INDICA_COMPUESTOColumn),String)
            End Get
            Set
                Me(Me.tablePRODUCTOS.INDICA_COMPUESTOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property INDICA_PROMOCIONAL() As String
            Get
                Return CType(Me(Me.tablePRODUCTOS.INDICA_PROMOCIONALColumn),String)
            End Get
            Set
                Me(Me.tablePRODUCTOS.INDICA_PROMOCIONALColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property INDICA_SIN_PLANIFICACION() As String
            Get
                Return CType(Me(Me.tablePRODUCTOS.INDICA_SIN_PLANIFICACIONColumn),String)
            End Get
            Set
                Me(Me.tablePRODUCTOS.INDICA_SIN_PLANIFICACIONColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property PORCENTAJE_GANANCIA_COSTO() As Decimal
            Get
                Return CType(Me(Me.tablePRODUCTOS.PORCENTAJE_GANANCIA_COSTOColumn),Decimal)
            End Get
            Set
                Me(Me.tablePRODUCTOS.PORCENTAJE_GANANCIA_COSTOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property PORCENTAJE_GANANCIA_PRECIO() As Decimal
            Get
                Return CType(Me(Me.tablePRODUCTOS.PORCENTAJE_GANANCIA_PRECIOColumn),Decimal)
            End Get
            Set
                Me(Me.tablePRODUCTOS.PORCENTAJE_GANANCIA_PRECIOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property PUNTOS_BONIFICACION() As Decimal
            Get
                Return CType(Me(Me.tablePRODUCTOS.PUNTOS_BONIFICACIONColumn),Decimal)
            End Get
            Set
                Me(Me.tablePRODUCTOS.PUNTOS_BONIFICACIONColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property LARGO_CMS() As Decimal
            Get
                Return CType(Me(Me.tablePRODUCTOS.LARGO_CMSColumn),Decimal)
            End Get
            Set
                Me(Me.tablePRODUCTOS.LARGO_CMSColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property ANCHO_CMS() As Decimal
            Get
                Return CType(Me(Me.tablePRODUCTOS.ANCHO_CMSColumn),Decimal)
            End Get
            Set
                Me(Me.tablePRODUCTOS.ANCHO_CMSColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property PROFUNDIDAD_CMS() As Decimal
            Get
                Return CType(Me(Me.tablePRODUCTOS.PROFUNDIDAD_CMSColumn),Decimal)
            End Get
            Set
                Me(Me.tablePRODUCTOS.PROFUNDIDAD_CMSColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property STOCK_MINIMO() As Decimal
            Get
                Return CType(Me(Me.tablePRODUCTOS.STOCK_MINIMOColumn),Decimal)
            End Get
            Set
                Me(Me.tablePRODUCTOS.STOCK_MINIMOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property STOCK_MAXIMO() As Decimal
            Get
                Return CType(Me(Me.tablePRODUCTOS.STOCK_MAXIMOColumn),Decimal)
            End Get
            Set
                Me(Me.tablePRODUCTOS.STOCK_MAXIMOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property PARTIDA_ARANCELARIA() As String
            Get
                Return CType(Me(Me.tablePRODUCTOS.PARTIDA_ARANCELARIAColumn),String)
            End Get
            Set
                Me(Me.tablePRODUCTOS.PARTIDA_ARANCELARIAColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property COSTO_FOB() As Decimal
            Get
                Return CType(Me(Me.tablePRODUCTOS.COSTO_FOBColumn),Decimal)
            End Get
            Set
                Me(Me.tablePRODUCTOS.COSTO_FOBColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property FLETE() As Decimal
            Get
                Return CType(Me(Me.tablePRODUCTOS.FLETEColumn),Decimal)
            End Get
            Set
                Me(Me.tablePRODUCTOS.FLETEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property SEGUROS() As Decimal
            Get
                Return CType(Me(Me.tablePRODUCTOS.SEGUROSColumn),Decimal)
            End Get
            Set
                Me(Me.tablePRODUCTOS.SEGUROSColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property AGENTE_ADUANAS() As Decimal
            Get
                Return CType(Me(Me.tablePRODUCTOS.AGENTE_ADUANASColumn),Decimal)
            End Get
            Set
                Me(Me.tablePRODUCTOS.AGENTE_ADUANASColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property DERECHO_ADVALOREM() As Decimal
            Get
                Return CType(Me(Me.tablePRODUCTOS.DERECHO_ADVALOREMColumn),Decimal)
            End Get
            Set
                Me(Me.tablePRODUCTOS.DERECHO_ADVALOREMColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property GASTOS_DESPACHO() As Decimal
            Get
                Return CType(Me(Me.tablePRODUCTOS.GASTOS_DESPACHOColumn),Decimal)
            End Get
            Set
                Me(Me.tablePRODUCTOS.GASTOS_DESPACHOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property COSTO_ESTANDAR() As Decimal
            Get
                Return CType(Me(Me.tablePRODUCTOS.COSTO_ESTANDARColumn),Decimal)
            End Get
            Set
                Me(Me.tablePRODUCTOS.COSTO_ESTANDARColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property CODIGO_ANTIGUO() As String
            Get
                Return CType(Me(Me.tablePRODUCTOS.CODIGO_ANTIGUOColumn),String)
            End Get
            Set
                Me(Me.tablePRODUCTOS.CODIGO_ANTIGUOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property CODIGO_VENDEDOR() As String
            Get
                Return CType(Me(Me.tablePRODUCTOS.CODIGO_VENDEDORColumn),String)
            End Get
            Set
                Me(Me.tablePRODUCTOS.CODIGO_VENDEDORColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property CODIGO_COMPRADOR() As String
            Get
                Return CType(Me(Me.tablePRODUCTOS.CODIGO_COMPRADORColumn),String)
            End Get
            Set
                Me(Me.tablePRODUCTOS.CODIGO_COMPRADORColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property ULTIMA_COMPRA() As String
            Get
                Return CType(Me(Me.tablePRODUCTOS.ULTIMA_COMPRAColumn),String)
            End Get
            Set
                Me(Me.tablePRODUCTOS.ULTIMA_COMPRAColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property ULTIMA_VENTA() As String
            Get
                Return CType(Me(Me.tablePRODUCTOS.ULTIMA_VENTAColumn),String)
            End Get
            Set
                Me(Me.tablePRODUCTOS.ULTIMA_VENTAColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property COMENTARIO() As String
            Get
                Return CType(Me(Me.tablePRODUCTOS.COMENTARIOColumn),String)
            End Get
            Set
                Me(Me.tablePRODUCTOS.COMENTARIOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property IMAGEN() As String
            Get
                Return CType(Me(Me.tablePRODUCTOS.IMAGENColumn),String)
            End Get
            Set
                Me(Me.tablePRODUCTOS.IMAGENColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property USUARIO_REGISTRO() As String
            Get
                Return CType(Me(Me.tablePRODUCTOS.USUARIO_REGISTROColumn),String)
            End Get
            Set
                Me(Me.tablePRODUCTOS.USUARIO_REGISTROColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property FECHA_REGISTRO() As Date
            Get
                Return CType(Me(Me.tablePRODUCTOS.FECHA_REGISTROColumn),Date)
            End Get
            Set
                Me(Me.tablePRODUCTOS.FECHA_REGISTROColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property USUARIO_MODIFICA() As String
            Get
                Try 
                    Return CType(Me(Me.tablePRODUCTOS.USUARIO_MODIFICAColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'USUARIO_MODIFICA' de la tabla 'PRODUCTOS' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePRODUCTOS.USUARIO_MODIFICAColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property FECHA_MODIFICA() As Date
            Get
                Try 
                    Return CType(Me(Me.tablePRODUCTOS.FECHA_MODIFICAColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'FECHA_MODIFICA' de la tabla 'PRODUCTOS' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePRODUCTOS.FECHA_MODIFICAColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsUSUARIO_MODIFICANull() As Boolean
            Return Me.IsNull(Me.tablePRODUCTOS.USUARIO_MODIFICAColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetUSUARIO_MODIFICANull()
            Me(Me.tablePRODUCTOS.USUARIO_MODIFICAColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsFECHA_MODIFICANull() As Boolean
            Return Me.IsNull(Me.tablePRODUCTOS.FECHA_MODIFICAColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetFECHA_MODIFICANull()
            Me(Me.tablePRODUCTOS.FECHA_MODIFICAColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Partial Public Class COMPUESTOSRow
        Inherits Global.System.Data.DataRow
        
        Private tableCOMPUESTOS As COMPUESTOSDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableCOMPUESTOS = CType(Me.Table,COMPUESTOSDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property PRODUCTO() As String
            Get
                Return CType(Me(Me.tableCOMPUESTOS.PRODUCTOColumn),String)
            End Get
            Set
                Me(Me.tableCOMPUESTOS.PRODUCTOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property DESCRIPCION() As String
            Get
                Return CType(Me(Me.tableCOMPUESTOS.DESCRIPCIONColumn),String)
            End Get
            Set
                Me(Me.tableCOMPUESTOS.DESCRIPCIONColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property CANTIDAD() As Decimal
            Get
                Return CType(Me(Me.tableCOMPUESTOS.CANTIDADColumn),Decimal)
            End Get
            Set
                Me(Me.tableCOMPUESTOS.CANTIDADColumn) = value
            End Set
        End Property
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Partial Public Class PRODUCTOS_LISTARow
        Inherits Global.System.Data.DataRow
        
        Private tablePRODUCTOS_LISTA As PRODUCTOS_LISTADataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tablePRODUCTOS_LISTA = CType(Me.Table,PRODUCTOS_LISTADataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property PRODUCTO() As String
            Get
                Return CType(Me(Me.tablePRODUCTOS_LISTA.PRODUCTOColumn),String)
            End Get
            Set
                Me(Me.tablePRODUCTOS_LISTA.PRODUCTOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property DESCRIPCION() As String
            Get
                Return CType(Me(Me.tablePRODUCTOS_LISTA.DESCRIPCIONColumn),String)
            End Get
            Set
                Me(Me.tablePRODUCTOS_LISTA.DESCRIPCIONColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property DESCRIPCION_AMPLIADA() As String
            Get
                Return CType(Me(Me.tablePRODUCTOS_LISTA.DESCRIPCION_AMPLIADAColumn),String)
            End Get
            Set
                Me(Me.tablePRODUCTOS_LISTA.DESCRIPCION_AMPLIADAColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property TIPO_EXISTENCIA() As String
            Get
                Try 
                    Return CType(Me(Me.tablePRODUCTOS_LISTA.TIPO_EXISTENCIAColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'TIPO_EXISTENCIA' de la tabla 'PRODUCTOS_LISTA' es DBNull."& _ 
                            "", e)
                End Try
            End Get
            Set
                Me(Me.tablePRODUCTOS_LISTA.TIPO_EXISTENCIAColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property PRODUCTO_FAMILIA() As String
            Get
                Try 
                    Return CType(Me(Me.tablePRODUCTOS_LISTA.PRODUCTO_FAMILIAColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'PRODUCTO_FAMILIA' de la tabla 'PRODUCTOS_LISTA' es DBNull"& _ 
                            ".", e)
                End Try
            End Get
            Set
                Me(Me.tablePRODUCTOS_LISTA.PRODUCTO_FAMILIAColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property PRODUCTO_SUB_FAMILIA() As String
            Get
                Try 
                    Return CType(Me(Me.tablePRODUCTOS_LISTA.PRODUCTO_SUB_FAMILIAColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'PRODUCTO_SUB_FAMILIA' de la tabla 'PRODUCTOS_LISTA' es DB"& _ 
                            "Null.", e)
                End Try
            End Get
            Set
                Me(Me.tablePRODUCTOS_LISTA.PRODUCTO_SUB_FAMILIAColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property PRODUCTO_TIPO() As String
            Get
                Try 
                    Return CType(Me(Me.tablePRODUCTOS_LISTA.PRODUCTO_TIPOColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'PRODUCTO_TIPO' de la tabla 'PRODUCTOS_LISTA' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePRODUCTOS_LISTA.PRODUCTO_TIPOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property PRODUCTO_SUB_TIPO() As String
            Get
                Return CType(Me(Me.tablePRODUCTOS_LISTA.PRODUCTO_SUB_TIPOColumn),String)
            End Get
            Set
                Me(Me.tablePRODUCTOS_LISTA.PRODUCTO_SUB_TIPOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsTIPO_EXISTENCIANull() As Boolean
            Return Me.IsNull(Me.tablePRODUCTOS_LISTA.TIPO_EXISTENCIAColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetTIPO_EXISTENCIANull()
            Me(Me.tablePRODUCTOS_LISTA.TIPO_EXISTENCIAColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsPRODUCTO_FAMILIANull() As Boolean
            Return Me.IsNull(Me.tablePRODUCTOS_LISTA.PRODUCTO_FAMILIAColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetPRODUCTO_FAMILIANull()
            Me(Me.tablePRODUCTOS_LISTA.PRODUCTO_FAMILIAColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsPRODUCTO_SUB_FAMILIANull() As Boolean
            Return Me.IsNull(Me.tablePRODUCTOS_LISTA.PRODUCTO_SUB_FAMILIAColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetPRODUCTO_SUB_FAMILIANull()
            Me(Me.tablePRODUCTOS_LISTA.PRODUCTO_SUB_FAMILIAColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsPRODUCTO_TIPONull() As Boolean
            Return Me.IsNull(Me.tablePRODUCTOS_LISTA.PRODUCTO_TIPOColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetPRODUCTO_TIPONull()
            Me(Me.tablePRODUCTOS_LISTA.PRODUCTO_TIPOColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Public Class PRODUCTOSRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As PRODUCTOSRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New(ByVal row As PRODUCTOSRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Row() As PRODUCTOSRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Public Class COMPUESTOSRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As COMPUESTOSRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New(ByVal row As COMPUESTOSRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Row() As COMPUESTOSRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Public Class PRODUCTOS_LISTARowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As PRODUCTOS_LISTARow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New(ByVal row As PRODUCTOS_LISTARow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Row() As PRODUCTOS_LISTARow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
End Class
