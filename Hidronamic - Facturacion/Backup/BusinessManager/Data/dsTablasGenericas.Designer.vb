'------------------------------------------------------------------------------
' <auto-generated>
'     Este código fue generado por una herramienta.
'     Versión del motor en tiempo de ejecución:2.0.50727.8009
'
'     Los cambios en este archivo podrían causar un comportamiento incorrecto y se perderán si
'     se vuelve a generar el código.
' </auto-generated>
'------------------------------------------------------------------------------

Option Strict Off
Option Explicit On



'''<summary>
'''Represents a strongly typed in-memory cache of data.
'''</summary>
<Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0"),  _
 Global.System.Serializable(),  _
 Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
 Global.System.ComponentModel.ToolboxItem(true),  _
 Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema"),  _
 Global.System.Xml.Serialization.XmlRootAttribute("dsTablasGenericas"),  _
 Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")>  _
Partial Public Class dsTablasGenericas
    Inherits Global.System.Data.DataSet
    
    Private tableTABLAS_CABECERA As TABLAS_CABECERADataTable
    
    Private tableTABLAS_DETALLE As TABLAS_DETALLEDataTable
    
    Private tableLISTA As LISTADataTable
    
    Private _schemaSerializationMode As Global.System.Data.SchemaSerializationMode = Global.System.Data.SchemaSerializationMode.IncludeSchema
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Public Sub New()
        MyBase.New
        Me.BeginInit
        Me.InitClass
        Dim schemaChangedHandler As Global.System.ComponentModel.CollectionChangeEventHandler = AddressOf Me.SchemaChanged
        AddHandler MyBase.Tables.CollectionChanged, schemaChangedHandler
        AddHandler MyBase.Relations.CollectionChanged, schemaChangedHandler
        Me.EndInit
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
        MyBase.New(info, context, false)
        If (Me.IsBinarySerialized(info, context) = true) Then
            Me.InitVars(false)
            Dim schemaChangedHandler1 As Global.System.ComponentModel.CollectionChangeEventHandler = AddressOf Me.SchemaChanged
            AddHandler Me.Tables.CollectionChanged, schemaChangedHandler1
            AddHandler Me.Relations.CollectionChanged, schemaChangedHandler1
            Return
        End If
        Dim strSchema As String = CType(info.GetValue("XmlSchema", GetType(String)),String)
        If (Me.DetermineSchemaSerializationMode(info, context) = Global.System.Data.SchemaSerializationMode.IncludeSchema) Then
            Dim ds As Global.System.Data.DataSet = New Global.System.Data.DataSet
            ds.ReadXmlSchema(New Global.System.Xml.XmlTextReader(New Global.System.IO.StringReader(strSchema)))
            If (Not (ds.Tables("TABLAS_CABECERA")) Is Nothing) Then
                MyBase.Tables.Add(New TABLAS_CABECERADataTable(ds.Tables("TABLAS_CABECERA")))
            End If
            If (Not (ds.Tables("TABLAS_DETALLE")) Is Nothing) Then
                MyBase.Tables.Add(New TABLAS_DETALLEDataTable(ds.Tables("TABLAS_DETALLE")))
            End If
            If (Not (ds.Tables("LISTA")) Is Nothing) Then
                MyBase.Tables.Add(New LISTADataTable(ds.Tables("LISTA")))
            End If
            Me.DataSetName = ds.DataSetName
            Me.Prefix = ds.Prefix
            Me.Namespace = ds.Namespace
            Me.Locale = ds.Locale
            Me.CaseSensitive = ds.CaseSensitive
            Me.EnforceConstraints = ds.EnforceConstraints
            Me.Merge(ds, false, Global.System.Data.MissingSchemaAction.Add)
            Me.InitVars
        Else
            Me.ReadXmlSchema(New Global.System.Xml.XmlTextReader(New Global.System.IO.StringReader(strSchema)))
        End If
        Me.GetSerializationData(info, context)
        Dim schemaChangedHandler As Global.System.ComponentModel.CollectionChangeEventHandler = AddressOf Me.SchemaChanged
        AddHandler MyBase.Tables.CollectionChanged, schemaChangedHandler
        AddHandler Me.Relations.CollectionChanged, schemaChangedHandler
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property TABLAS_CABECERA() As TABLAS_CABECERADataTable
        Get
            Return Me.tableTABLAS_CABECERA
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property TABLAS_DETALLE() As TABLAS_DETALLEDataTable
        Get
            Return Me.tableTABLAS_DETALLE
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property LISTA() As LISTADataTable
        Get
            Return Me.tableLISTA
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.ComponentModel.BrowsableAttribute(true),  _
     Global.System.ComponentModel.DesignerSerializationVisibilityAttribute(Global.System.ComponentModel.DesignerSerializationVisibility.Visible)>  _
    Public Overrides Property SchemaSerializationMode() As Global.System.Data.SchemaSerializationMode
        Get
            Return Me._schemaSerializationMode
        End Get
        Set
            Me._schemaSerializationMode = value
        End Set
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.ComponentModel.DesignerSerializationVisibilityAttribute(Global.System.ComponentModel.DesignerSerializationVisibility.Hidden)>  _
    Public Shadows ReadOnly Property Tables() As Global.System.Data.DataTableCollection
        Get
            Return MyBase.Tables
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.ComponentModel.DesignerSerializationVisibilityAttribute(Global.System.ComponentModel.DesignerSerializationVisibility.Hidden)>  _
    Public Shadows ReadOnly Property Relations() As Global.System.Data.DataRelationCollection
        Get
            Return MyBase.Relations
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Protected Overrides Sub InitializeDerivedDataSet()
        Me.BeginInit
        Me.InitClass
        Me.EndInit
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Public Overrides Function Clone() As Global.System.Data.DataSet
        Dim cln As dsTablasGenericas = CType(MyBase.Clone,dsTablasGenericas)
        cln.InitVars
        cln.SchemaSerializationMode = Me.SchemaSerializationMode
        Return cln
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Protected Overrides Function ShouldSerializeTables() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Protected Overrides Function ShouldSerializeRelations() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Protected Overrides Sub ReadXmlSerializable(ByVal reader As Global.System.Xml.XmlReader)
        If (Me.DetermineSchemaSerializationMode(reader) = Global.System.Data.SchemaSerializationMode.IncludeSchema) Then
            Me.Reset
            Dim ds As Global.System.Data.DataSet = New Global.System.Data.DataSet
            ds.ReadXml(reader)
            If (Not (ds.Tables("TABLAS_CABECERA")) Is Nothing) Then
                MyBase.Tables.Add(New TABLAS_CABECERADataTable(ds.Tables("TABLAS_CABECERA")))
            End If
            If (Not (ds.Tables("TABLAS_DETALLE")) Is Nothing) Then
                MyBase.Tables.Add(New TABLAS_DETALLEDataTable(ds.Tables("TABLAS_DETALLE")))
            End If
            If (Not (ds.Tables("LISTA")) Is Nothing) Then
                MyBase.Tables.Add(New LISTADataTable(ds.Tables("LISTA")))
            End If
            Me.DataSetName = ds.DataSetName
            Me.Prefix = ds.Prefix
            Me.Namespace = ds.Namespace
            Me.Locale = ds.Locale
            Me.CaseSensitive = ds.CaseSensitive
            Me.EnforceConstraints = ds.EnforceConstraints
            Me.Merge(ds, false, Global.System.Data.MissingSchemaAction.Add)
            Me.InitVars
        Else
            Me.ReadXml(reader)
            Me.InitVars
        End If
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Protected Overrides Function GetSchemaSerializable() As Global.System.Xml.Schema.XmlSchema
        Dim stream As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
        Me.WriteXmlSchema(New Global.System.Xml.XmlTextWriter(stream, Nothing))
        stream.Position = 0
        Return Global.System.Xml.Schema.XmlSchema.Read(New Global.System.Xml.XmlTextReader(stream), Nothing)
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Friend Overloads Sub InitVars()
        Me.InitVars(true)
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Friend Overloads Sub InitVars(ByVal initTable As Boolean)
        Me.tableTABLAS_CABECERA = CType(MyBase.Tables("TABLAS_CABECERA"),TABLAS_CABECERADataTable)
        If (initTable = true) Then
            If (Not (Me.tableTABLAS_CABECERA) Is Nothing) Then
                Me.tableTABLAS_CABECERA.InitVars
            End If
        End If
        Me.tableTABLAS_DETALLE = CType(MyBase.Tables("TABLAS_DETALLE"),TABLAS_DETALLEDataTable)
        If (initTable = true) Then
            If (Not (Me.tableTABLAS_DETALLE) Is Nothing) Then
                Me.tableTABLAS_DETALLE.InitVars
            End If
        End If
        Me.tableLISTA = CType(MyBase.Tables("LISTA"),LISTADataTable)
        If (initTable = true) Then
            If (Not (Me.tableLISTA) Is Nothing) Then
                Me.tableLISTA.InitVars
            End If
        End If
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Private Sub InitClass()
        Me.DataSetName = "dsTablasGenericas"
        Me.Prefix = ""
        Me.Namespace = "http://tempuri.org/dsTablasGenericas.xsd"
        Me.EnforceConstraints = true
        Me.SchemaSerializationMode = Global.System.Data.SchemaSerializationMode.IncludeSchema
        Me.tableTABLAS_CABECERA = New TABLAS_CABECERADataTable
        MyBase.Tables.Add(Me.tableTABLAS_CABECERA)
        Me.tableTABLAS_DETALLE = New TABLAS_DETALLEDataTable
        MyBase.Tables.Add(Me.tableTABLAS_DETALLE)
        Me.tableLISTA = New LISTADataTable
        MyBase.Tables.Add(Me.tableLISTA)
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Private Function ShouldSerializeTABLAS_CABECERA() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Private Function ShouldSerializeTABLAS_DETALLE() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Private Function ShouldSerializeLISTA() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Private Sub SchemaChanged(ByVal sender As Object, ByVal e As Global.System.ComponentModel.CollectionChangeEventArgs)
        If (e.Action = Global.System.ComponentModel.CollectionChangeAction.Remove) Then
            Me.InitVars
        End If
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Public Shared Function GetTypedDataSetSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
        Dim ds As dsTablasGenericas = New dsTablasGenericas
        Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType
        Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence
        Dim any As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
        any.Namespace = ds.Namespace
        sequence.Items.Add(any)
        type.Particle = sequence
        Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
        If xs.Contains(dsSchema.TargetNamespace) Then
            Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
            Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
            Try 
                Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                dsSchema.Write(s1)
                Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                Do While schemas.MoveNext
                    schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                    s2.SetLength(0)
                    schema.Write(s2)
                    If (s1.Length = s2.Length) Then
                        s1.Position = 0
                        s2.Position = 0
                        
                        Do While ((s1.Position <> s1.Length)  _
                                    AndAlso (s1.ReadByte = s2.ReadByte))
                            
                            
                        Loop
                        If (s1.Position = s1.Length) Then
                            Return type
                        End If
                    End If
                    
                Loop
            Finally
                If (Not (s1) Is Nothing) Then
                    s1.Close
                End If
                If (Not (s2) Is Nothing) Then
                    s2.Close
                End If
            End Try
        End If
        xs.Add(dsSchema)
        Return type
    End Function
    
    Public Delegate Sub TABLAS_CABECERARowChangeEventHandler(ByVal sender As Object, ByVal e As TABLAS_CABECERARowChangeEvent)
    
    Public Delegate Sub TABLAS_DETALLERowChangeEventHandler(ByVal sender As Object, ByVal e As TABLAS_DETALLERowChangeEvent)
    
    Public Delegate Sub LISTARowChangeEventHandler(ByVal sender As Object, ByVal e As LISTARowChangeEvent)
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0"),  _
     Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class TABLAS_CABECERADataTable
        Inherits Global.System.Data.TypedTableBase(Of TABLAS_CABECERARow)
        
        Private columnEMPRESA As Global.System.Data.DataColumn
        
        Private columnCODIGO_TABLA As Global.System.Data.DataColumn
        
        Private columnNOMBRE_CORTO As Global.System.Data.DataColumn
        
        Private columnNOMBRE_LARGO As Global.System.Data.DataColumn
        
        Private columnNECESIDAD As Global.System.Data.DataColumn
        
        Private columnTTEXTO_01 As Global.System.Data.DataColumn
        
        Private columnTTEXTO_02 As Global.System.Data.DataColumn
        
        Private columnTTEXTO_03 As Global.System.Data.DataColumn
        
        Private columnTTEXTO_04 As Global.System.Data.DataColumn
        
        Private columnTTEXTO_05 As Global.System.Data.DataColumn
        
        Private columnTVALOR_01 As Global.System.Data.DataColumn
        
        Private columnTVALOR_02 As Global.System.Data.DataColumn
        
        Private columnTVALOR_03 As Global.System.Data.DataColumn
        
        Private columnTVALOR_04 As Global.System.Data.DataColumn
        
        Private columnTVALOR_05 As Global.System.Data.DataColumn
        
        Private columnTLOGICO_01 As Global.System.Data.DataColumn
        
        Private columnTLOGICO_02 As Global.System.Data.DataColumn
        
        Private columnTLOGICO_03 As Global.System.Data.DataColumn
        
        Private columnTLOGICO_04 As Global.System.Data.DataColumn
        
        Private columnTLOGICO_05 As Global.System.Data.DataColumn
        
        Private columnESTADO As Global.System.Data.DataColumn
        
        Private columnUSUARIO_REGISTRO As Global.System.Data.DataColumn
        
        Private columnFECHA_REGISTRO As Global.System.Data.DataColumn
        
        Private columnUSUARIO_MODIFICA As Global.System.Data.DataColumn
        
        Private columnFECHA_MODIFICA As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "TABLAS_CABECERA"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property EMPRESAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnEMPRESA
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property CODIGO_TABLAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCODIGO_TABLA
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property NOMBRE_CORTOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnNOMBRE_CORTO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property NOMBRE_LARGOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnNOMBRE_LARGO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property NECESIDADColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnNECESIDAD
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property TTEXTO_01Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnTTEXTO_01
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property TTEXTO_02Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnTTEXTO_02
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property TTEXTO_03Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnTTEXTO_03
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property TTEXTO_04Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnTTEXTO_04
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property TTEXTO_05Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnTTEXTO_05
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property TVALOR_01Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnTVALOR_01
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property TVALOR_02Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnTVALOR_02
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property TVALOR_03Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnTVALOR_03
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property TVALOR_04Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnTVALOR_04
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property TVALOR_05Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnTVALOR_05
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property TLOGICO_01Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnTLOGICO_01
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property TLOGICO_02Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnTLOGICO_02
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property TLOGICO_03Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnTLOGICO_03
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property TLOGICO_04Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnTLOGICO_04
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property TLOGICO_05Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnTLOGICO_05
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property ESTADOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnESTADO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property USUARIO_REGISTROColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnUSUARIO_REGISTRO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property FECHA_REGISTROColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnFECHA_REGISTRO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property USUARIO_MODIFICAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnUSUARIO_MODIFICA
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property FECHA_MODIFICAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnFECHA_MODIFICA
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As TABLAS_CABECERARow
            Get
                Return CType(Me.Rows(index),TABLAS_CABECERARow)
            End Get
        End Property
        
        Public Event TABLAS_CABECERARowChanging As TABLAS_CABECERARowChangeEventHandler
        
        Public Event TABLAS_CABECERARowChanged As TABLAS_CABECERARowChangeEventHandler
        
        Public Event TABLAS_CABECERARowDeleting As TABLAS_CABECERARowChangeEventHandler
        
        Public Event TABLAS_CABECERARowDeleted As TABLAS_CABECERARowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Sub AddTABLAS_CABECERARow(ByVal row As TABLAS_CABECERARow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Function AddTABLAS_CABECERARow( _
                    ByVal EMPRESA As String,  _
                    ByVal CODIGO_TABLA As String,  _
                    ByVal NOMBRE_CORTO As String,  _
                    ByVal NOMBRE_LARGO As String,  _
                    ByVal NECESIDAD As String,  _
                    ByVal TTEXTO_01 As String,  _
                    ByVal TTEXTO_02 As String,  _
                    ByVal TTEXTO_03 As String,  _
                    ByVal TTEXTO_04 As String,  _
                    ByVal TTEXTO_05 As String,  _
                    ByVal TVALOR_01 As String,  _
                    ByVal TVALOR_02 As String,  _
                    ByVal TVALOR_03 As String,  _
                    ByVal TVALOR_04 As String,  _
                    ByVal TVALOR_05 As String,  _
                    ByVal TLOGICO_01 As String,  _
                    ByVal TLOGICO_02 As String,  _
                    ByVal TLOGICO_03 As String,  _
                    ByVal TLOGICO_04 As String,  _
                    ByVal TLOGICO_05 As String,  _
                    ByVal ESTADO As String,  _
                    ByVal USUARIO_REGISTRO As String,  _
                    ByVal FECHA_REGISTRO As Date,  _
                    ByVal USUARIO_MODIFICA As String,  _
                    ByVal FECHA_MODIFICA As Date) As TABLAS_CABECERARow
            Dim rowTABLAS_CABECERARow As TABLAS_CABECERARow = CType(Me.NewRow,TABLAS_CABECERARow)
            Dim columnValuesArray() As Object = New Object() {EMPRESA, CODIGO_TABLA, NOMBRE_CORTO, NOMBRE_LARGO, NECESIDAD, TTEXTO_01, TTEXTO_02, TTEXTO_03, TTEXTO_04, TTEXTO_05, TVALOR_01, TVALOR_02, TVALOR_03, TVALOR_04, TVALOR_05, TLOGICO_01, TLOGICO_02, TLOGICO_03, TLOGICO_04, TLOGICO_05, ESTADO, USUARIO_REGISTRO, FECHA_REGISTRO, USUARIO_MODIFICA, FECHA_MODIFICA}
            rowTABLAS_CABECERARow.ItemArray = columnValuesArray
            Me.Rows.Add(rowTABLAS_CABECERARow)
            Return rowTABLAS_CABECERARow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function FindByEMPRESACODIGO_TABLA(ByVal EMPRESA As String, ByVal CODIGO_TABLA As String) As TABLAS_CABECERARow
            Return CType(Me.Rows.Find(New Object() {EMPRESA, CODIGO_TABLA}),TABLAS_CABECERARow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As TABLAS_CABECERADataTable = CType(MyBase.Clone,TABLAS_CABECERADataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New TABLAS_CABECERADataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub InitVars()
            Me.columnEMPRESA = MyBase.Columns("EMPRESA")
            Me.columnCODIGO_TABLA = MyBase.Columns("CODIGO_TABLA")
            Me.columnNOMBRE_CORTO = MyBase.Columns("NOMBRE_CORTO")
            Me.columnNOMBRE_LARGO = MyBase.Columns("NOMBRE_LARGO")
            Me.columnNECESIDAD = MyBase.Columns("NECESIDAD")
            Me.columnTTEXTO_01 = MyBase.Columns("TTEXTO_01")
            Me.columnTTEXTO_02 = MyBase.Columns("TTEXTO_02")
            Me.columnTTEXTO_03 = MyBase.Columns("TTEXTO_03")
            Me.columnTTEXTO_04 = MyBase.Columns("TTEXTO_04")
            Me.columnTTEXTO_05 = MyBase.Columns("TTEXTO_05")
            Me.columnTVALOR_01 = MyBase.Columns("TVALOR_01")
            Me.columnTVALOR_02 = MyBase.Columns("TVALOR_02")
            Me.columnTVALOR_03 = MyBase.Columns("TVALOR_03")
            Me.columnTVALOR_04 = MyBase.Columns("TVALOR_04")
            Me.columnTVALOR_05 = MyBase.Columns("TVALOR_05")
            Me.columnTLOGICO_01 = MyBase.Columns("TLOGICO_01")
            Me.columnTLOGICO_02 = MyBase.Columns("TLOGICO_02")
            Me.columnTLOGICO_03 = MyBase.Columns("TLOGICO_03")
            Me.columnTLOGICO_04 = MyBase.Columns("TLOGICO_04")
            Me.columnTLOGICO_05 = MyBase.Columns("TLOGICO_05")
            Me.columnESTADO = MyBase.Columns("ESTADO")
            Me.columnUSUARIO_REGISTRO = MyBase.Columns("USUARIO_REGISTRO")
            Me.columnFECHA_REGISTRO = MyBase.Columns("FECHA_REGISTRO")
            Me.columnUSUARIO_MODIFICA = MyBase.Columns("USUARIO_MODIFICA")
            Me.columnFECHA_MODIFICA = MyBase.Columns("FECHA_MODIFICA")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitClass()
            Me.columnEMPRESA = New Global.System.Data.DataColumn("EMPRESA", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnEMPRESA)
            Me.columnCODIGO_TABLA = New Global.System.Data.DataColumn("CODIGO_TABLA", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCODIGO_TABLA)
            Me.columnNOMBRE_CORTO = New Global.System.Data.DataColumn("NOMBRE_CORTO", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnNOMBRE_CORTO)
            Me.columnNOMBRE_LARGO = New Global.System.Data.DataColumn("NOMBRE_LARGO", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnNOMBRE_LARGO)
            Me.columnNECESIDAD = New Global.System.Data.DataColumn("NECESIDAD", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnNECESIDAD)
            Me.columnTTEXTO_01 = New Global.System.Data.DataColumn("TTEXTO_01", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTTEXTO_01)
            Me.columnTTEXTO_02 = New Global.System.Data.DataColumn("TTEXTO_02", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTTEXTO_02)
            Me.columnTTEXTO_03 = New Global.System.Data.DataColumn("TTEXTO_03", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTTEXTO_03)
            Me.columnTTEXTO_04 = New Global.System.Data.DataColumn("TTEXTO_04", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTTEXTO_04)
            Me.columnTTEXTO_05 = New Global.System.Data.DataColumn("TTEXTO_05", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTTEXTO_05)
            Me.columnTVALOR_01 = New Global.System.Data.DataColumn("TVALOR_01", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTVALOR_01)
            Me.columnTVALOR_02 = New Global.System.Data.DataColumn("TVALOR_02", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTVALOR_02)
            Me.columnTVALOR_03 = New Global.System.Data.DataColumn("TVALOR_03", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTVALOR_03)
            Me.columnTVALOR_04 = New Global.System.Data.DataColumn("TVALOR_04", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTVALOR_04)
            Me.columnTVALOR_05 = New Global.System.Data.DataColumn("TVALOR_05", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTVALOR_05)
            Me.columnTLOGICO_01 = New Global.System.Data.DataColumn("TLOGICO_01", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTLOGICO_01)
            Me.columnTLOGICO_02 = New Global.System.Data.DataColumn("TLOGICO_02", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTLOGICO_02)
            Me.columnTLOGICO_03 = New Global.System.Data.DataColumn("TLOGICO_03", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTLOGICO_03)
            Me.columnTLOGICO_04 = New Global.System.Data.DataColumn("TLOGICO_04", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTLOGICO_04)
            Me.columnTLOGICO_05 = New Global.System.Data.DataColumn("TLOGICO_05", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTLOGICO_05)
            Me.columnESTADO = New Global.System.Data.DataColumn("ESTADO", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnESTADO)
            Me.columnUSUARIO_REGISTRO = New Global.System.Data.DataColumn("USUARIO_REGISTRO", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnUSUARIO_REGISTRO)
            Me.columnFECHA_REGISTRO = New Global.System.Data.DataColumn("FECHA_REGISTRO", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFECHA_REGISTRO)
            Me.columnUSUARIO_MODIFICA = New Global.System.Data.DataColumn("USUARIO_MODIFICA", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnUSUARIO_MODIFICA)
            Me.columnFECHA_MODIFICA = New Global.System.Data.DataColumn("FECHA_MODIFICA", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFECHA_MODIFICA)
            Me.Constraints.Add(New Global.System.Data.UniqueConstraint("Constraint1", New Global.System.Data.DataColumn() {Me.columnEMPRESA, Me.columnCODIGO_TABLA}, true))
            Me.columnEMPRESA.AllowDBNull = false
            Me.columnEMPRESA.MaxLength = 3
            Me.columnCODIGO_TABLA.AllowDBNull = false
            Me.columnCODIGO_TABLA.MaxLength = 25
            Me.columnNOMBRE_CORTO.AllowDBNull = false
            Me.columnNOMBRE_CORTO.MaxLength = 50
            Me.columnNOMBRE_LARGO.AllowDBNull = false
            Me.columnNOMBRE_LARGO.MaxLength = 250
            Me.columnNECESIDAD.AllowDBNull = false
            Me.columnNECESIDAD.MaxLength = 20
            Me.columnTTEXTO_01.AllowDBNull = false
            Me.columnTTEXTO_01.MaxLength = 25
            Me.columnTTEXTO_02.AllowDBNull = false
            Me.columnTTEXTO_02.MaxLength = 25
            Me.columnTTEXTO_03.AllowDBNull = false
            Me.columnTTEXTO_03.MaxLength = 25
            Me.columnTTEXTO_04.AllowDBNull = false
            Me.columnTTEXTO_04.MaxLength = 25
            Me.columnTTEXTO_05.AllowDBNull = false
            Me.columnTTEXTO_05.MaxLength = 25
            Me.columnTVALOR_01.AllowDBNull = false
            Me.columnTVALOR_01.MaxLength = 25
            Me.columnTVALOR_02.AllowDBNull = false
            Me.columnTVALOR_02.MaxLength = 25
            Me.columnTVALOR_03.AllowDBNull = false
            Me.columnTVALOR_03.MaxLength = 25
            Me.columnTVALOR_04.AllowDBNull = false
            Me.columnTVALOR_04.MaxLength = 25
            Me.columnTVALOR_05.AllowDBNull = false
            Me.columnTVALOR_05.MaxLength = 25
            Me.columnTLOGICO_01.AllowDBNull = false
            Me.columnTLOGICO_01.MaxLength = 25
            Me.columnTLOGICO_02.AllowDBNull = false
            Me.columnTLOGICO_02.MaxLength = 25
            Me.columnTLOGICO_03.AllowDBNull = false
            Me.columnTLOGICO_03.MaxLength = 25
            Me.columnTLOGICO_04.AllowDBNull = false
            Me.columnTLOGICO_04.MaxLength = 25
            Me.columnTLOGICO_05.AllowDBNull = false
            Me.columnTLOGICO_05.MaxLength = 25
            Me.columnESTADO.AllowDBNull = false
            Me.columnESTADO.MaxLength = 3
            Me.columnUSUARIO_REGISTRO.AllowDBNull = false
            Me.columnUSUARIO_REGISTRO.MaxLength = 12
            Me.columnFECHA_REGISTRO.AllowDBNull = false
            Me.columnUSUARIO_MODIFICA.MaxLength = 12
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function NewTABLAS_CABECERARow() As TABLAS_CABECERARow
            Return CType(Me.NewRow,TABLAS_CABECERARow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New TABLAS_CABECERARow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(TABLAS_CABECERARow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.TABLAS_CABECERARowChangedEvent) Is Nothing) Then
                RaiseEvent TABLAS_CABECERARowChanged(Me, New TABLAS_CABECERARowChangeEvent(CType(e.Row,TABLAS_CABECERARow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.TABLAS_CABECERARowChangingEvent) Is Nothing) Then
                RaiseEvent TABLAS_CABECERARowChanging(Me, New TABLAS_CABECERARowChangeEvent(CType(e.Row,TABLAS_CABECERARow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.TABLAS_CABECERARowDeletedEvent) Is Nothing) Then
                RaiseEvent TABLAS_CABECERARowDeleted(Me, New TABLAS_CABECERARowChangeEvent(CType(e.Row,TABLAS_CABECERARow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.TABLAS_CABECERARowDeletingEvent) Is Nothing) Then
                RaiseEvent TABLAS_CABECERARowDeleting(Me, New TABLAS_CABECERARowChangeEvent(CType(e.Row,TABLAS_CABECERARow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub RemoveTABLAS_CABECERARow(ByVal row As TABLAS_CABECERARow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence
            Dim ds As dsTablasGenericas = New dsTablasGenericas
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "TABLAS_CABECERADataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0"),  _
     Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class TABLAS_DETALLEDataTable
        Inherits Global.System.Data.TypedTableBase(Of TABLAS_DETALLERow)
        
        Private columnEMPRESA As Global.System.Data.DataColumn
        
        Private columnCODIGO_TABLA As Global.System.Data.DataColumn
        
        Private columnCODIGO_ITEM As Global.System.Data.DataColumn
        
        Private columnNOMBRE_CORTO As Global.System.Data.DataColumn
        
        Private columnNOMBRE_LARGO As Global.System.Data.DataColumn
        
        Private columnTEXTO_01 As Global.System.Data.DataColumn
        
        Private columnTEXTO_02 As Global.System.Data.DataColumn
        
        Private columnTEXTO_03 As Global.System.Data.DataColumn
        
        Private columnTEXTO_04 As Global.System.Data.DataColumn
        
        Private columnTEXTO_05 As Global.System.Data.DataColumn
        
        Private columnVALOR_01 As Global.System.Data.DataColumn
        
        Private columnVALOR_02 As Global.System.Data.DataColumn
        
        Private columnVALOR_03 As Global.System.Data.DataColumn
        
        Private columnVALOR_04 As Global.System.Data.DataColumn
        
        Private columnVALOR_05 As Global.System.Data.DataColumn
        
        Private columnLOGICO_01 As Global.System.Data.DataColumn
        
        Private columnLOGICO_02 As Global.System.Data.DataColumn
        
        Private columnLOGICO_03 As Global.System.Data.DataColumn
        
        Private columnLOGICO_04 As Global.System.Data.DataColumn
        
        Private columnLOGICO_05 As Global.System.Data.DataColumn
        
        Private columnESTADO As Global.System.Data.DataColumn
        
        Private columnPERMITE_ELIMINAR As Global.System.Data.DataColumn
        
        Private columnVALOR_DEFECTO As Global.System.Data.DataColumn
        
        Private columnUSUARIO_REGISTRO As Global.System.Data.DataColumn
        
        Private columnFECHA_REGISTRO As Global.System.Data.DataColumn
        
        Private columnUSUARIO_MODIFICA As Global.System.Data.DataColumn
        
        Private columnFECHA_MODIFICA As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "TABLAS_DETALLE"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property EMPRESAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnEMPRESA
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property CODIGO_TABLAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCODIGO_TABLA
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property CODIGO_ITEMColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCODIGO_ITEM
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property NOMBRE_CORTOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnNOMBRE_CORTO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property NOMBRE_LARGOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnNOMBRE_LARGO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property TEXTO_01Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnTEXTO_01
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property TEXTO_02Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnTEXTO_02
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property TEXTO_03Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnTEXTO_03
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property TEXTO_04Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnTEXTO_04
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property TEXTO_05Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnTEXTO_05
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property VALOR_01Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnVALOR_01
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property VALOR_02Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnVALOR_02
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property VALOR_03Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnVALOR_03
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property VALOR_04Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnVALOR_04
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property VALOR_05Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnVALOR_05
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property LOGICO_01Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnLOGICO_01
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property LOGICO_02Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnLOGICO_02
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property LOGICO_03Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnLOGICO_03
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property LOGICO_04Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnLOGICO_04
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property LOGICO_05Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnLOGICO_05
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property ESTADOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnESTADO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property PERMITE_ELIMINARColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPERMITE_ELIMINAR
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property VALOR_DEFECTOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnVALOR_DEFECTO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property USUARIO_REGISTROColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnUSUARIO_REGISTRO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property FECHA_REGISTROColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnFECHA_REGISTRO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property USUARIO_MODIFICAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnUSUARIO_MODIFICA
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property FECHA_MODIFICAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnFECHA_MODIFICA
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As TABLAS_DETALLERow
            Get
                Return CType(Me.Rows(index),TABLAS_DETALLERow)
            End Get
        End Property
        
        Public Event TABLAS_DETALLERowChanging As TABLAS_DETALLERowChangeEventHandler
        
        Public Event TABLAS_DETALLERowChanged As TABLAS_DETALLERowChangeEventHandler
        
        Public Event TABLAS_DETALLERowDeleting As TABLAS_DETALLERowChangeEventHandler
        
        Public Event TABLAS_DETALLERowDeleted As TABLAS_DETALLERowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Sub AddTABLAS_DETALLERow(ByVal row As TABLAS_DETALLERow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Function AddTABLAS_DETALLERow( _
                    ByVal EMPRESA As String,  _
                    ByVal CODIGO_TABLA As String,  _
                    ByVal CODIGO_ITEM As String,  _
                    ByVal NOMBRE_CORTO As String,  _
                    ByVal NOMBRE_LARGO As String,  _
                    ByVal TEXTO_01 As String,  _
                    ByVal TEXTO_02 As String,  _
                    ByVal TEXTO_03 As String,  _
                    ByVal TEXTO_04 As String,  _
                    ByVal TEXTO_05 As String,  _
                    ByVal VALOR_01 As Decimal,  _
                    ByVal VALOR_02 As Decimal,  _
                    ByVal VALOR_03 As Decimal,  _
                    ByVal VALOR_04 As Decimal,  _
                    ByVal VALOR_05 As Decimal,  _
                    ByVal LOGICO_01 As Decimal,  _
                    ByVal LOGICO_02 As Decimal,  _
                    ByVal LOGICO_03 As Decimal,  _
                    ByVal LOGICO_04 As Decimal,  _
                    ByVal LOGICO_05 As Decimal,  _
                    ByVal ESTADO As String,  _
                    ByVal PERMITE_ELIMINAR As String,  _
                    ByVal VALOR_DEFECTO As String,  _
                    ByVal USUARIO_REGISTRO As String,  _
                    ByVal FECHA_REGISTRO As Date,  _
                    ByVal USUARIO_MODIFICA As String,  _
                    ByVal FECHA_MODIFICA As Date) As TABLAS_DETALLERow
            Dim rowTABLAS_DETALLERow As TABLAS_DETALLERow = CType(Me.NewRow,TABLAS_DETALLERow)
            Dim columnValuesArray() As Object = New Object() {EMPRESA, CODIGO_TABLA, CODIGO_ITEM, NOMBRE_CORTO, NOMBRE_LARGO, TEXTO_01, TEXTO_02, TEXTO_03, TEXTO_04, TEXTO_05, VALOR_01, VALOR_02, VALOR_03, VALOR_04, VALOR_05, LOGICO_01, LOGICO_02, LOGICO_03, LOGICO_04, LOGICO_05, ESTADO, PERMITE_ELIMINAR, VALOR_DEFECTO, USUARIO_REGISTRO, FECHA_REGISTRO, USUARIO_MODIFICA, FECHA_MODIFICA}
            rowTABLAS_DETALLERow.ItemArray = columnValuesArray
            Me.Rows.Add(rowTABLAS_DETALLERow)
            Return rowTABLAS_DETALLERow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function FindByEMPRESACODIGO_TABLACODIGO_ITEM(ByVal EMPRESA As String, ByVal CODIGO_TABLA As String, ByVal CODIGO_ITEM As String) As TABLAS_DETALLERow
            Return CType(Me.Rows.Find(New Object() {EMPRESA, CODIGO_TABLA, CODIGO_ITEM}),TABLAS_DETALLERow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As TABLAS_DETALLEDataTable = CType(MyBase.Clone,TABLAS_DETALLEDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New TABLAS_DETALLEDataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub InitVars()
            Me.columnEMPRESA = MyBase.Columns("EMPRESA")
            Me.columnCODIGO_TABLA = MyBase.Columns("CODIGO_TABLA")
            Me.columnCODIGO_ITEM = MyBase.Columns("CODIGO_ITEM")
            Me.columnNOMBRE_CORTO = MyBase.Columns("NOMBRE_CORTO")
            Me.columnNOMBRE_LARGO = MyBase.Columns("NOMBRE_LARGO")
            Me.columnTEXTO_01 = MyBase.Columns("TEXTO_01")
            Me.columnTEXTO_02 = MyBase.Columns("TEXTO_02")
            Me.columnTEXTO_03 = MyBase.Columns("TEXTO_03")
            Me.columnTEXTO_04 = MyBase.Columns("TEXTO_04")
            Me.columnTEXTO_05 = MyBase.Columns("TEXTO_05")
            Me.columnVALOR_01 = MyBase.Columns("VALOR_01")
            Me.columnVALOR_02 = MyBase.Columns("VALOR_02")
            Me.columnVALOR_03 = MyBase.Columns("VALOR_03")
            Me.columnVALOR_04 = MyBase.Columns("VALOR_04")
            Me.columnVALOR_05 = MyBase.Columns("VALOR_05")
            Me.columnLOGICO_01 = MyBase.Columns("LOGICO_01")
            Me.columnLOGICO_02 = MyBase.Columns("LOGICO_02")
            Me.columnLOGICO_03 = MyBase.Columns("LOGICO_03")
            Me.columnLOGICO_04 = MyBase.Columns("LOGICO_04")
            Me.columnLOGICO_05 = MyBase.Columns("LOGICO_05")
            Me.columnESTADO = MyBase.Columns("ESTADO")
            Me.columnPERMITE_ELIMINAR = MyBase.Columns("PERMITE_ELIMINAR")
            Me.columnVALOR_DEFECTO = MyBase.Columns("VALOR_DEFECTO")
            Me.columnUSUARIO_REGISTRO = MyBase.Columns("USUARIO_REGISTRO")
            Me.columnFECHA_REGISTRO = MyBase.Columns("FECHA_REGISTRO")
            Me.columnUSUARIO_MODIFICA = MyBase.Columns("USUARIO_MODIFICA")
            Me.columnFECHA_MODIFICA = MyBase.Columns("FECHA_MODIFICA")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitClass()
            Me.columnEMPRESA = New Global.System.Data.DataColumn("EMPRESA", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnEMPRESA)
            Me.columnCODIGO_TABLA = New Global.System.Data.DataColumn("CODIGO_TABLA", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCODIGO_TABLA)
            Me.columnCODIGO_ITEM = New Global.System.Data.DataColumn("CODIGO_ITEM", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCODIGO_ITEM)
            Me.columnNOMBRE_CORTO = New Global.System.Data.DataColumn("NOMBRE_CORTO", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnNOMBRE_CORTO)
            Me.columnNOMBRE_LARGO = New Global.System.Data.DataColumn("NOMBRE_LARGO", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnNOMBRE_LARGO)
            Me.columnTEXTO_01 = New Global.System.Data.DataColumn("TEXTO_01", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTEXTO_01)
            Me.columnTEXTO_02 = New Global.System.Data.DataColumn("TEXTO_02", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTEXTO_02)
            Me.columnTEXTO_03 = New Global.System.Data.DataColumn("TEXTO_03", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTEXTO_03)
            Me.columnTEXTO_04 = New Global.System.Data.DataColumn("TEXTO_04", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTEXTO_04)
            Me.columnTEXTO_05 = New Global.System.Data.DataColumn("TEXTO_05", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTEXTO_05)
            Me.columnVALOR_01 = New Global.System.Data.DataColumn("VALOR_01", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnVALOR_01)
            Me.columnVALOR_02 = New Global.System.Data.DataColumn("VALOR_02", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnVALOR_02)
            Me.columnVALOR_03 = New Global.System.Data.DataColumn("VALOR_03", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnVALOR_03)
            Me.columnVALOR_04 = New Global.System.Data.DataColumn("VALOR_04", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnVALOR_04)
            Me.columnVALOR_05 = New Global.System.Data.DataColumn("VALOR_05", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnVALOR_05)
            Me.columnLOGICO_01 = New Global.System.Data.DataColumn("LOGICO_01", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnLOGICO_01)
            Me.columnLOGICO_02 = New Global.System.Data.DataColumn("LOGICO_02", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnLOGICO_02)
            Me.columnLOGICO_03 = New Global.System.Data.DataColumn("LOGICO_03", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnLOGICO_03)
            Me.columnLOGICO_04 = New Global.System.Data.DataColumn("LOGICO_04", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnLOGICO_04)
            Me.columnLOGICO_05 = New Global.System.Data.DataColumn("LOGICO_05", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnLOGICO_05)
            Me.columnESTADO = New Global.System.Data.DataColumn("ESTADO", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnESTADO)
            Me.columnPERMITE_ELIMINAR = New Global.System.Data.DataColumn("PERMITE_ELIMINAR", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPERMITE_ELIMINAR)
            Me.columnVALOR_DEFECTO = New Global.System.Data.DataColumn("VALOR_DEFECTO", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnVALOR_DEFECTO)
            Me.columnUSUARIO_REGISTRO = New Global.System.Data.DataColumn("USUARIO_REGISTRO", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnUSUARIO_REGISTRO)
            Me.columnFECHA_REGISTRO = New Global.System.Data.DataColumn("FECHA_REGISTRO", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFECHA_REGISTRO)
            Me.columnUSUARIO_MODIFICA = New Global.System.Data.DataColumn("USUARIO_MODIFICA", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnUSUARIO_MODIFICA)
            Me.columnFECHA_MODIFICA = New Global.System.Data.DataColumn("FECHA_MODIFICA", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFECHA_MODIFICA)
            Me.Constraints.Add(New Global.System.Data.UniqueConstraint("Constraint1", New Global.System.Data.DataColumn() {Me.columnEMPRESA, Me.columnCODIGO_TABLA, Me.columnCODIGO_ITEM}, true))
            Me.columnEMPRESA.AllowDBNull = false
            Me.columnEMPRESA.MaxLength = 3
            Me.columnCODIGO_TABLA.AllowDBNull = false
            Me.columnCODIGO_TABLA.MaxLength = 25
            Me.columnCODIGO_ITEM.AllowDBNull = false
            Me.columnCODIGO_ITEM.MaxLength = 20
            Me.columnNOMBRE_CORTO.AllowDBNull = false
            Me.columnNOMBRE_CORTO.MaxLength = 50
            Me.columnNOMBRE_LARGO.AllowDBNull = false
            Me.columnNOMBRE_LARGO.MaxLength = 250
            Me.columnTEXTO_01.AllowDBNull = false
            Me.columnTEXTO_01.MaxLength = 50
            Me.columnTEXTO_02.AllowDBNull = false
            Me.columnTEXTO_02.MaxLength = 50
            Me.columnTEXTO_03.AllowDBNull = false
            Me.columnTEXTO_03.MaxLength = 50
            Me.columnTEXTO_04.AllowDBNull = false
            Me.columnTEXTO_04.MaxLength = 50
            Me.columnTEXTO_05.AllowDBNull = false
            Me.columnTEXTO_05.MaxLength = 50
            Me.columnVALOR_01.AllowDBNull = false
            Me.columnVALOR_02.AllowDBNull = false
            Me.columnVALOR_03.AllowDBNull = false
            Me.columnVALOR_04.AllowDBNull = false
            Me.columnVALOR_05.AllowDBNull = false
            Me.columnLOGICO_01.AllowDBNull = false
            Me.columnLOGICO_02.AllowDBNull = false
            Me.columnLOGICO_03.AllowDBNull = false
            Me.columnLOGICO_04.AllowDBNull = false
            Me.columnLOGICO_05.AllowDBNull = false
            Me.columnESTADO.AllowDBNull = false
            Me.columnESTADO.MaxLength = 3
            Me.columnPERMITE_ELIMINAR.AllowDBNull = false
            Me.columnPERMITE_ELIMINAR.MaxLength = 2
            Me.columnVALOR_DEFECTO.AllowDBNull = false
            Me.columnVALOR_DEFECTO.MaxLength = 2
            Me.columnUSUARIO_REGISTRO.AllowDBNull = false
            Me.columnUSUARIO_REGISTRO.MaxLength = 12
            Me.columnFECHA_REGISTRO.AllowDBNull = false
            Me.columnUSUARIO_MODIFICA.MaxLength = 12
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function NewTABLAS_DETALLERow() As TABLAS_DETALLERow
            Return CType(Me.NewRow,TABLAS_DETALLERow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New TABLAS_DETALLERow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(TABLAS_DETALLERow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.TABLAS_DETALLERowChangedEvent) Is Nothing) Then
                RaiseEvent TABLAS_DETALLERowChanged(Me, New TABLAS_DETALLERowChangeEvent(CType(e.Row,TABLAS_DETALLERow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.TABLAS_DETALLERowChangingEvent) Is Nothing) Then
                RaiseEvent TABLAS_DETALLERowChanging(Me, New TABLAS_DETALLERowChangeEvent(CType(e.Row,TABLAS_DETALLERow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.TABLAS_DETALLERowDeletedEvent) Is Nothing) Then
                RaiseEvent TABLAS_DETALLERowDeleted(Me, New TABLAS_DETALLERowChangeEvent(CType(e.Row,TABLAS_DETALLERow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.TABLAS_DETALLERowDeletingEvent) Is Nothing) Then
                RaiseEvent TABLAS_DETALLERowDeleting(Me, New TABLAS_DETALLERowChangeEvent(CType(e.Row,TABLAS_DETALLERow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub RemoveTABLAS_DETALLERow(ByVal row As TABLAS_DETALLERow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence
            Dim ds As dsTablasGenericas = New dsTablasGenericas
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "TABLAS_DETALLEDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0"),  _
     Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class LISTADataTable
        Inherits Global.System.Data.TypedTableBase(Of LISTARow)
        
        Private columnTABLA As Global.System.Data.DataColumn
        
        Private columnCODIGO As Global.System.Data.DataColumn
        
        Private columnDESCRIPCION As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "LISTA"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property TABLAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTABLA
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property CODIGOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCODIGO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property DESCRIPCIONColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDESCRIPCION
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As LISTARow
            Get
                Return CType(Me.Rows(index),LISTARow)
            End Get
        End Property
        
        Public Event LISTARowChanging As LISTARowChangeEventHandler
        
        Public Event LISTARowChanged As LISTARowChangeEventHandler
        
        Public Event LISTARowDeleting As LISTARowChangeEventHandler
        
        Public Event LISTARowDeleted As LISTARowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Sub AddLISTARow(ByVal row As LISTARow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Function AddLISTARow(ByVal TABLA As String, ByVal CODIGO As String, ByVal DESCRIPCION As String) As LISTARow
            Dim rowLISTARow As LISTARow = CType(Me.NewRow,LISTARow)
            Dim columnValuesArray() As Object = New Object() {TABLA, CODIGO, DESCRIPCION}
            rowLISTARow.ItemArray = columnValuesArray
            Me.Rows.Add(rowLISTARow)
            Return rowLISTARow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As LISTADataTable = CType(MyBase.Clone,LISTADataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New LISTADataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub InitVars()
            Me.columnTABLA = MyBase.Columns("TABLA")
            Me.columnCODIGO = MyBase.Columns("CODIGO")
            Me.columnDESCRIPCION = MyBase.Columns("DESCRIPCION")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitClass()
            Me.columnTABLA = New Global.System.Data.DataColumn("TABLA", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTABLA)
            Me.columnCODIGO = New Global.System.Data.DataColumn("CODIGO", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCODIGO)
            Me.columnDESCRIPCION = New Global.System.Data.DataColumn("DESCRIPCION", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDESCRIPCION)
            Me.columnTABLA.AllowDBNull = false
            Me.columnTABLA.MaxLength = 25
            Me.columnCODIGO.AllowDBNull = false
            Me.columnCODIGO.MaxLength = 20
            Me.columnDESCRIPCION.AllowDBNull = false
            Me.columnDESCRIPCION.MaxLength = 250
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function NewLISTARow() As LISTARow
            Return CType(Me.NewRow,LISTARow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New LISTARow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(LISTARow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.LISTARowChangedEvent) Is Nothing) Then
                RaiseEvent LISTARowChanged(Me, New LISTARowChangeEvent(CType(e.Row,LISTARow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.LISTARowChangingEvent) Is Nothing) Then
                RaiseEvent LISTARowChanging(Me, New LISTARowChangeEvent(CType(e.Row,LISTARow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.LISTARowDeletedEvent) Is Nothing) Then
                RaiseEvent LISTARowDeleted(Me, New LISTARowChangeEvent(CType(e.Row,LISTARow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.LISTARowDeletingEvent) Is Nothing) Then
                RaiseEvent LISTARowDeleting(Me, New LISTARowChangeEvent(CType(e.Row,LISTARow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub RemoveLISTARow(ByVal row As LISTARow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence
            Dim ds As dsTablasGenericas = New dsTablasGenericas
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "LISTADataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Partial Public Class TABLAS_CABECERARow
        Inherits Global.System.Data.DataRow
        
        Private tableTABLAS_CABECERA As TABLAS_CABECERADataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableTABLAS_CABECERA = CType(Me.Table,TABLAS_CABECERADataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property EMPRESA() As String
            Get
                Return CType(Me(Me.tableTABLAS_CABECERA.EMPRESAColumn),String)
            End Get
            Set
                Me(Me.tableTABLAS_CABECERA.EMPRESAColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property CODIGO_TABLA() As String
            Get
                Return CType(Me(Me.tableTABLAS_CABECERA.CODIGO_TABLAColumn),String)
            End Get
            Set
                Me(Me.tableTABLAS_CABECERA.CODIGO_TABLAColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property NOMBRE_CORTO() As String
            Get
                Return CType(Me(Me.tableTABLAS_CABECERA.NOMBRE_CORTOColumn),String)
            End Get
            Set
                Me(Me.tableTABLAS_CABECERA.NOMBRE_CORTOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property NOMBRE_LARGO() As String
            Get
                Return CType(Me(Me.tableTABLAS_CABECERA.NOMBRE_LARGOColumn),String)
            End Get
            Set
                Me(Me.tableTABLAS_CABECERA.NOMBRE_LARGOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property NECESIDAD() As String
            Get
                Return CType(Me(Me.tableTABLAS_CABECERA.NECESIDADColumn),String)
            End Get
            Set
                Me(Me.tableTABLAS_CABECERA.NECESIDADColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property TTEXTO_01() As String
            Get
                Return CType(Me(Me.tableTABLAS_CABECERA.TTEXTO_01Column),String)
            End Get
            Set
                Me(Me.tableTABLAS_CABECERA.TTEXTO_01Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property TTEXTO_02() As String
            Get
                Return CType(Me(Me.tableTABLAS_CABECERA.TTEXTO_02Column),String)
            End Get
            Set
                Me(Me.tableTABLAS_CABECERA.TTEXTO_02Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property TTEXTO_03() As String
            Get
                Return CType(Me(Me.tableTABLAS_CABECERA.TTEXTO_03Column),String)
            End Get
            Set
                Me(Me.tableTABLAS_CABECERA.TTEXTO_03Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property TTEXTO_04() As String
            Get
                Return CType(Me(Me.tableTABLAS_CABECERA.TTEXTO_04Column),String)
            End Get
            Set
                Me(Me.tableTABLAS_CABECERA.TTEXTO_04Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property TTEXTO_05() As String
            Get
                Return CType(Me(Me.tableTABLAS_CABECERA.TTEXTO_05Column),String)
            End Get
            Set
                Me(Me.tableTABLAS_CABECERA.TTEXTO_05Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property TVALOR_01() As String
            Get
                Return CType(Me(Me.tableTABLAS_CABECERA.TVALOR_01Column),String)
            End Get
            Set
                Me(Me.tableTABLAS_CABECERA.TVALOR_01Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property TVALOR_02() As String
            Get
                Return CType(Me(Me.tableTABLAS_CABECERA.TVALOR_02Column),String)
            End Get
            Set
                Me(Me.tableTABLAS_CABECERA.TVALOR_02Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property TVALOR_03() As String
            Get
                Return CType(Me(Me.tableTABLAS_CABECERA.TVALOR_03Column),String)
            End Get
            Set
                Me(Me.tableTABLAS_CABECERA.TVALOR_03Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property TVALOR_04() As String
            Get
                Return CType(Me(Me.tableTABLAS_CABECERA.TVALOR_04Column),String)
            End Get
            Set
                Me(Me.tableTABLAS_CABECERA.TVALOR_04Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property TVALOR_05() As String
            Get
                Return CType(Me(Me.tableTABLAS_CABECERA.TVALOR_05Column),String)
            End Get
            Set
                Me(Me.tableTABLAS_CABECERA.TVALOR_05Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property TLOGICO_01() As String
            Get
                Return CType(Me(Me.tableTABLAS_CABECERA.TLOGICO_01Column),String)
            End Get
            Set
                Me(Me.tableTABLAS_CABECERA.TLOGICO_01Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property TLOGICO_02() As String
            Get
                Return CType(Me(Me.tableTABLAS_CABECERA.TLOGICO_02Column),String)
            End Get
            Set
                Me(Me.tableTABLAS_CABECERA.TLOGICO_02Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property TLOGICO_03() As String
            Get
                Return CType(Me(Me.tableTABLAS_CABECERA.TLOGICO_03Column),String)
            End Get
            Set
                Me(Me.tableTABLAS_CABECERA.TLOGICO_03Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property TLOGICO_04() As String
            Get
                Return CType(Me(Me.tableTABLAS_CABECERA.TLOGICO_04Column),String)
            End Get
            Set
                Me(Me.tableTABLAS_CABECERA.TLOGICO_04Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property TLOGICO_05() As String
            Get
                Return CType(Me(Me.tableTABLAS_CABECERA.TLOGICO_05Column),String)
            End Get
            Set
                Me(Me.tableTABLAS_CABECERA.TLOGICO_05Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property ESTADO() As String
            Get
                Return CType(Me(Me.tableTABLAS_CABECERA.ESTADOColumn),String)
            End Get
            Set
                Me(Me.tableTABLAS_CABECERA.ESTADOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property USUARIO_REGISTRO() As String
            Get
                Return CType(Me(Me.tableTABLAS_CABECERA.USUARIO_REGISTROColumn),String)
            End Get
            Set
                Me(Me.tableTABLAS_CABECERA.USUARIO_REGISTROColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property FECHA_REGISTRO() As Date
            Get
                Return CType(Me(Me.tableTABLAS_CABECERA.FECHA_REGISTROColumn),Date)
            End Get
            Set
                Me(Me.tableTABLAS_CABECERA.FECHA_REGISTROColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property USUARIO_MODIFICA() As String
            Get
                Try 
                    Return CType(Me(Me.tableTABLAS_CABECERA.USUARIO_MODIFICAColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'USUARIO_MODIFICA' de la tabla 'TABLAS_CABECERA' es DBNull"& _ 
                            ".", e)
                End Try
            End Get
            Set
                Me(Me.tableTABLAS_CABECERA.USUARIO_MODIFICAColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property FECHA_MODIFICA() As Date
            Get
                Try 
                    Return CType(Me(Me.tableTABLAS_CABECERA.FECHA_MODIFICAColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'FECHA_MODIFICA' de la tabla 'TABLAS_CABECERA' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTABLAS_CABECERA.FECHA_MODIFICAColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsUSUARIO_MODIFICANull() As Boolean
            Return Me.IsNull(Me.tableTABLAS_CABECERA.USUARIO_MODIFICAColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetUSUARIO_MODIFICANull()
            Me(Me.tableTABLAS_CABECERA.USUARIO_MODIFICAColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsFECHA_MODIFICANull() As Boolean
            Return Me.IsNull(Me.tableTABLAS_CABECERA.FECHA_MODIFICAColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetFECHA_MODIFICANull()
            Me(Me.tableTABLAS_CABECERA.FECHA_MODIFICAColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Partial Public Class TABLAS_DETALLERow
        Inherits Global.System.Data.DataRow
        
        Private tableTABLAS_DETALLE As TABLAS_DETALLEDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableTABLAS_DETALLE = CType(Me.Table,TABLAS_DETALLEDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property EMPRESA() As String
            Get
                Return CType(Me(Me.tableTABLAS_DETALLE.EMPRESAColumn),String)
            End Get
            Set
                Me(Me.tableTABLAS_DETALLE.EMPRESAColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property CODIGO_TABLA() As String
            Get
                Return CType(Me(Me.tableTABLAS_DETALLE.CODIGO_TABLAColumn),String)
            End Get
            Set
                Me(Me.tableTABLAS_DETALLE.CODIGO_TABLAColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property CODIGO_ITEM() As String
            Get
                Return CType(Me(Me.tableTABLAS_DETALLE.CODIGO_ITEMColumn),String)
            End Get
            Set
                Me(Me.tableTABLAS_DETALLE.CODIGO_ITEMColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property NOMBRE_CORTO() As String
            Get
                Return CType(Me(Me.tableTABLAS_DETALLE.NOMBRE_CORTOColumn),String)
            End Get
            Set
                Me(Me.tableTABLAS_DETALLE.NOMBRE_CORTOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property NOMBRE_LARGO() As String
            Get
                Return CType(Me(Me.tableTABLAS_DETALLE.NOMBRE_LARGOColumn),String)
            End Get
            Set
                Me(Me.tableTABLAS_DETALLE.NOMBRE_LARGOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property TEXTO_01() As String
            Get
                Return CType(Me(Me.tableTABLAS_DETALLE.TEXTO_01Column),String)
            End Get
            Set
                Me(Me.tableTABLAS_DETALLE.TEXTO_01Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property TEXTO_02() As String
            Get
                Return CType(Me(Me.tableTABLAS_DETALLE.TEXTO_02Column),String)
            End Get
            Set
                Me(Me.tableTABLAS_DETALLE.TEXTO_02Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property TEXTO_03() As String
            Get
                Return CType(Me(Me.tableTABLAS_DETALLE.TEXTO_03Column),String)
            End Get
            Set
                Me(Me.tableTABLAS_DETALLE.TEXTO_03Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property TEXTO_04() As String
            Get
                Return CType(Me(Me.tableTABLAS_DETALLE.TEXTO_04Column),String)
            End Get
            Set
                Me(Me.tableTABLAS_DETALLE.TEXTO_04Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property TEXTO_05() As String
            Get
                Return CType(Me(Me.tableTABLAS_DETALLE.TEXTO_05Column),String)
            End Get
            Set
                Me(Me.tableTABLAS_DETALLE.TEXTO_05Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property VALOR_01() As Decimal
            Get
                Return CType(Me(Me.tableTABLAS_DETALLE.VALOR_01Column),Decimal)
            End Get
            Set
                Me(Me.tableTABLAS_DETALLE.VALOR_01Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property VALOR_02() As Decimal
            Get
                Return CType(Me(Me.tableTABLAS_DETALLE.VALOR_02Column),Decimal)
            End Get
            Set
                Me(Me.tableTABLAS_DETALLE.VALOR_02Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property VALOR_03() As Decimal
            Get
                Return CType(Me(Me.tableTABLAS_DETALLE.VALOR_03Column),Decimal)
            End Get
            Set
                Me(Me.tableTABLAS_DETALLE.VALOR_03Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property VALOR_04() As Decimal
            Get
                Return CType(Me(Me.tableTABLAS_DETALLE.VALOR_04Column),Decimal)
            End Get
            Set
                Me(Me.tableTABLAS_DETALLE.VALOR_04Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property VALOR_05() As Decimal
            Get
                Return CType(Me(Me.tableTABLAS_DETALLE.VALOR_05Column),Decimal)
            End Get
            Set
                Me(Me.tableTABLAS_DETALLE.VALOR_05Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property LOGICO_01() As Decimal
            Get
                Return CType(Me(Me.tableTABLAS_DETALLE.LOGICO_01Column),Decimal)
            End Get
            Set
                Me(Me.tableTABLAS_DETALLE.LOGICO_01Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property LOGICO_02() As Decimal
            Get
                Return CType(Me(Me.tableTABLAS_DETALLE.LOGICO_02Column),Decimal)
            End Get
            Set
                Me(Me.tableTABLAS_DETALLE.LOGICO_02Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property LOGICO_03() As Decimal
            Get
                Return CType(Me(Me.tableTABLAS_DETALLE.LOGICO_03Column),Decimal)
            End Get
            Set
                Me(Me.tableTABLAS_DETALLE.LOGICO_03Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property LOGICO_04() As Decimal
            Get
                Return CType(Me(Me.tableTABLAS_DETALLE.LOGICO_04Column),Decimal)
            End Get
            Set
                Me(Me.tableTABLAS_DETALLE.LOGICO_04Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property LOGICO_05() As Decimal
            Get
                Return CType(Me(Me.tableTABLAS_DETALLE.LOGICO_05Column),Decimal)
            End Get
            Set
                Me(Me.tableTABLAS_DETALLE.LOGICO_05Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property ESTADO() As String
            Get
                Return CType(Me(Me.tableTABLAS_DETALLE.ESTADOColumn),String)
            End Get
            Set
                Me(Me.tableTABLAS_DETALLE.ESTADOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property PERMITE_ELIMINAR() As String
            Get
                Return CType(Me(Me.tableTABLAS_DETALLE.PERMITE_ELIMINARColumn),String)
            End Get
            Set
                Me(Me.tableTABLAS_DETALLE.PERMITE_ELIMINARColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property VALOR_DEFECTO() As String
            Get
                Return CType(Me(Me.tableTABLAS_DETALLE.VALOR_DEFECTOColumn),String)
            End Get
            Set
                Me(Me.tableTABLAS_DETALLE.VALOR_DEFECTOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property USUARIO_REGISTRO() As String
            Get
                Return CType(Me(Me.tableTABLAS_DETALLE.USUARIO_REGISTROColumn),String)
            End Get
            Set
                Me(Me.tableTABLAS_DETALLE.USUARIO_REGISTROColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property FECHA_REGISTRO() As Date
            Get
                Return CType(Me(Me.tableTABLAS_DETALLE.FECHA_REGISTROColumn),Date)
            End Get
            Set
                Me(Me.tableTABLAS_DETALLE.FECHA_REGISTROColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property USUARIO_MODIFICA() As String
            Get
                Try 
                    Return CType(Me(Me.tableTABLAS_DETALLE.USUARIO_MODIFICAColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'USUARIO_MODIFICA' de la tabla 'TABLAS_DETALLE' es DBNull."& _ 
                            "", e)
                End Try
            End Get
            Set
                Me(Me.tableTABLAS_DETALLE.USUARIO_MODIFICAColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property FECHA_MODIFICA() As Date
            Get
                Try 
                    Return CType(Me(Me.tableTABLAS_DETALLE.FECHA_MODIFICAColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'FECHA_MODIFICA' de la tabla 'TABLAS_DETALLE' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTABLAS_DETALLE.FECHA_MODIFICAColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsUSUARIO_MODIFICANull() As Boolean
            Return Me.IsNull(Me.tableTABLAS_DETALLE.USUARIO_MODIFICAColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetUSUARIO_MODIFICANull()
            Me(Me.tableTABLAS_DETALLE.USUARIO_MODIFICAColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsFECHA_MODIFICANull() As Boolean
            Return Me.IsNull(Me.tableTABLAS_DETALLE.FECHA_MODIFICAColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetFECHA_MODIFICANull()
            Me(Me.tableTABLAS_DETALLE.FECHA_MODIFICAColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Partial Public Class LISTARow
        Inherits Global.System.Data.DataRow
        
        Private tableLISTA As LISTADataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableLISTA = CType(Me.Table,LISTADataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property TABLA() As String
            Get
                Return CType(Me(Me.tableLISTA.TABLAColumn),String)
            End Get
            Set
                Me(Me.tableLISTA.TABLAColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property CODIGO() As String
            Get
                Return CType(Me(Me.tableLISTA.CODIGOColumn),String)
            End Get
            Set
                Me(Me.tableLISTA.CODIGOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property DESCRIPCION() As String
            Get
                Return CType(Me(Me.tableLISTA.DESCRIPCIONColumn),String)
            End Get
            Set
                Me(Me.tableLISTA.DESCRIPCIONColumn) = value
            End Set
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Public Class TABLAS_CABECERARowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As TABLAS_CABECERARow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New(ByVal row As TABLAS_CABECERARow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Row() As TABLAS_CABECERARow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Public Class TABLAS_DETALLERowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As TABLAS_DETALLERow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New(ByVal row As TABLAS_DETALLERow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Row() As TABLAS_DETALLERow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Public Class LISTARowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As LISTARow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New(ByVal row As LISTARow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Row() As LISTARow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
End Class
