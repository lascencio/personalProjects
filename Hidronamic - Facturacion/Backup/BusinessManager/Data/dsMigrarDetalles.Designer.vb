'------------------------------------------------------------------------------
' <auto-generated>
'     Este código fue generado por una herramienta.
'     Versión del motor en tiempo de ejecución:2.0.50727.5472
'
'     Los cambios en este archivo podrían causar un comportamiento incorrecto y se perderán si
'     se vuelve a generar el código.
' </auto-generated>
'------------------------------------------------------------------------------

Option Strict Off
Option Explicit On



'''<summary>
'''Represents a strongly typed in-memory cache of data.
'''</summary>
<Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0"),  _
 Global.System.Serializable(),  _
 Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
 Global.System.ComponentModel.ToolboxItem(true),  _
 Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema"),  _
 Global.System.Xml.Serialization.XmlRootAttribute("dsMigrarDetalles"),  _
 Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")>  _
Partial Public Class dsMigrarDetalles
    Inherits Global.System.Data.DataSet
    
    Private tableMIGRAR_DETALLES As MIGRAR_DETALLESDataTable
    
    Private _schemaSerializationMode As Global.System.Data.SchemaSerializationMode = Global.System.Data.SchemaSerializationMode.IncludeSchema
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Public Sub New()
        MyBase.New
        Me.BeginInit
        Me.InitClass
        Dim schemaChangedHandler As Global.System.ComponentModel.CollectionChangeEventHandler = AddressOf Me.SchemaChanged
        AddHandler MyBase.Tables.CollectionChanged, schemaChangedHandler
        AddHandler MyBase.Relations.CollectionChanged, schemaChangedHandler
        Me.EndInit
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
        MyBase.New(info, context, false)
        If (Me.IsBinarySerialized(info, context) = true) Then
            Me.InitVars(false)
            Dim schemaChangedHandler1 As Global.System.ComponentModel.CollectionChangeEventHandler = AddressOf Me.SchemaChanged
            AddHandler Me.Tables.CollectionChanged, schemaChangedHandler1
            AddHandler Me.Relations.CollectionChanged, schemaChangedHandler1
            Return
        End If
        Dim strSchema As String = CType(info.GetValue("XmlSchema", GetType(String)),String)
        If (Me.DetermineSchemaSerializationMode(info, context) = Global.System.Data.SchemaSerializationMode.IncludeSchema) Then
            Dim ds As Global.System.Data.DataSet = New Global.System.Data.DataSet
            ds.ReadXmlSchema(New Global.System.Xml.XmlTextReader(New Global.System.IO.StringReader(strSchema)))
            If (Not (ds.Tables("MIGRAR_DETALLES")) Is Nothing) Then
                MyBase.Tables.Add(New MIGRAR_DETALLESDataTable(ds.Tables("MIGRAR_DETALLES")))
            End If
            Me.DataSetName = ds.DataSetName
            Me.Prefix = ds.Prefix
            Me.Namespace = ds.Namespace
            Me.Locale = ds.Locale
            Me.CaseSensitive = ds.CaseSensitive
            Me.EnforceConstraints = ds.EnforceConstraints
            Me.Merge(ds, false, Global.System.Data.MissingSchemaAction.Add)
            Me.InitVars
        Else
            Me.ReadXmlSchema(New Global.System.Xml.XmlTextReader(New Global.System.IO.StringReader(strSchema)))
        End If
        Me.GetSerializationData(info, context)
        Dim schemaChangedHandler As Global.System.ComponentModel.CollectionChangeEventHandler = AddressOf Me.SchemaChanged
        AddHandler MyBase.Tables.CollectionChanged, schemaChangedHandler
        AddHandler Me.Relations.CollectionChanged, schemaChangedHandler
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property MIGRAR_DETALLES() As MIGRAR_DETALLESDataTable
        Get
            Return Me.tableMIGRAR_DETALLES
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.ComponentModel.BrowsableAttribute(true),  _
     Global.System.ComponentModel.DesignerSerializationVisibilityAttribute(Global.System.ComponentModel.DesignerSerializationVisibility.Visible)>  _
    Public Overrides Property SchemaSerializationMode() As Global.System.Data.SchemaSerializationMode
        Get
            Return Me._schemaSerializationMode
        End Get
        Set
            Me._schemaSerializationMode = value
        End Set
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.ComponentModel.DesignerSerializationVisibilityAttribute(Global.System.ComponentModel.DesignerSerializationVisibility.Hidden)>  _
    Public Shadows ReadOnly Property Tables() As Global.System.Data.DataTableCollection
        Get
            Return MyBase.Tables
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.ComponentModel.DesignerSerializationVisibilityAttribute(Global.System.ComponentModel.DesignerSerializationVisibility.Hidden)>  _
    Public Shadows ReadOnly Property Relations() As Global.System.Data.DataRelationCollection
        Get
            Return MyBase.Relations
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Protected Overrides Sub InitializeDerivedDataSet()
        Me.BeginInit
        Me.InitClass
        Me.EndInit
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Public Overrides Function Clone() As Global.System.Data.DataSet
        Dim cln As dsMigrarDetalles = CType(MyBase.Clone,dsMigrarDetalles)
        cln.InitVars
        cln.SchemaSerializationMode = Me.SchemaSerializationMode
        Return cln
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Protected Overrides Function ShouldSerializeTables() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Protected Overrides Function ShouldSerializeRelations() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Protected Overrides Sub ReadXmlSerializable(ByVal reader As Global.System.Xml.XmlReader)
        If (Me.DetermineSchemaSerializationMode(reader) = Global.System.Data.SchemaSerializationMode.IncludeSchema) Then
            Me.Reset
            Dim ds As Global.System.Data.DataSet = New Global.System.Data.DataSet
            ds.ReadXml(reader)
            If (Not (ds.Tables("MIGRAR_DETALLES")) Is Nothing) Then
                MyBase.Tables.Add(New MIGRAR_DETALLESDataTable(ds.Tables("MIGRAR_DETALLES")))
            End If
            Me.DataSetName = ds.DataSetName
            Me.Prefix = ds.Prefix
            Me.Namespace = ds.Namespace
            Me.Locale = ds.Locale
            Me.CaseSensitive = ds.CaseSensitive
            Me.EnforceConstraints = ds.EnforceConstraints
            Me.Merge(ds, false, Global.System.Data.MissingSchemaAction.Add)
            Me.InitVars
        Else
            Me.ReadXml(reader)
            Me.InitVars
        End If
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Protected Overrides Function GetSchemaSerializable() As Global.System.Xml.Schema.XmlSchema
        Dim stream As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
        Me.WriteXmlSchema(New Global.System.Xml.XmlTextWriter(stream, Nothing))
        stream.Position = 0
        Return Global.System.Xml.Schema.XmlSchema.Read(New Global.System.Xml.XmlTextReader(stream), Nothing)
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Friend Overloads Sub InitVars()
        Me.InitVars(true)
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Friend Overloads Sub InitVars(ByVal initTable As Boolean)
        Me.tableMIGRAR_DETALLES = CType(MyBase.Tables("MIGRAR_DETALLES"),MIGRAR_DETALLESDataTable)
        If (initTable = true) Then
            If (Not (Me.tableMIGRAR_DETALLES) Is Nothing) Then
                Me.tableMIGRAR_DETALLES.InitVars
            End If
        End If
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Private Sub InitClass()
        Me.DataSetName = "dsMigrarDetalles"
        Me.Prefix = ""
        Me.Namespace = "http://tempuri.org/dsMigrarDetalles.xsd"
        Me.EnforceConstraints = true
        Me.SchemaSerializationMode = Global.System.Data.SchemaSerializationMode.IncludeSchema
        Me.tableMIGRAR_DETALLES = New MIGRAR_DETALLESDataTable
        MyBase.Tables.Add(Me.tableMIGRAR_DETALLES)
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Private Function ShouldSerializeMIGRAR_DETALLES() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Private Sub SchemaChanged(ByVal sender As Object, ByVal e As Global.System.ComponentModel.CollectionChangeEventArgs)
        If (e.Action = Global.System.ComponentModel.CollectionChangeAction.Remove) Then
            Me.InitVars
        End If
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Public Shared Function GetTypedDataSetSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
        Dim ds As dsMigrarDetalles = New dsMigrarDetalles
        Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType
        Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence
        Dim any As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
        any.Namespace = ds.Namespace
        sequence.Items.Add(any)
        type.Particle = sequence
        Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
        If xs.Contains(dsSchema.TargetNamespace) Then
            Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
            Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
            Try 
                Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                dsSchema.Write(s1)
                Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                Do While schemas.MoveNext
                    schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                    s2.SetLength(0)
                    schema.Write(s2)
                    If (s1.Length = s2.Length) Then
                        s1.Position = 0
                        s2.Position = 0
                        
                        Do While ((s1.Position <> s1.Length)  _
                                    AndAlso (s1.ReadByte = s2.ReadByte))
                            
                            
                        Loop
                        If (s1.Position = s1.Length) Then
                            Return type
                        End If
                    End If
                    
                Loop
            Finally
                If (Not (s1) Is Nothing) Then
                    s1.Close
                End If
                If (Not (s2) Is Nothing) Then
                    s2.Close
                End If
            End Try
        End If
        xs.Add(dsSchema)
        Return type
    End Function
    
    Public Delegate Sub MIGRAR_DETALLESRowChangeEventHandler(ByVal sender As Object, ByVal e As MIGRAR_DETALLESRowChangeEvent)
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0"),  _
     Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class MIGRAR_DETALLESDataTable
        Inherits Global.System.Data.TypedTableBase(Of MIGRAR_DETALLESRow)
        
        Private columndsubdia As Global.System.Data.DataColumn
        
        Private columndcompro As Global.System.Data.DataColumn
        
        Private columndsecue As Global.System.Data.DataColumn
        
        Private columndfeccom As Global.System.Data.DataColumn
        
        Private columndcuenta As Global.System.Data.DataColumn
        
        Private columndcodane As Global.System.Data.DataColumn
        
        Private columndcencos As Global.System.Data.DataColumn
        
        Private columndcodmon As Global.System.Data.DataColumn
        
        Private columnddh As Global.System.Data.DataColumn
        
        Private columndimport As Global.System.Data.DataColumn
        
        Private columnDTIPDOC As Global.System.Data.DataColumn
        
        Private columndnumdoc As Global.System.Data.DataColumn
        
        Private columndfecdoc As Global.System.Data.DataColumn
        
        Private columndfecven As Global.System.Data.DataColumn
        
        Private columndarea As Global.System.Data.DataColumn
        
        Private columndflag As Global.System.Data.DataColumn
        
        Private columnddate As Global.System.Data.DataColumn
        
        Private columndxglosa As Global.System.Data.DataColumn
        
        Private columndusimpor As Global.System.Data.DataColumn
        
        Private columndmnimpor As Global.System.Data.DataColumn
        
        Private columndcodarc As Global.System.Data.DataColumn
        
        Private columndfeccom2 As Global.System.Data.DataColumn
        
        Private columndfecdoc2 As Global.System.Data.DataColumn
        
        Private columndfecven2 As Global.System.Data.DataColumn
        
        Private columndcodane2 As Global.System.Data.DataColumn
        
        Private columnDVANEXO As Global.System.Data.DataColumn
        
        Private columnDVANEXO2 As Global.System.Data.DataColumn
        
        Private columndtipcam As Global.System.Data.DataColumn
        
        Private columndcantid As Global.System.Data.DataColumn
        
        Private columndrete As Global.System.Data.DataColumn
        
        Private columndporre As Global.System.Data.DataColumn
        
        Private columndtipdor As Global.System.Data.DataColumn
        
        Private columndnumdor As Global.System.Data.DataColumn
        
        Private columndfecdo2 As Global.System.Data.DataColumn
        
        Private columndtiptas As Global.System.Data.DataColumn
        
        Private columndimptas As Global.System.Data.DataColumn
        
        Private columndimpbmn As Global.System.Data.DataColumn
        
        Private columndimpbus As Global.System.Data.DataColumn
        
        Private columndinacom As Global.System.Data.DataColumn
        
        Private columndigvcom As Global.System.Data.DataColumn
        
        Private columndmedpag As Global.System.Data.DataColumn
        
        Private columndmoncom As Global.System.Data.DataColumn
        
        Private columndcolcom As Global.System.Data.DataColumn
        
        Private columndbascom As Global.System.Data.DataColumn
        
        Private columndtpconv As Global.System.Data.DataColumn
        
        Private columndflgcom As Global.System.Data.DataColumn
        
        Private columndtipaco As Global.System.Data.DataColumn
        
        Private columndanecom As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "MIGRAR_DETALLES"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property dsubdiaColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columndsubdia
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property dcomproColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columndcompro
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property dsecueColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columndsecue
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property dfeccomColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columndfeccom
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property dcuentaColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columndcuenta
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property dcodaneColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columndcodane
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property dcencosColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columndcencos
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property dcodmonColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columndcodmon
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property ddhColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnddh
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property dimportColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columndimport
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property DTIPDOCColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDTIPDOC
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property dnumdocColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columndnumdoc
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property dfecdocColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columndfecdoc
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property dfecvenColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columndfecven
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property dareaColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columndarea
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property dflagColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columndflag
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property ddateColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnddate
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property dxglosaColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columndxglosa
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property dusimporColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columndusimpor
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property dmnimporColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columndmnimpor
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property dcodarcColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columndcodarc
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property dfeccom2Column() As Global.System.Data.DataColumn
            Get
                Return Me.columndfeccom2
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property dfecdoc2Column() As Global.System.Data.DataColumn
            Get
                Return Me.columndfecdoc2
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property dfecven2Column() As Global.System.Data.DataColumn
            Get
                Return Me.columndfecven2
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property dcodane2Column() As Global.System.Data.DataColumn
            Get
                Return Me.columndcodane2
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property DVANEXOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDVANEXO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property DVANEXO2Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnDVANEXO2
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property dtipcamColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columndtipcam
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property dcantidColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columndcantid
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property dreteColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columndrete
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property dporreColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columndporre
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property dtipdorColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columndtipdor
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property dnumdorColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columndnumdor
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property dfecdo2Column() As Global.System.Data.DataColumn
            Get
                Return Me.columndfecdo2
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property dtiptasColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columndtiptas
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property dimptasColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columndimptas
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property dimpbmnColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columndimpbmn
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property dimpbusColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columndimpbus
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property dinacomColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columndinacom
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property digvcomColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columndigvcom
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property dmedpagColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columndmedpag
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property dmoncomColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columndmoncom
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property dcolcomColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columndcolcom
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property dbascomColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columndbascom
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property dtpconvColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columndtpconv
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property dflgcomColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columndflgcom
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property dtipacoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columndtipaco
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property danecomColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columndanecom
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As MIGRAR_DETALLESRow
            Get
                Return CType(Me.Rows(index),MIGRAR_DETALLESRow)
            End Get
        End Property
        
        Public Event MIGRAR_DETALLESRowChanging As MIGRAR_DETALLESRowChangeEventHandler
        
        Public Event MIGRAR_DETALLESRowChanged As MIGRAR_DETALLESRowChangeEventHandler
        
        Public Event MIGRAR_DETALLESRowDeleting As MIGRAR_DETALLESRowChangeEventHandler
        
        Public Event MIGRAR_DETALLESRowDeleted As MIGRAR_DETALLESRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Sub AddMIGRAR_DETALLESRow(ByVal row As MIGRAR_DETALLESRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Function AddMIGRAR_DETALLESRow( _
                    ByVal dsubdia As String,  _
                    ByVal dcompro As String,  _
                    ByVal dsecue As String,  _
                    ByVal dfeccom As String,  _
                    ByVal dcuenta As String,  _
                    ByVal dcodane As String,  _
                    ByVal dcencos As String,  _
                    ByVal dcodmon As String,  _
                    ByVal ddh As String,  _
                    ByVal dimport As Decimal,  _
                    ByVal DTIPDOC As String,  _
                    ByVal dnumdoc As String,  _
                    ByVal dfecdoc As String,  _
                    ByVal dfecven As String,  _
                    ByVal darea As String,  _
                    ByVal dflag As String,  _
                    ByVal ddate As Date,  _
                    ByVal dxglosa As String,  _
                    ByVal dusimpor As Decimal,  _
                    ByVal dmnimpor As Decimal,  _
                    ByVal dcodarc As String,  _
                    ByVal dfeccom2 As Date,  _
                    ByVal dfecdoc2 As Date,  _
                    ByVal dfecven2 As Date,  _
                    ByVal dcodane2 As String,  _
                    ByVal DVANEXO As String,  _
                    ByVal DVANEXO2 As String,  _
                    ByVal dtipcam As Decimal,  _
                    ByVal dcantid As Integer,  _
                    ByVal drete As String,  _
                    ByVal dporre As Integer,  _
                    ByVal dtipdor As String,  _
                    ByVal dnumdor As String,  _
                    ByVal dfecdo2 As Date,  _
                    ByVal dtiptas As String,  _
                    ByVal dimptas As Integer,  _
                    ByVal dimpbmn As Integer,  _
                    ByVal dimpbus As Integer,  _
                    ByVal dinacom As Integer,  _
                    ByVal digvcom As Integer,  _
                    ByVal dmedpag As String,  _
                    ByVal dmoncom As String,  _
                    ByVal dcolcom As String,  _
                    ByVal dbascom As Integer,  _
                    ByVal dtpconv As String,  _
                    ByVal dflgcom As String,  _
                    ByVal dtipaco As String,  _
                    ByVal danecom As String) As MIGRAR_DETALLESRow
            Dim rowMIGRAR_DETALLESRow As MIGRAR_DETALLESRow = CType(Me.NewRow,MIGRAR_DETALLESRow)
            Dim columnValuesArray() As Object = New Object() {dsubdia, dcompro, dsecue, dfeccom, dcuenta, dcodane, dcencos, dcodmon, ddh, dimport, DTIPDOC, dnumdoc, dfecdoc, dfecven, darea, dflag, ddate, dxglosa, dusimpor, dmnimpor, dcodarc, dfeccom2, dfecdoc2, dfecven2, dcodane2, DVANEXO, DVANEXO2, dtipcam, dcantid, drete, dporre, dtipdor, dnumdor, dfecdo2, dtiptas, dimptas, dimpbmn, dimpbus, dinacom, digvcom, dmedpag, dmoncom, dcolcom, dbascom, dtpconv, dflgcom, dtipaco, danecom}
            rowMIGRAR_DETALLESRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowMIGRAR_DETALLESRow)
            Return rowMIGRAR_DETALLESRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As MIGRAR_DETALLESDataTable = CType(MyBase.Clone,MIGRAR_DETALLESDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New MIGRAR_DETALLESDataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub InitVars()
            Me.columndsubdia = MyBase.Columns("dsubdia")
            Me.columndcompro = MyBase.Columns("dcompro")
            Me.columndsecue = MyBase.Columns("dsecue")
            Me.columndfeccom = MyBase.Columns("dfeccom")
            Me.columndcuenta = MyBase.Columns("dcuenta")
            Me.columndcodane = MyBase.Columns("dcodane")
            Me.columndcencos = MyBase.Columns("dcencos")
            Me.columndcodmon = MyBase.Columns("dcodmon")
            Me.columnddh = MyBase.Columns("ddh")
            Me.columndimport = MyBase.Columns("dimport")
            Me.columnDTIPDOC = MyBase.Columns("DTIPDOC")
            Me.columndnumdoc = MyBase.Columns("dnumdoc")
            Me.columndfecdoc = MyBase.Columns("dfecdoc")
            Me.columndfecven = MyBase.Columns("dfecven")
            Me.columndarea = MyBase.Columns("darea")
            Me.columndflag = MyBase.Columns("dflag")
            Me.columnddate = MyBase.Columns("ddate")
            Me.columndxglosa = MyBase.Columns("dxglosa")
            Me.columndusimpor = MyBase.Columns("dusimpor")
            Me.columndmnimpor = MyBase.Columns("dmnimpor")
            Me.columndcodarc = MyBase.Columns("dcodarc")
            Me.columndfeccom2 = MyBase.Columns("dfeccom2")
            Me.columndfecdoc2 = MyBase.Columns("dfecdoc2")
            Me.columndfecven2 = MyBase.Columns("dfecven2")
            Me.columndcodane2 = MyBase.Columns("dcodane2")
            Me.columnDVANEXO = MyBase.Columns("DVANEXO")
            Me.columnDVANEXO2 = MyBase.Columns("DVANEXO2")
            Me.columndtipcam = MyBase.Columns("dtipcam")
            Me.columndcantid = MyBase.Columns("dcantid")
            Me.columndrete = MyBase.Columns("drete")
            Me.columndporre = MyBase.Columns("dporre")
            Me.columndtipdor = MyBase.Columns("dtipdor")
            Me.columndnumdor = MyBase.Columns("dnumdor")
            Me.columndfecdo2 = MyBase.Columns("dfecdo2")
            Me.columndtiptas = MyBase.Columns("dtiptas")
            Me.columndimptas = MyBase.Columns("dimptas")
            Me.columndimpbmn = MyBase.Columns("dimpbmn")
            Me.columndimpbus = MyBase.Columns("dimpbus")
            Me.columndinacom = MyBase.Columns("dinacom")
            Me.columndigvcom = MyBase.Columns("digvcom")
            Me.columndmedpag = MyBase.Columns("dmedpag")
            Me.columndmoncom = MyBase.Columns("dmoncom")
            Me.columndcolcom = MyBase.Columns("dcolcom")
            Me.columndbascom = MyBase.Columns("dbascom")
            Me.columndtpconv = MyBase.Columns("dtpconv")
            Me.columndflgcom = MyBase.Columns("dflgcom")
            Me.columndtipaco = MyBase.Columns("dtipaco")
            Me.columndanecom = MyBase.Columns("danecom")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitClass()
            Me.columndsubdia = New Global.System.Data.DataColumn("dsubdia", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columndsubdia)
            Me.columndcompro = New Global.System.Data.DataColumn("dcompro", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columndcompro)
            Me.columndsecue = New Global.System.Data.DataColumn("dsecue", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columndsecue)
            Me.columndfeccom = New Global.System.Data.DataColumn("dfeccom", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columndfeccom)
            Me.columndcuenta = New Global.System.Data.DataColumn("dcuenta", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columndcuenta)
            Me.columndcodane = New Global.System.Data.DataColumn("dcodane", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columndcodane)
            Me.columndcencos = New Global.System.Data.DataColumn("dcencos", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columndcencos)
            Me.columndcodmon = New Global.System.Data.DataColumn("dcodmon", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columndcodmon)
            Me.columnddh = New Global.System.Data.DataColumn("ddh", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnddh)
            Me.columndimport = New Global.System.Data.DataColumn("dimport", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columndimport)
            Me.columnDTIPDOC = New Global.System.Data.DataColumn("DTIPDOC", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDTIPDOC)
            Me.columndnumdoc = New Global.System.Data.DataColumn("dnumdoc", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columndnumdoc)
            Me.columndfecdoc = New Global.System.Data.DataColumn("dfecdoc", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columndfecdoc)
            Me.columndfecven = New Global.System.Data.DataColumn("dfecven", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columndfecven)
            Me.columndarea = New Global.System.Data.DataColumn("darea", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columndarea)
            Me.columndflag = New Global.System.Data.DataColumn("dflag", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columndflag)
            Me.columnddate = New Global.System.Data.DataColumn("ddate", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnddate)
            Me.columndxglosa = New Global.System.Data.DataColumn("dxglosa", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columndxglosa)
            Me.columndusimpor = New Global.System.Data.DataColumn("dusimpor", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columndusimpor)
            Me.columndmnimpor = New Global.System.Data.DataColumn("dmnimpor", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columndmnimpor)
            Me.columndcodarc = New Global.System.Data.DataColumn("dcodarc", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columndcodarc)
            Me.columndfeccom2 = New Global.System.Data.DataColumn("dfeccom2", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columndfeccom2)
            Me.columndfecdoc2 = New Global.System.Data.DataColumn("dfecdoc2", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columndfecdoc2)
            Me.columndfecven2 = New Global.System.Data.DataColumn("dfecven2", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columndfecven2)
            Me.columndcodane2 = New Global.System.Data.DataColumn("dcodane2", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columndcodane2)
            Me.columnDVANEXO = New Global.System.Data.DataColumn("DVANEXO", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDVANEXO)
            Me.columnDVANEXO2 = New Global.System.Data.DataColumn("DVANEXO2", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDVANEXO2)
            Me.columndtipcam = New Global.System.Data.DataColumn("dtipcam", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columndtipcam)
            Me.columndcantid = New Global.System.Data.DataColumn("dcantid", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columndcantid)
            Me.columndrete = New Global.System.Data.DataColumn("drete", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columndrete)
            Me.columndporre = New Global.System.Data.DataColumn("dporre", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columndporre)
            Me.columndtipdor = New Global.System.Data.DataColumn("dtipdor", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columndtipdor)
            Me.columndnumdor = New Global.System.Data.DataColumn("dnumdor", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columndnumdor)
            Me.columndfecdo2 = New Global.System.Data.DataColumn("dfecdo2", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columndfecdo2)
            Me.columndtiptas = New Global.System.Data.DataColumn("dtiptas", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columndtiptas)
            Me.columndimptas = New Global.System.Data.DataColumn("dimptas", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columndimptas)
            Me.columndimpbmn = New Global.System.Data.DataColumn("dimpbmn", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columndimpbmn)
            Me.columndimpbus = New Global.System.Data.DataColumn("dimpbus", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columndimpbus)
            Me.columndinacom = New Global.System.Data.DataColumn("dinacom", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columndinacom)
            Me.columndigvcom = New Global.System.Data.DataColumn("digvcom", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columndigvcom)
            Me.columndmedpag = New Global.System.Data.DataColumn("dmedpag", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columndmedpag)
            Me.columndmoncom = New Global.System.Data.DataColumn("dmoncom", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columndmoncom)
            Me.columndcolcom = New Global.System.Data.DataColumn("dcolcom", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columndcolcom)
            Me.columndbascom = New Global.System.Data.DataColumn("dbascom", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columndbascom)
            Me.columndtpconv = New Global.System.Data.DataColumn("dtpconv", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columndtpconv)
            Me.columndflgcom = New Global.System.Data.DataColumn("dflgcom", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columndflgcom)
            Me.columndtipaco = New Global.System.Data.DataColumn("dtipaco", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columndtipaco)
            Me.columndanecom = New Global.System.Data.DataColumn("danecom", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columndanecom)
            Me.columndsubdia.AllowDBNull = false
            Me.columndsubdia.MaxLength = 2
            Me.columndcompro.AllowDBNull = false
            Me.columndcompro.MaxLength = 6
            Me.columndsecue.MaxLength = 4
            Me.columndfeccom.AllowDBNull = false
            Me.columndfeccom.MaxLength = 6
            Me.columndcuenta.AllowDBNull = false
            Me.columndcuenta.MaxLength = 25
            Me.columndcodane.MaxLength = 11
            Me.columndcencos.MaxLength = 50
            Me.columndcodmon.AllowDBNull = false
            Me.columndcodmon.MaxLength = 2
            Me.columnddh.AllowDBNull = false
            Me.columnddh.MaxLength = 1
            Me.columnDTIPDOC.AllowDBNull = false
            Me.columnDTIPDOC.MaxLength = 2
            Me.columndnumdoc.AllowDBNull = false
            Me.columndnumdoc.MaxLength = 7
            Me.columndfecdoc.AllowDBNull = false
            Me.columndfecdoc.MaxLength = 6
            Me.columndfecven.AllowDBNull = false
            Me.columndfecven.MaxLength = 6
            Me.columndarea.MaxLength = 1
            Me.columndflag.AllowDBNull = false
            Me.columndflag.MaxLength = 1
            Me.columndxglosa.AllowDBNull = false
            Me.columndxglosa.MaxLength = 25
            Me.columndcodarc.MaxLength = 1
            Me.columndcodane2.MaxLength = 11
            Me.columnDVANEXO.AllowDBNull = false
            Me.columnDVANEXO.MaxLength = 1
            Me.columnDVANEXO2.MaxLength = 1
            Me.columndtipcam.AllowDBNull = false
            Me.columndcantid.AllowDBNull = false
            Me.columndrete.MaxLength = 1
            Me.columndporre.AllowDBNull = false
            Me.columndtipdor.MaxLength = 1
            Me.columndnumdor.MaxLength = 1
            Me.columndtiptas.MaxLength = 1
            Me.columndimptas.AllowDBNull = false
            Me.columndimpbmn.AllowDBNull = false
            Me.columndimpbus.AllowDBNull = false
            Me.columndinacom.AllowDBNull = false
            Me.columndigvcom.AllowDBNull = false
            Me.columndmedpag.MaxLength = 1
            Me.columndmoncom.MaxLength = 1
            Me.columndcolcom.MaxLength = 1
            Me.columndbascom.AllowDBNull = false
            Me.columndtpconv.MaxLength = 1
            Me.columndflgcom.MaxLength = 1
            Me.columndtipaco.MaxLength = 1
            Me.columndanecom.MaxLength = 1
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function NewMIGRAR_DETALLESRow() As MIGRAR_DETALLESRow
            Return CType(Me.NewRow,MIGRAR_DETALLESRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New MIGRAR_DETALLESRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(MIGRAR_DETALLESRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.MIGRAR_DETALLESRowChangedEvent) Is Nothing) Then
                RaiseEvent MIGRAR_DETALLESRowChanged(Me, New MIGRAR_DETALLESRowChangeEvent(CType(e.Row,MIGRAR_DETALLESRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.MIGRAR_DETALLESRowChangingEvent) Is Nothing) Then
                RaiseEvent MIGRAR_DETALLESRowChanging(Me, New MIGRAR_DETALLESRowChangeEvent(CType(e.Row,MIGRAR_DETALLESRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.MIGRAR_DETALLESRowDeletedEvent) Is Nothing) Then
                RaiseEvent MIGRAR_DETALLESRowDeleted(Me, New MIGRAR_DETALLESRowChangeEvent(CType(e.Row,MIGRAR_DETALLESRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.MIGRAR_DETALLESRowDeletingEvent) Is Nothing) Then
                RaiseEvent MIGRAR_DETALLESRowDeleting(Me, New MIGRAR_DETALLESRowChangeEvent(CType(e.Row,MIGRAR_DETALLESRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub RemoveMIGRAR_DETALLESRow(ByVal row As MIGRAR_DETALLESRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence
            Dim ds As dsMigrarDetalles = New dsMigrarDetalles
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "MIGRAR_DETALLESDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Partial Public Class MIGRAR_DETALLESRow
        Inherits Global.System.Data.DataRow
        
        Private tableMIGRAR_DETALLES As MIGRAR_DETALLESDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableMIGRAR_DETALLES = CType(Me.Table,MIGRAR_DETALLESDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property dsubdia() As String
            Get
                Return CType(Me(Me.tableMIGRAR_DETALLES.dsubdiaColumn),String)
            End Get
            Set
                Me(Me.tableMIGRAR_DETALLES.dsubdiaColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property dcompro() As String
            Get
                Return CType(Me(Me.tableMIGRAR_DETALLES.dcomproColumn),String)
            End Get
            Set
                Me(Me.tableMIGRAR_DETALLES.dcomproColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property dsecue() As String
            Get
                Try 
                    Return CType(Me(Me.tableMIGRAR_DETALLES.dsecueColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'dsecue' de la tabla 'MIGRAR_DETALLES' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableMIGRAR_DETALLES.dsecueColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property dfeccom() As String
            Get
                Return CType(Me(Me.tableMIGRAR_DETALLES.dfeccomColumn),String)
            End Get
            Set
                Me(Me.tableMIGRAR_DETALLES.dfeccomColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property dcuenta() As String
            Get
                Return CType(Me(Me.tableMIGRAR_DETALLES.dcuentaColumn),String)
            End Get
            Set
                Me(Me.tableMIGRAR_DETALLES.dcuentaColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property dcodane() As String
            Get
                Try 
                    Return CType(Me(Me.tableMIGRAR_DETALLES.dcodaneColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'dcodane' de la tabla 'MIGRAR_DETALLES' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableMIGRAR_DETALLES.dcodaneColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property dcencos() As String
            Get
                Try 
                    Return CType(Me(Me.tableMIGRAR_DETALLES.dcencosColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'dcencos' de la tabla 'MIGRAR_DETALLES' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableMIGRAR_DETALLES.dcencosColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property dcodmon() As String
            Get
                Return CType(Me(Me.tableMIGRAR_DETALLES.dcodmonColumn),String)
            End Get
            Set
                Me(Me.tableMIGRAR_DETALLES.dcodmonColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property ddh() As String
            Get
                Return CType(Me(Me.tableMIGRAR_DETALLES.ddhColumn),String)
            End Get
            Set
                Me(Me.tableMIGRAR_DETALLES.ddhColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property dimport() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableMIGRAR_DETALLES.dimportColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'dimport' de la tabla 'MIGRAR_DETALLES' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableMIGRAR_DETALLES.dimportColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property DTIPDOC() As String
            Get
                Return CType(Me(Me.tableMIGRAR_DETALLES.DTIPDOCColumn),String)
            End Get
            Set
                Me(Me.tableMIGRAR_DETALLES.DTIPDOCColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property dnumdoc() As String
            Get
                Return CType(Me(Me.tableMIGRAR_DETALLES.dnumdocColumn),String)
            End Get
            Set
                Me(Me.tableMIGRAR_DETALLES.dnumdocColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property dfecdoc() As String
            Get
                Return CType(Me(Me.tableMIGRAR_DETALLES.dfecdocColumn),String)
            End Get
            Set
                Me(Me.tableMIGRAR_DETALLES.dfecdocColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property dfecven() As String
            Get
                Return CType(Me(Me.tableMIGRAR_DETALLES.dfecvenColumn),String)
            End Get
            Set
                Me(Me.tableMIGRAR_DETALLES.dfecvenColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property darea() As String
            Get
                Try 
                    Return CType(Me(Me.tableMIGRAR_DETALLES.dareaColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'darea' de la tabla 'MIGRAR_DETALLES' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableMIGRAR_DETALLES.dareaColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property dflag() As String
            Get
                Return CType(Me(Me.tableMIGRAR_DETALLES.dflagColumn),String)
            End Get
            Set
                Me(Me.tableMIGRAR_DETALLES.dflagColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property ddate() As Date
            Get
                Try 
                    Return CType(Me(Me.tableMIGRAR_DETALLES.ddateColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'ddate' de la tabla 'MIGRAR_DETALLES' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableMIGRAR_DETALLES.ddateColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property dxglosa() As String
            Get
                Return CType(Me(Me.tableMIGRAR_DETALLES.dxglosaColumn),String)
            End Get
            Set
                Me(Me.tableMIGRAR_DETALLES.dxglosaColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property dusimpor() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableMIGRAR_DETALLES.dusimporColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'dusimpor' de la tabla 'MIGRAR_DETALLES' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableMIGRAR_DETALLES.dusimporColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property dmnimpor() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableMIGRAR_DETALLES.dmnimporColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'dmnimpor' de la tabla 'MIGRAR_DETALLES' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableMIGRAR_DETALLES.dmnimporColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property dcodarc() As String
            Get
                Try 
                    Return CType(Me(Me.tableMIGRAR_DETALLES.dcodarcColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'dcodarc' de la tabla 'MIGRAR_DETALLES' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableMIGRAR_DETALLES.dcodarcColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property dfeccom2() As Date
            Get
                Try 
                    Return CType(Me(Me.tableMIGRAR_DETALLES.dfeccom2Column),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'dfeccom2' de la tabla 'MIGRAR_DETALLES' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableMIGRAR_DETALLES.dfeccom2Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property dfecdoc2() As Date
            Get
                Try 
                    Return CType(Me(Me.tableMIGRAR_DETALLES.dfecdoc2Column),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'dfecdoc2' de la tabla 'MIGRAR_DETALLES' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableMIGRAR_DETALLES.dfecdoc2Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property dfecven2() As Date
            Get
                Try 
                    Return CType(Me(Me.tableMIGRAR_DETALLES.dfecven2Column),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'dfecven2' de la tabla 'MIGRAR_DETALLES' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableMIGRAR_DETALLES.dfecven2Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property dcodane2() As String
            Get
                Try 
                    Return CType(Me(Me.tableMIGRAR_DETALLES.dcodane2Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'dcodane2' de la tabla 'MIGRAR_DETALLES' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableMIGRAR_DETALLES.dcodane2Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property DVANEXO() As String
            Get
                Return CType(Me(Me.tableMIGRAR_DETALLES.DVANEXOColumn),String)
            End Get
            Set
                Me(Me.tableMIGRAR_DETALLES.DVANEXOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property DVANEXO2() As String
            Get
                Try 
                    Return CType(Me(Me.tableMIGRAR_DETALLES.DVANEXO2Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'DVANEXO2' de la tabla 'MIGRAR_DETALLES' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableMIGRAR_DETALLES.DVANEXO2Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property dtipcam() As Decimal
            Get
                Return CType(Me(Me.tableMIGRAR_DETALLES.dtipcamColumn),Decimal)
            End Get
            Set
                Me(Me.tableMIGRAR_DETALLES.dtipcamColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property dcantid() As Integer
            Get
                Return CType(Me(Me.tableMIGRAR_DETALLES.dcantidColumn),Integer)
            End Get
            Set
                Me(Me.tableMIGRAR_DETALLES.dcantidColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property drete() As String
            Get
                Try 
                    Return CType(Me(Me.tableMIGRAR_DETALLES.dreteColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'drete' de la tabla 'MIGRAR_DETALLES' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableMIGRAR_DETALLES.dreteColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property dporre() As Integer
            Get
                Return CType(Me(Me.tableMIGRAR_DETALLES.dporreColumn),Integer)
            End Get
            Set
                Me(Me.tableMIGRAR_DETALLES.dporreColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property dtipdor() As String
            Get
                Try 
                    Return CType(Me(Me.tableMIGRAR_DETALLES.dtipdorColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'dtipdor' de la tabla 'MIGRAR_DETALLES' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableMIGRAR_DETALLES.dtipdorColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property dnumdor() As String
            Get
                Try 
                    Return CType(Me(Me.tableMIGRAR_DETALLES.dnumdorColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'dnumdor' de la tabla 'MIGRAR_DETALLES' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableMIGRAR_DETALLES.dnumdorColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property dfecdo2() As Date
            Get
                Try 
                    Return CType(Me(Me.tableMIGRAR_DETALLES.dfecdo2Column),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'dfecdo2' de la tabla 'MIGRAR_DETALLES' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableMIGRAR_DETALLES.dfecdo2Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property dtiptas() As String
            Get
                Try 
                    Return CType(Me(Me.tableMIGRAR_DETALLES.dtiptasColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'dtiptas' de la tabla 'MIGRAR_DETALLES' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableMIGRAR_DETALLES.dtiptasColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property dimptas() As Integer
            Get
                Return CType(Me(Me.tableMIGRAR_DETALLES.dimptasColumn),Integer)
            End Get
            Set
                Me(Me.tableMIGRAR_DETALLES.dimptasColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property dimpbmn() As Integer
            Get
                Return CType(Me(Me.tableMIGRAR_DETALLES.dimpbmnColumn),Integer)
            End Get
            Set
                Me(Me.tableMIGRAR_DETALLES.dimpbmnColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property dimpbus() As Integer
            Get
                Return CType(Me(Me.tableMIGRAR_DETALLES.dimpbusColumn),Integer)
            End Get
            Set
                Me(Me.tableMIGRAR_DETALLES.dimpbusColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property dinacom() As Integer
            Get
                Return CType(Me(Me.tableMIGRAR_DETALLES.dinacomColumn),Integer)
            End Get
            Set
                Me(Me.tableMIGRAR_DETALLES.dinacomColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property digvcom() As Integer
            Get
                Return CType(Me(Me.tableMIGRAR_DETALLES.digvcomColumn),Integer)
            End Get
            Set
                Me(Me.tableMIGRAR_DETALLES.digvcomColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property dmedpag() As String
            Get
                Try 
                    Return CType(Me(Me.tableMIGRAR_DETALLES.dmedpagColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'dmedpag' de la tabla 'MIGRAR_DETALLES' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableMIGRAR_DETALLES.dmedpagColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property dmoncom() As String
            Get
                Try 
                    Return CType(Me(Me.tableMIGRAR_DETALLES.dmoncomColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'dmoncom' de la tabla 'MIGRAR_DETALLES' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableMIGRAR_DETALLES.dmoncomColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property dcolcom() As String
            Get
                Try 
                    Return CType(Me(Me.tableMIGRAR_DETALLES.dcolcomColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'dcolcom' de la tabla 'MIGRAR_DETALLES' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableMIGRAR_DETALLES.dcolcomColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property dbascom() As Integer
            Get
                Return CType(Me(Me.tableMIGRAR_DETALLES.dbascomColumn),Integer)
            End Get
            Set
                Me(Me.tableMIGRAR_DETALLES.dbascomColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property dtpconv() As String
            Get
                Try 
                    Return CType(Me(Me.tableMIGRAR_DETALLES.dtpconvColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'dtpconv' de la tabla 'MIGRAR_DETALLES' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableMIGRAR_DETALLES.dtpconvColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property dflgcom() As String
            Get
                Try 
                    Return CType(Me(Me.tableMIGRAR_DETALLES.dflgcomColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'dflgcom' de la tabla 'MIGRAR_DETALLES' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableMIGRAR_DETALLES.dflgcomColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property dtipaco() As String
            Get
                Try 
                    Return CType(Me(Me.tableMIGRAR_DETALLES.dtipacoColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'dtipaco' de la tabla 'MIGRAR_DETALLES' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableMIGRAR_DETALLES.dtipacoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property danecom() As String
            Get
                Try 
                    Return CType(Me(Me.tableMIGRAR_DETALLES.danecomColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'danecom' de la tabla 'MIGRAR_DETALLES' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableMIGRAR_DETALLES.danecomColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsdsecueNull() As Boolean
            Return Me.IsNull(Me.tableMIGRAR_DETALLES.dsecueColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetdsecueNull()
            Me(Me.tableMIGRAR_DETALLES.dsecueColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsdcodaneNull() As Boolean
            Return Me.IsNull(Me.tableMIGRAR_DETALLES.dcodaneColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetdcodaneNull()
            Me(Me.tableMIGRAR_DETALLES.dcodaneColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsdcencosNull() As Boolean
            Return Me.IsNull(Me.tableMIGRAR_DETALLES.dcencosColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetdcencosNull()
            Me(Me.tableMIGRAR_DETALLES.dcencosColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsdimportNull() As Boolean
            Return Me.IsNull(Me.tableMIGRAR_DETALLES.dimportColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetdimportNull()
            Me(Me.tableMIGRAR_DETALLES.dimportColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsdareaNull() As Boolean
            Return Me.IsNull(Me.tableMIGRAR_DETALLES.dareaColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetdareaNull()
            Me(Me.tableMIGRAR_DETALLES.dareaColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsddateNull() As Boolean
            Return Me.IsNull(Me.tableMIGRAR_DETALLES.ddateColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetddateNull()
            Me(Me.tableMIGRAR_DETALLES.ddateColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsdusimporNull() As Boolean
            Return Me.IsNull(Me.tableMIGRAR_DETALLES.dusimporColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetdusimporNull()
            Me(Me.tableMIGRAR_DETALLES.dusimporColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsdmnimporNull() As Boolean
            Return Me.IsNull(Me.tableMIGRAR_DETALLES.dmnimporColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetdmnimporNull()
            Me(Me.tableMIGRAR_DETALLES.dmnimporColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsdcodarcNull() As Boolean
            Return Me.IsNull(Me.tableMIGRAR_DETALLES.dcodarcColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetdcodarcNull()
            Me(Me.tableMIGRAR_DETALLES.dcodarcColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isdfeccom2Null() As Boolean
            Return Me.IsNull(Me.tableMIGRAR_DETALLES.dfeccom2Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setdfeccom2Null()
            Me(Me.tableMIGRAR_DETALLES.dfeccom2Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isdfecdoc2Null() As Boolean
            Return Me.IsNull(Me.tableMIGRAR_DETALLES.dfecdoc2Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setdfecdoc2Null()
            Me(Me.tableMIGRAR_DETALLES.dfecdoc2Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isdfecven2Null() As Boolean
            Return Me.IsNull(Me.tableMIGRAR_DETALLES.dfecven2Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setdfecven2Null()
            Me(Me.tableMIGRAR_DETALLES.dfecven2Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isdcodane2Null() As Boolean
            Return Me.IsNull(Me.tableMIGRAR_DETALLES.dcodane2Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setdcodane2Null()
            Me(Me.tableMIGRAR_DETALLES.dcodane2Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsDVANEXO2Null() As Boolean
            Return Me.IsNull(Me.tableMIGRAR_DETALLES.DVANEXO2Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetDVANEXO2Null()
            Me(Me.tableMIGRAR_DETALLES.DVANEXO2Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsdreteNull() As Boolean
            Return Me.IsNull(Me.tableMIGRAR_DETALLES.dreteColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetdreteNull()
            Me(Me.tableMIGRAR_DETALLES.dreteColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsdtipdorNull() As Boolean
            Return Me.IsNull(Me.tableMIGRAR_DETALLES.dtipdorColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetdtipdorNull()
            Me(Me.tableMIGRAR_DETALLES.dtipdorColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsdnumdorNull() As Boolean
            Return Me.IsNull(Me.tableMIGRAR_DETALLES.dnumdorColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetdnumdorNull()
            Me(Me.tableMIGRAR_DETALLES.dnumdorColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isdfecdo2Null() As Boolean
            Return Me.IsNull(Me.tableMIGRAR_DETALLES.dfecdo2Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setdfecdo2Null()
            Me(Me.tableMIGRAR_DETALLES.dfecdo2Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsdtiptasNull() As Boolean
            Return Me.IsNull(Me.tableMIGRAR_DETALLES.dtiptasColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetdtiptasNull()
            Me(Me.tableMIGRAR_DETALLES.dtiptasColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsdmedpagNull() As Boolean
            Return Me.IsNull(Me.tableMIGRAR_DETALLES.dmedpagColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetdmedpagNull()
            Me(Me.tableMIGRAR_DETALLES.dmedpagColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsdmoncomNull() As Boolean
            Return Me.IsNull(Me.tableMIGRAR_DETALLES.dmoncomColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetdmoncomNull()
            Me(Me.tableMIGRAR_DETALLES.dmoncomColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsdcolcomNull() As Boolean
            Return Me.IsNull(Me.tableMIGRAR_DETALLES.dcolcomColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetdcolcomNull()
            Me(Me.tableMIGRAR_DETALLES.dcolcomColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsdtpconvNull() As Boolean
            Return Me.IsNull(Me.tableMIGRAR_DETALLES.dtpconvColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetdtpconvNull()
            Me(Me.tableMIGRAR_DETALLES.dtpconvColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsdflgcomNull() As Boolean
            Return Me.IsNull(Me.tableMIGRAR_DETALLES.dflgcomColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetdflgcomNull()
            Me(Me.tableMIGRAR_DETALLES.dflgcomColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsdtipacoNull() As Boolean
            Return Me.IsNull(Me.tableMIGRAR_DETALLES.dtipacoColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetdtipacoNull()
            Me(Me.tableMIGRAR_DETALLES.dtipacoColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsdanecomNull() As Boolean
            Return Me.IsNull(Me.tableMIGRAR_DETALLES.danecomColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetdanecomNull()
            Me(Me.tableMIGRAR_DETALLES.danecomColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Public Class MIGRAR_DETALLESRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As MIGRAR_DETALLESRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New(ByVal row As MIGRAR_DETALLESRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Row() As MIGRAR_DETALLESRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
End Class
