'------------------------------------------------------------------------------
' <auto-generated>
'     Este código fue generado por una herramienta.
'     Versión del motor en tiempo de ejecución:2.0.50727.5477
'
'     Los cambios en este archivo podrían causar un comportamiento incorrecto y se perderán si
'     se vuelve a generar el código.
' </auto-generated>
'------------------------------------------------------------------------------

Option Strict Off
Option Explicit On



'''<summary>
'''Represents a strongly typed in-memory cache of data.
'''</summary>
<Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0"),  _
 Global.System.Serializable(),  _
 Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
 Global.System.ComponentModel.ToolboxItem(true),  _
 Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema"),  _
 Global.System.Xml.Serialization.XmlRootAttribute("dsProspectos"),  _
 Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")>  _
Partial Public Class dsProspectos
    Inherits Global.System.Data.DataSet
    
    Private tablePROSPECTOS As PROSPECTOSDataTable
    
    Private _schemaSerializationMode As Global.System.Data.SchemaSerializationMode = Global.System.Data.SchemaSerializationMode.IncludeSchema
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Public Sub New()
        MyBase.New
        Me.BeginInit
        Me.InitClass
        Dim schemaChangedHandler As Global.System.ComponentModel.CollectionChangeEventHandler = AddressOf Me.SchemaChanged
        AddHandler MyBase.Tables.CollectionChanged, schemaChangedHandler
        AddHandler MyBase.Relations.CollectionChanged, schemaChangedHandler
        Me.EndInit
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
        MyBase.New(info, context, false)
        If (Me.IsBinarySerialized(info, context) = true) Then
            Me.InitVars(false)
            Dim schemaChangedHandler1 As Global.System.ComponentModel.CollectionChangeEventHandler = AddressOf Me.SchemaChanged
            AddHandler Me.Tables.CollectionChanged, schemaChangedHandler1
            AddHandler Me.Relations.CollectionChanged, schemaChangedHandler1
            Return
        End If
        Dim strSchema As String = CType(info.GetValue("XmlSchema", GetType(String)),String)
        If (Me.DetermineSchemaSerializationMode(info, context) = Global.System.Data.SchemaSerializationMode.IncludeSchema) Then
            Dim ds As Global.System.Data.DataSet = New Global.System.Data.DataSet
            ds.ReadXmlSchema(New Global.System.Xml.XmlTextReader(New Global.System.IO.StringReader(strSchema)))
            If (Not (ds.Tables("PROSPECTOS")) Is Nothing) Then
                MyBase.Tables.Add(New PROSPECTOSDataTable(ds.Tables("PROSPECTOS")))
            End If
            Me.DataSetName = ds.DataSetName
            Me.Prefix = ds.Prefix
            Me.Namespace = ds.Namespace
            Me.Locale = ds.Locale
            Me.CaseSensitive = ds.CaseSensitive
            Me.EnforceConstraints = ds.EnforceConstraints
            Me.Merge(ds, false, Global.System.Data.MissingSchemaAction.Add)
            Me.InitVars
        Else
            Me.ReadXmlSchema(New Global.System.Xml.XmlTextReader(New Global.System.IO.StringReader(strSchema)))
        End If
        Me.GetSerializationData(info, context)
        Dim schemaChangedHandler As Global.System.ComponentModel.CollectionChangeEventHandler = AddressOf Me.SchemaChanged
        AddHandler MyBase.Tables.CollectionChanged, schemaChangedHandler
        AddHandler Me.Relations.CollectionChanged, schemaChangedHandler
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property PROSPECTOS() As PROSPECTOSDataTable
        Get
            Return Me.tablePROSPECTOS
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.ComponentModel.BrowsableAttribute(true),  _
     Global.System.ComponentModel.DesignerSerializationVisibilityAttribute(Global.System.ComponentModel.DesignerSerializationVisibility.Visible)>  _
    Public Overrides Property SchemaSerializationMode() As Global.System.Data.SchemaSerializationMode
        Get
            Return Me._schemaSerializationMode
        End Get
        Set
            Me._schemaSerializationMode = value
        End Set
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.ComponentModel.DesignerSerializationVisibilityAttribute(Global.System.ComponentModel.DesignerSerializationVisibility.Hidden)>  _
    Public Shadows ReadOnly Property Tables() As Global.System.Data.DataTableCollection
        Get
            Return MyBase.Tables
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.ComponentModel.DesignerSerializationVisibilityAttribute(Global.System.ComponentModel.DesignerSerializationVisibility.Hidden)>  _
    Public Shadows ReadOnly Property Relations() As Global.System.Data.DataRelationCollection
        Get
            Return MyBase.Relations
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Protected Overrides Sub InitializeDerivedDataSet()
        Me.BeginInit
        Me.InitClass
        Me.EndInit
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Public Overrides Function Clone() As Global.System.Data.DataSet
        Dim cln As dsProspectos = CType(MyBase.Clone,dsProspectos)
        cln.InitVars
        cln.SchemaSerializationMode = Me.SchemaSerializationMode
        Return cln
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Protected Overrides Function ShouldSerializeTables() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Protected Overrides Function ShouldSerializeRelations() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Protected Overrides Sub ReadXmlSerializable(ByVal reader As Global.System.Xml.XmlReader)
        If (Me.DetermineSchemaSerializationMode(reader) = Global.System.Data.SchemaSerializationMode.IncludeSchema) Then
            Me.Reset
            Dim ds As Global.System.Data.DataSet = New Global.System.Data.DataSet
            ds.ReadXml(reader)
            If (Not (ds.Tables("PROSPECTOS")) Is Nothing) Then
                MyBase.Tables.Add(New PROSPECTOSDataTable(ds.Tables("PROSPECTOS")))
            End If
            Me.DataSetName = ds.DataSetName
            Me.Prefix = ds.Prefix
            Me.Namespace = ds.Namespace
            Me.Locale = ds.Locale
            Me.CaseSensitive = ds.CaseSensitive
            Me.EnforceConstraints = ds.EnforceConstraints
            Me.Merge(ds, false, Global.System.Data.MissingSchemaAction.Add)
            Me.InitVars
        Else
            Me.ReadXml(reader)
            Me.InitVars
        End If
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Protected Overrides Function GetSchemaSerializable() As Global.System.Xml.Schema.XmlSchema
        Dim stream As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
        Me.WriteXmlSchema(New Global.System.Xml.XmlTextWriter(stream, Nothing))
        stream.Position = 0
        Return Global.System.Xml.Schema.XmlSchema.Read(New Global.System.Xml.XmlTextReader(stream), Nothing)
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Friend Overloads Sub InitVars()
        Me.InitVars(true)
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Friend Overloads Sub InitVars(ByVal initTable As Boolean)
        Me.tablePROSPECTOS = CType(MyBase.Tables("PROSPECTOS"),PROSPECTOSDataTable)
        If (initTable = true) Then
            If (Not (Me.tablePROSPECTOS) Is Nothing) Then
                Me.tablePROSPECTOS.InitVars
            End If
        End If
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Private Sub InitClass()
        Me.DataSetName = "dsProspectos"
        Me.Prefix = ""
        Me.Namespace = "http://tempuri.org/dsProspectos.xsd"
        Me.EnforceConstraints = true
        Me.SchemaSerializationMode = Global.System.Data.SchemaSerializationMode.IncludeSchema
        Me.tablePROSPECTOS = New PROSPECTOSDataTable
        MyBase.Tables.Add(Me.tablePROSPECTOS)
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Private Function ShouldSerializePROSPECTOS() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Private Sub SchemaChanged(ByVal sender As Object, ByVal e As Global.System.ComponentModel.CollectionChangeEventArgs)
        If (e.Action = Global.System.ComponentModel.CollectionChangeAction.Remove) Then
            Me.InitVars
        End If
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Public Shared Function GetTypedDataSetSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
        Dim ds As dsProspectos = New dsProspectos
        Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType
        Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence
        Dim any As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
        any.Namespace = ds.Namespace
        sequence.Items.Add(any)
        type.Particle = sequence
        Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
        If xs.Contains(dsSchema.TargetNamespace) Then
            Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
            Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
            Try 
                Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                dsSchema.Write(s1)
                Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                Do While schemas.MoveNext
                    schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                    s2.SetLength(0)
                    schema.Write(s2)
                    If (s1.Length = s2.Length) Then
                        s1.Position = 0
                        s2.Position = 0
                        
                        Do While ((s1.Position <> s1.Length)  _
                                    AndAlso (s1.ReadByte = s2.ReadByte))
                            
                            
                        Loop
                        If (s1.Position = s1.Length) Then
                            Return type
                        End If
                    End If
                    
                Loop
            Finally
                If (Not (s1) Is Nothing) Then
                    s1.Close
                End If
                If (Not (s2) Is Nothing) Then
                    s2.Close
                End If
            End Try
        End If
        xs.Add(dsSchema)
        Return type
    End Function
    
    Public Delegate Sub PROSPECTOSRowChangeEventHandler(ByVal sender As Object, ByVal e As PROSPECTOSRowChangeEvent)
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0"),  _
     Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class PROSPECTOSDataTable
        Inherits Global.System.Data.TypedTableBase(Of PROSPECTOSRow)
        
        Private columnEMPRESA As Global.System.Data.DataColumn
        
        Private columnPROSPECTO As Global.System.Data.DataColumn
        
        Private columnVERSION As Global.System.Data.DataColumn
        
        Private columnEJERCICIO As Global.System.Data.DataColumn
        
        Private columnMES As Global.System.Data.DataColumn
        
        Private columnDESCRIPCION As Global.System.Data.DataColumn
        
        Private columnCUENTA_COMERCIAL As Global.System.Data.DataColumn
        
        Private columnTIPO_SERVICIO As Global.System.Data.DataColumn
        
        Private columnRESPONSABLE_VENTA As Global.System.Data.DataColumn
        
        Private columnRESPONSABLE_EJECUCION As Global.System.Data.DataColumn
        
        Private columnPROBABILIDAD As Global.System.Data.DataColumn
        
        Private columnETAPA As Global.System.Data.DataColumn
        
        Private columnFECHA_COTIZACION As Global.System.Data.DataColumn
        
        Private columnFECHA_APROBACION As Global.System.Data.DataColumn
        
        Private columnFECHA_ENTREGA As Global.System.Data.DataColumn
        
        Private columnPERIODO_INICIO As Global.System.Data.DataColumn
        
        Private columnPERIODO_CIERRE As Global.System.Data.DataColumn
        
        Private columnTIPO_MONEDA As Global.System.Data.DataColumn
        
        Private columnMONTO_TOTAL As Global.System.Data.DataColumn
        
        Private columnCONTACTO_COMERCIAL As Global.System.Data.DataColumn
        
        Private columnCOSTO_BIENES As Global.System.Data.DataColumn
        
        Private columnCOSTO_SUBCONTRATAS As Global.System.Data.DataColumn
        
        Private columnGASTOS_GENERALES As Global.System.Data.DataColumn
        
        Private columnGASTOS_INVERSION As Global.System.Data.DataColumn
        
        Private columnGASTOS_FINANCIAMIENTO As Global.System.Data.DataColumn
        
        Private columnMARGEN As Global.System.Data.DataColumn
        
        Private columnTIPO_ORDEN As Global.System.Data.DataColumn
        
        Private columnCODIGO_PROYECTO As Global.System.Data.DataColumn
        
        Private columnULTIMA_FACTURACION As Global.System.Data.DataColumn
        
        Private columnPENDIENTE_FACTURAR As Global.System.Data.DataColumn
        
        Private columnFECHA_ENCUESTA As Global.System.Data.DataColumn
        
        Private columnUSUARIO_ENCUESTA As Global.System.Data.DataColumn
        
        Private columnVALORIZACION_ENCUESTA As Global.System.Data.DataColumn
        
        Private columnCOMENTARIO As Global.System.Data.DataColumn
        
        Private columnORIGEN As Global.System.Data.DataColumn
        
        Private columnESTADO As Global.System.Data.DataColumn
        
        Private columnUSUARIO_REGISTRO As Global.System.Data.DataColumn
        
        Private columnFECHA_REGISTRO As Global.System.Data.DataColumn
        
        Private columnUSUARIO_MODIFICA As Global.System.Data.DataColumn
        
        Private columnFECHA_MODIFICA As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "PROSPECTOS"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property EMPRESAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnEMPRESA
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property PROSPECTOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPROSPECTO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property VERSIONColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnVERSION
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property EJERCICIOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnEJERCICIO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property MESColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnMES
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property DESCRIPCIONColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDESCRIPCION
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property CUENTA_COMERCIALColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCUENTA_COMERCIAL
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property TIPO_SERVICIOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTIPO_SERVICIO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property RESPONSABLE_VENTAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnRESPONSABLE_VENTA
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property RESPONSABLE_EJECUCIONColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnRESPONSABLE_EJECUCION
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property PROBABILIDADColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPROBABILIDAD
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property ETAPAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnETAPA
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property FECHA_COTIZACIONColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnFECHA_COTIZACION
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property FECHA_APROBACIONColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnFECHA_APROBACION
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property FECHA_ENTREGAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnFECHA_ENTREGA
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property PERIODO_INICIOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPERIODO_INICIO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property PERIODO_CIERREColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPERIODO_CIERRE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property TIPO_MONEDAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTIPO_MONEDA
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property MONTO_TOTALColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnMONTO_TOTAL
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property CONTACTO_COMERCIALColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCONTACTO_COMERCIAL
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property COSTO_BIENESColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCOSTO_BIENES
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property COSTO_SUBCONTRATASColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCOSTO_SUBCONTRATAS
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property GASTOS_GENERALESColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnGASTOS_GENERALES
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property GASTOS_INVERSIONColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnGASTOS_INVERSION
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property GASTOS_FINANCIAMIENTOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnGASTOS_FINANCIAMIENTO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property MARGENColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnMARGEN
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property TIPO_ORDENColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTIPO_ORDEN
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property CODIGO_PROYECTOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCODIGO_PROYECTO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property ULTIMA_FACTURACIONColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnULTIMA_FACTURACION
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property PENDIENTE_FACTURARColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPENDIENTE_FACTURAR
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property FECHA_ENCUESTAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnFECHA_ENCUESTA
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property USUARIO_ENCUESTAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnUSUARIO_ENCUESTA
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property VALORIZACION_ENCUESTAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnVALORIZACION_ENCUESTA
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property COMENTARIOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCOMENTARIO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property ORIGENColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnORIGEN
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property ESTADOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnESTADO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property USUARIO_REGISTROColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnUSUARIO_REGISTRO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property FECHA_REGISTROColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnFECHA_REGISTRO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property USUARIO_MODIFICAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnUSUARIO_MODIFICA
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property FECHA_MODIFICAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnFECHA_MODIFICA
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As PROSPECTOSRow
            Get
                Return CType(Me.Rows(index),PROSPECTOSRow)
            End Get
        End Property
        
        Public Event PROSPECTOSRowChanging As PROSPECTOSRowChangeEventHandler
        
        Public Event PROSPECTOSRowChanged As PROSPECTOSRowChangeEventHandler
        
        Public Event PROSPECTOSRowDeleting As PROSPECTOSRowChangeEventHandler
        
        Public Event PROSPECTOSRowDeleted As PROSPECTOSRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Sub AddPROSPECTOSRow(ByVal row As PROSPECTOSRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Function AddPROSPECTOSRow( _
                    ByVal EMPRESA As String,  _
                    ByVal PROSPECTO As String,  _
                    ByVal VERSION As String,  _
                    ByVal EJERCICIO As String,  _
                    ByVal MES As String,  _
                    ByVal DESCRIPCION As String,  _
                    ByVal CUENTA_COMERCIAL As String,  _
                    ByVal TIPO_SERVICIO As String,  _
                    ByVal RESPONSABLE_VENTA As String,  _
                    ByVal RESPONSABLE_EJECUCION As String,  _
                    ByVal PROBABILIDAD As String,  _
                    ByVal ETAPA As String,  _
                    ByVal FECHA_COTIZACION As Date,  _
                    ByVal FECHA_APROBACION As Date,  _
                    ByVal FECHA_ENTREGA As Date,  _
                    ByVal PERIODO_INICIO As String,  _
                    ByVal PERIODO_CIERRE As String,  _
                    ByVal TIPO_MONEDA As String,  _
                    ByVal MONTO_TOTAL As Decimal,  _
                    ByVal CONTACTO_COMERCIAL As String,  _
                    ByVal COSTO_BIENES As Decimal,  _
                    ByVal COSTO_SUBCONTRATAS As Decimal,  _
                    ByVal GASTOS_GENERALES As Decimal,  _
                    ByVal GASTOS_INVERSION As Decimal,  _
                    ByVal GASTOS_FINANCIAMIENTO As Decimal,  _
                    ByVal MARGEN As Decimal,  _
                    ByVal TIPO_ORDEN As String,  _
                    ByVal CODIGO_PROYECTO As String,  _
                    ByVal ULTIMA_FACTURACION As String,  _
                    ByVal PENDIENTE_FACTURAR As Decimal,  _
                    ByVal FECHA_ENCUESTA As Date,  _
                    ByVal USUARIO_ENCUESTA As String,  _
                    ByVal VALORIZACION_ENCUESTA As Decimal,  _
                    ByVal COMENTARIO As String,  _
                    ByVal ORIGEN As String,  _
                    ByVal ESTADO As String,  _
                    ByVal USUARIO_REGISTRO As String,  _
                    ByVal FECHA_REGISTRO As Date,  _
                    ByVal USUARIO_MODIFICA As String,  _
                    ByVal FECHA_MODIFICA As Date) As PROSPECTOSRow
            Dim rowPROSPECTOSRow As PROSPECTOSRow = CType(Me.NewRow,PROSPECTOSRow)
            Dim columnValuesArray() As Object = New Object() {EMPRESA, PROSPECTO, VERSION, EJERCICIO, MES, DESCRIPCION, CUENTA_COMERCIAL, TIPO_SERVICIO, RESPONSABLE_VENTA, RESPONSABLE_EJECUCION, PROBABILIDAD, ETAPA, FECHA_COTIZACION, FECHA_APROBACION, FECHA_ENTREGA, PERIODO_INICIO, PERIODO_CIERRE, TIPO_MONEDA, MONTO_TOTAL, CONTACTO_COMERCIAL, COSTO_BIENES, COSTO_SUBCONTRATAS, GASTOS_GENERALES, GASTOS_INVERSION, GASTOS_FINANCIAMIENTO, MARGEN, TIPO_ORDEN, CODIGO_PROYECTO, ULTIMA_FACTURACION, PENDIENTE_FACTURAR, FECHA_ENCUESTA, USUARIO_ENCUESTA, VALORIZACION_ENCUESTA, COMENTARIO, ORIGEN, ESTADO, USUARIO_REGISTRO, FECHA_REGISTRO, USUARIO_MODIFICA, FECHA_MODIFICA}
            rowPROSPECTOSRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowPROSPECTOSRow)
            Return rowPROSPECTOSRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function FindByEMPRESAPROSPECTOVERSION(ByVal EMPRESA As String, ByVal PROSPECTO As String, ByVal VERSION As String) As PROSPECTOSRow
            Return CType(Me.Rows.Find(New Object() {EMPRESA, PROSPECTO, VERSION}),PROSPECTOSRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As PROSPECTOSDataTable = CType(MyBase.Clone,PROSPECTOSDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New PROSPECTOSDataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub InitVars()
            Me.columnEMPRESA = MyBase.Columns("EMPRESA")
            Me.columnPROSPECTO = MyBase.Columns("PROSPECTO")
            Me.columnVERSION = MyBase.Columns("VERSION")
            Me.columnEJERCICIO = MyBase.Columns("EJERCICIO")
            Me.columnMES = MyBase.Columns("MES")
            Me.columnDESCRIPCION = MyBase.Columns("DESCRIPCION")
            Me.columnCUENTA_COMERCIAL = MyBase.Columns("CUENTA_COMERCIAL")
            Me.columnTIPO_SERVICIO = MyBase.Columns("TIPO_SERVICIO")
            Me.columnRESPONSABLE_VENTA = MyBase.Columns("RESPONSABLE_VENTA")
            Me.columnRESPONSABLE_EJECUCION = MyBase.Columns("RESPONSABLE_EJECUCION")
            Me.columnPROBABILIDAD = MyBase.Columns("PROBABILIDAD")
            Me.columnETAPA = MyBase.Columns("ETAPA")
            Me.columnFECHA_COTIZACION = MyBase.Columns("FECHA_COTIZACION")
            Me.columnFECHA_APROBACION = MyBase.Columns("FECHA_APROBACION")
            Me.columnFECHA_ENTREGA = MyBase.Columns("FECHA_ENTREGA")
            Me.columnPERIODO_INICIO = MyBase.Columns("PERIODO_INICIO")
            Me.columnPERIODO_CIERRE = MyBase.Columns("PERIODO_CIERRE")
            Me.columnTIPO_MONEDA = MyBase.Columns("TIPO_MONEDA")
            Me.columnMONTO_TOTAL = MyBase.Columns("MONTO_TOTAL")
            Me.columnCONTACTO_COMERCIAL = MyBase.Columns("CONTACTO_COMERCIAL")
            Me.columnCOSTO_BIENES = MyBase.Columns("COSTO_BIENES")
            Me.columnCOSTO_SUBCONTRATAS = MyBase.Columns("COSTO_SUBCONTRATAS")
            Me.columnGASTOS_GENERALES = MyBase.Columns("GASTOS_GENERALES")
            Me.columnGASTOS_INVERSION = MyBase.Columns("GASTOS_INVERSION")
            Me.columnGASTOS_FINANCIAMIENTO = MyBase.Columns("GASTOS_FINANCIAMIENTO")
            Me.columnMARGEN = MyBase.Columns("MARGEN")
            Me.columnTIPO_ORDEN = MyBase.Columns("TIPO_ORDEN")
            Me.columnCODIGO_PROYECTO = MyBase.Columns("CODIGO_PROYECTO")
            Me.columnULTIMA_FACTURACION = MyBase.Columns("ULTIMA_FACTURACION")
            Me.columnPENDIENTE_FACTURAR = MyBase.Columns("PENDIENTE_FACTURAR")
            Me.columnFECHA_ENCUESTA = MyBase.Columns("FECHA_ENCUESTA")
            Me.columnUSUARIO_ENCUESTA = MyBase.Columns("USUARIO_ENCUESTA")
            Me.columnVALORIZACION_ENCUESTA = MyBase.Columns("VALORIZACION_ENCUESTA")
            Me.columnCOMENTARIO = MyBase.Columns("COMENTARIO")
            Me.columnORIGEN = MyBase.Columns("ORIGEN")
            Me.columnESTADO = MyBase.Columns("ESTADO")
            Me.columnUSUARIO_REGISTRO = MyBase.Columns("USUARIO_REGISTRO")
            Me.columnFECHA_REGISTRO = MyBase.Columns("FECHA_REGISTRO")
            Me.columnUSUARIO_MODIFICA = MyBase.Columns("USUARIO_MODIFICA")
            Me.columnFECHA_MODIFICA = MyBase.Columns("FECHA_MODIFICA")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitClass()
            Me.columnEMPRESA = New Global.System.Data.DataColumn("EMPRESA", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnEMPRESA)
            Me.columnPROSPECTO = New Global.System.Data.DataColumn("PROSPECTO", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPROSPECTO)
            Me.columnVERSION = New Global.System.Data.DataColumn("VERSION", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnVERSION)
            Me.columnEJERCICIO = New Global.System.Data.DataColumn("EJERCICIO", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnEJERCICIO)
            Me.columnMES = New Global.System.Data.DataColumn("MES", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMES)
            Me.columnDESCRIPCION = New Global.System.Data.DataColumn("DESCRIPCION", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDESCRIPCION)
            Me.columnCUENTA_COMERCIAL = New Global.System.Data.DataColumn("CUENTA_COMERCIAL", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCUENTA_COMERCIAL)
            Me.columnTIPO_SERVICIO = New Global.System.Data.DataColumn("TIPO_SERVICIO", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTIPO_SERVICIO)
            Me.columnRESPONSABLE_VENTA = New Global.System.Data.DataColumn("RESPONSABLE_VENTA", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRESPONSABLE_VENTA)
            Me.columnRESPONSABLE_EJECUCION = New Global.System.Data.DataColumn("RESPONSABLE_EJECUCION", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRESPONSABLE_EJECUCION)
            Me.columnPROBABILIDAD = New Global.System.Data.DataColumn("PROBABILIDAD", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPROBABILIDAD)
            Me.columnETAPA = New Global.System.Data.DataColumn("ETAPA", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnETAPA)
            Me.columnFECHA_COTIZACION = New Global.System.Data.DataColumn("FECHA_COTIZACION", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFECHA_COTIZACION)
            Me.columnFECHA_APROBACION = New Global.System.Data.DataColumn("FECHA_APROBACION", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFECHA_APROBACION)
            Me.columnFECHA_ENTREGA = New Global.System.Data.DataColumn("FECHA_ENTREGA", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFECHA_ENTREGA)
            Me.columnPERIODO_INICIO = New Global.System.Data.DataColumn("PERIODO_INICIO", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPERIODO_INICIO)
            Me.columnPERIODO_CIERRE = New Global.System.Data.DataColumn("PERIODO_CIERRE", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPERIODO_CIERRE)
            Me.columnTIPO_MONEDA = New Global.System.Data.DataColumn("TIPO_MONEDA", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTIPO_MONEDA)
            Me.columnMONTO_TOTAL = New Global.System.Data.DataColumn("MONTO_TOTAL", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMONTO_TOTAL)
            Me.columnCONTACTO_COMERCIAL = New Global.System.Data.DataColumn("CONTACTO_COMERCIAL", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCONTACTO_COMERCIAL)
            Me.columnCOSTO_BIENES = New Global.System.Data.DataColumn("COSTO_BIENES", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCOSTO_BIENES)
            Me.columnCOSTO_SUBCONTRATAS = New Global.System.Data.DataColumn("COSTO_SUBCONTRATAS", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCOSTO_SUBCONTRATAS)
            Me.columnGASTOS_GENERALES = New Global.System.Data.DataColumn("GASTOS_GENERALES", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnGASTOS_GENERALES)
            Me.columnGASTOS_INVERSION = New Global.System.Data.DataColumn("GASTOS_INVERSION", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnGASTOS_INVERSION)
            Me.columnGASTOS_FINANCIAMIENTO = New Global.System.Data.DataColumn("GASTOS_FINANCIAMIENTO", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnGASTOS_FINANCIAMIENTO)
            Me.columnMARGEN = New Global.System.Data.DataColumn("MARGEN", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMARGEN)
            Me.columnTIPO_ORDEN = New Global.System.Data.DataColumn("TIPO_ORDEN", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTIPO_ORDEN)
            Me.columnCODIGO_PROYECTO = New Global.System.Data.DataColumn("CODIGO_PROYECTO", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCODIGO_PROYECTO)
            Me.columnULTIMA_FACTURACION = New Global.System.Data.DataColumn("ULTIMA_FACTURACION", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnULTIMA_FACTURACION)
            Me.columnPENDIENTE_FACTURAR = New Global.System.Data.DataColumn("PENDIENTE_FACTURAR", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPENDIENTE_FACTURAR)
            Me.columnFECHA_ENCUESTA = New Global.System.Data.DataColumn("FECHA_ENCUESTA", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFECHA_ENCUESTA)
            Me.columnUSUARIO_ENCUESTA = New Global.System.Data.DataColumn("USUARIO_ENCUESTA", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnUSUARIO_ENCUESTA)
            Me.columnVALORIZACION_ENCUESTA = New Global.System.Data.DataColumn("VALORIZACION_ENCUESTA", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnVALORIZACION_ENCUESTA)
            Me.columnCOMENTARIO = New Global.System.Data.DataColumn("COMENTARIO", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCOMENTARIO)
            Me.columnORIGEN = New Global.System.Data.DataColumn("ORIGEN", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnORIGEN)
            Me.columnESTADO = New Global.System.Data.DataColumn("ESTADO", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnESTADO)
            Me.columnUSUARIO_REGISTRO = New Global.System.Data.DataColumn("USUARIO_REGISTRO", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnUSUARIO_REGISTRO)
            Me.columnFECHA_REGISTRO = New Global.System.Data.DataColumn("FECHA_REGISTRO", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFECHA_REGISTRO)
            Me.columnUSUARIO_MODIFICA = New Global.System.Data.DataColumn("USUARIO_MODIFICA", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnUSUARIO_MODIFICA)
            Me.columnFECHA_MODIFICA = New Global.System.Data.DataColumn("FECHA_MODIFICA", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFECHA_MODIFICA)
            Me.Constraints.Add(New Global.System.Data.UniqueConstraint("Constraint1", New Global.System.Data.DataColumn() {Me.columnEMPRESA, Me.columnPROSPECTO, Me.columnVERSION}, true))
            Me.columnEMPRESA.AllowDBNull = false
            Me.columnEMPRESA.MaxLength = 3
            Me.columnPROSPECTO.AllowDBNull = false
            Me.columnPROSPECTO.MaxLength = 12
            Me.columnVERSION.AllowDBNull = false
            Me.columnVERSION.MaxLength = 2
            Me.columnEJERCICIO.AllowDBNull = false
            Me.columnEJERCICIO.MaxLength = 4
            Me.columnMES.AllowDBNull = false
            Me.columnMES.MaxLength = 2
            Me.columnDESCRIPCION.AllowDBNull = false
            Me.columnDESCRIPCION.MaxLength = 150
            Me.columnCUENTA_COMERCIAL.AllowDBNull = false
            Me.columnCUENTA_COMERCIAL.MaxLength = 8
            Me.columnTIPO_SERVICIO.AllowDBNull = false
            Me.columnTIPO_SERVICIO.MaxLength = 20
            Me.columnRESPONSABLE_VENTA.AllowDBNull = false
            Me.columnRESPONSABLE_VENTA.MaxLength = 20
            Me.columnRESPONSABLE_EJECUCION.AllowDBNull = false
            Me.columnRESPONSABLE_EJECUCION.MaxLength = 20
            Me.columnPROBABILIDAD.AllowDBNull = false
            Me.columnPROBABILIDAD.MaxLength = 20
            Me.columnETAPA.AllowDBNull = false
            Me.columnETAPA.MaxLength = 20
            Me.columnPERIODO_INICIO.AllowDBNull = false
            Me.columnPERIODO_INICIO.MaxLength = 6
            Me.columnPERIODO_CIERRE.AllowDBNull = false
            Me.columnPERIODO_CIERRE.MaxLength = 6
            Me.columnTIPO_MONEDA.AllowDBNull = false
            Me.columnTIPO_MONEDA.MaxLength = 1
            Me.columnMONTO_TOTAL.AllowDBNull = false
            Me.columnCONTACTO_COMERCIAL.AllowDBNull = false
            Me.columnCONTACTO_COMERCIAL.MaxLength = 75
            Me.columnCOSTO_BIENES.AllowDBNull = false
            Me.columnCOSTO_SUBCONTRATAS.AllowDBNull = false
            Me.columnGASTOS_GENERALES.AllowDBNull = false
            Me.columnGASTOS_INVERSION.AllowDBNull = false
            Me.columnGASTOS_FINANCIAMIENTO.AllowDBNull = false
            Me.columnMARGEN.AllowDBNull = false
            Me.columnTIPO_ORDEN.AllowDBNull = false
            Me.columnTIPO_ORDEN.MaxLength = 20
            Me.columnCODIGO_PROYECTO.AllowDBNull = false
            Me.columnCODIGO_PROYECTO.MaxLength = 20
            Me.columnULTIMA_FACTURACION.AllowDBNull = false
            Me.columnULTIMA_FACTURACION.MaxLength = 12
            Me.columnPENDIENTE_FACTURAR.AllowDBNull = false
            Me.columnUSUARIO_ENCUESTA.AllowDBNull = false
            Me.columnUSUARIO_ENCUESTA.MaxLength = 20
            Me.columnVALORIZACION_ENCUESTA.AllowDBNull = false
            Me.columnCOMENTARIO.AllowDBNull = false
            Me.columnCOMENTARIO.MaxLength = 250
            Me.columnORIGEN.AllowDBNull = false
            Me.columnORIGEN.MaxLength = 3
            Me.columnESTADO.AllowDBNull = false
            Me.columnESTADO.MaxLength = 1
            Me.columnUSUARIO_REGISTRO.AllowDBNull = false
            Me.columnUSUARIO_REGISTRO.MaxLength = 20
            Me.columnFECHA_REGISTRO.AllowDBNull = false
            Me.columnUSUARIO_MODIFICA.MaxLength = 20
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function NewPROSPECTOSRow() As PROSPECTOSRow
            Return CType(Me.NewRow,PROSPECTOSRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New PROSPECTOSRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(PROSPECTOSRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.PROSPECTOSRowChangedEvent) Is Nothing) Then
                RaiseEvent PROSPECTOSRowChanged(Me, New PROSPECTOSRowChangeEvent(CType(e.Row,PROSPECTOSRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.PROSPECTOSRowChangingEvent) Is Nothing) Then
                RaiseEvent PROSPECTOSRowChanging(Me, New PROSPECTOSRowChangeEvent(CType(e.Row,PROSPECTOSRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.PROSPECTOSRowDeletedEvent) Is Nothing) Then
                RaiseEvent PROSPECTOSRowDeleted(Me, New PROSPECTOSRowChangeEvent(CType(e.Row,PROSPECTOSRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.PROSPECTOSRowDeletingEvent) Is Nothing) Then
                RaiseEvent PROSPECTOSRowDeleting(Me, New PROSPECTOSRowChangeEvent(CType(e.Row,PROSPECTOSRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub RemovePROSPECTOSRow(ByVal row As PROSPECTOSRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence
            Dim ds As dsProspectos = New dsProspectos
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "PROSPECTOSDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Partial Public Class PROSPECTOSRow
        Inherits Global.System.Data.DataRow
        
        Private tablePROSPECTOS As PROSPECTOSDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tablePROSPECTOS = CType(Me.Table,PROSPECTOSDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property EMPRESA() As String
            Get
                Return CType(Me(Me.tablePROSPECTOS.EMPRESAColumn),String)
            End Get
            Set
                Me(Me.tablePROSPECTOS.EMPRESAColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property PROSPECTO() As String
            Get
                Return CType(Me(Me.tablePROSPECTOS.PROSPECTOColumn),String)
            End Get
            Set
                Me(Me.tablePROSPECTOS.PROSPECTOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property VERSION() As String
            Get
                Return CType(Me(Me.tablePROSPECTOS.VERSIONColumn),String)
            End Get
            Set
                Me(Me.tablePROSPECTOS.VERSIONColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property EJERCICIO() As String
            Get
                Return CType(Me(Me.tablePROSPECTOS.EJERCICIOColumn),String)
            End Get
            Set
                Me(Me.tablePROSPECTOS.EJERCICIOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property MES() As String
            Get
                Return CType(Me(Me.tablePROSPECTOS.MESColumn),String)
            End Get
            Set
                Me(Me.tablePROSPECTOS.MESColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property DESCRIPCION() As String
            Get
                Return CType(Me(Me.tablePROSPECTOS.DESCRIPCIONColumn),String)
            End Get
            Set
                Me(Me.tablePROSPECTOS.DESCRIPCIONColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property CUENTA_COMERCIAL() As String
            Get
                Return CType(Me(Me.tablePROSPECTOS.CUENTA_COMERCIALColumn),String)
            End Get
            Set
                Me(Me.tablePROSPECTOS.CUENTA_COMERCIALColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property TIPO_SERVICIO() As String
            Get
                Return CType(Me(Me.tablePROSPECTOS.TIPO_SERVICIOColumn),String)
            End Get
            Set
                Me(Me.tablePROSPECTOS.TIPO_SERVICIOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property RESPONSABLE_VENTA() As String
            Get
                Return CType(Me(Me.tablePROSPECTOS.RESPONSABLE_VENTAColumn),String)
            End Get
            Set
                Me(Me.tablePROSPECTOS.RESPONSABLE_VENTAColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property RESPONSABLE_EJECUCION() As String
            Get
                Return CType(Me(Me.tablePROSPECTOS.RESPONSABLE_EJECUCIONColumn),String)
            End Get
            Set
                Me(Me.tablePROSPECTOS.RESPONSABLE_EJECUCIONColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property PROBABILIDAD() As String
            Get
                Return CType(Me(Me.tablePROSPECTOS.PROBABILIDADColumn),String)
            End Get
            Set
                Me(Me.tablePROSPECTOS.PROBABILIDADColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property ETAPA() As String
            Get
                Return CType(Me(Me.tablePROSPECTOS.ETAPAColumn),String)
            End Get
            Set
                Me(Me.tablePROSPECTOS.ETAPAColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property FECHA_COTIZACION() As Date
            Get
                Try 
                    Return CType(Me(Me.tablePROSPECTOS.FECHA_COTIZACIONColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'FECHA_COTIZACION' de la tabla 'PROSPECTOS' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePROSPECTOS.FECHA_COTIZACIONColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property FECHA_APROBACION() As Date
            Get
                Try 
                    Return CType(Me(Me.tablePROSPECTOS.FECHA_APROBACIONColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'FECHA_APROBACION' de la tabla 'PROSPECTOS' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePROSPECTOS.FECHA_APROBACIONColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property FECHA_ENTREGA() As Date
            Get
                Try 
                    Return CType(Me(Me.tablePROSPECTOS.FECHA_ENTREGAColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'FECHA_ENTREGA' de la tabla 'PROSPECTOS' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePROSPECTOS.FECHA_ENTREGAColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property PERIODO_INICIO() As String
            Get
                Return CType(Me(Me.tablePROSPECTOS.PERIODO_INICIOColumn),String)
            End Get
            Set
                Me(Me.tablePROSPECTOS.PERIODO_INICIOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property PERIODO_CIERRE() As String
            Get
                Return CType(Me(Me.tablePROSPECTOS.PERIODO_CIERREColumn),String)
            End Get
            Set
                Me(Me.tablePROSPECTOS.PERIODO_CIERREColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property TIPO_MONEDA() As String
            Get
                Return CType(Me(Me.tablePROSPECTOS.TIPO_MONEDAColumn),String)
            End Get
            Set
                Me(Me.tablePROSPECTOS.TIPO_MONEDAColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property MONTO_TOTAL() As Decimal
            Get
                Return CType(Me(Me.tablePROSPECTOS.MONTO_TOTALColumn),Decimal)
            End Get
            Set
                Me(Me.tablePROSPECTOS.MONTO_TOTALColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property CONTACTO_COMERCIAL() As String
            Get
                Return CType(Me(Me.tablePROSPECTOS.CONTACTO_COMERCIALColumn),String)
            End Get
            Set
                Me(Me.tablePROSPECTOS.CONTACTO_COMERCIALColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property COSTO_BIENES() As Decimal
            Get
                Return CType(Me(Me.tablePROSPECTOS.COSTO_BIENESColumn),Decimal)
            End Get
            Set
                Me(Me.tablePROSPECTOS.COSTO_BIENESColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property COSTO_SUBCONTRATAS() As Decimal
            Get
                Return CType(Me(Me.tablePROSPECTOS.COSTO_SUBCONTRATASColumn),Decimal)
            End Get
            Set
                Me(Me.tablePROSPECTOS.COSTO_SUBCONTRATASColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property GASTOS_GENERALES() As Decimal
            Get
                Return CType(Me(Me.tablePROSPECTOS.GASTOS_GENERALESColumn),Decimal)
            End Get
            Set
                Me(Me.tablePROSPECTOS.GASTOS_GENERALESColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property GASTOS_INVERSION() As Decimal
            Get
                Return CType(Me(Me.tablePROSPECTOS.GASTOS_INVERSIONColumn),Decimal)
            End Get
            Set
                Me(Me.tablePROSPECTOS.GASTOS_INVERSIONColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property GASTOS_FINANCIAMIENTO() As Decimal
            Get
                Return CType(Me(Me.tablePROSPECTOS.GASTOS_FINANCIAMIENTOColumn),Decimal)
            End Get
            Set
                Me(Me.tablePROSPECTOS.GASTOS_FINANCIAMIENTOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property MARGEN() As Decimal
            Get
                Return CType(Me(Me.tablePROSPECTOS.MARGENColumn),Decimal)
            End Get
            Set
                Me(Me.tablePROSPECTOS.MARGENColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property TIPO_ORDEN() As String
            Get
                Return CType(Me(Me.tablePROSPECTOS.TIPO_ORDENColumn),String)
            End Get
            Set
                Me(Me.tablePROSPECTOS.TIPO_ORDENColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property CODIGO_PROYECTO() As String
            Get
                Return CType(Me(Me.tablePROSPECTOS.CODIGO_PROYECTOColumn),String)
            End Get
            Set
                Me(Me.tablePROSPECTOS.CODIGO_PROYECTOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property ULTIMA_FACTURACION() As String
            Get
                Return CType(Me(Me.tablePROSPECTOS.ULTIMA_FACTURACIONColumn),String)
            End Get
            Set
                Me(Me.tablePROSPECTOS.ULTIMA_FACTURACIONColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property PENDIENTE_FACTURAR() As Decimal
            Get
                Return CType(Me(Me.tablePROSPECTOS.PENDIENTE_FACTURARColumn),Decimal)
            End Get
            Set
                Me(Me.tablePROSPECTOS.PENDIENTE_FACTURARColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property FECHA_ENCUESTA() As Date
            Get
                Try 
                    Return CType(Me(Me.tablePROSPECTOS.FECHA_ENCUESTAColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'FECHA_ENCUESTA' de la tabla 'PROSPECTOS' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePROSPECTOS.FECHA_ENCUESTAColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property USUARIO_ENCUESTA() As String
            Get
                Return CType(Me(Me.tablePROSPECTOS.USUARIO_ENCUESTAColumn),String)
            End Get
            Set
                Me(Me.tablePROSPECTOS.USUARIO_ENCUESTAColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property VALORIZACION_ENCUESTA() As Decimal
            Get
                Return CType(Me(Me.tablePROSPECTOS.VALORIZACION_ENCUESTAColumn),Decimal)
            End Get
            Set
                Me(Me.tablePROSPECTOS.VALORIZACION_ENCUESTAColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property COMENTARIO() As String
            Get
                Return CType(Me(Me.tablePROSPECTOS.COMENTARIOColumn),String)
            End Get
            Set
                Me(Me.tablePROSPECTOS.COMENTARIOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property ORIGEN() As String
            Get
                Return CType(Me(Me.tablePROSPECTOS.ORIGENColumn),String)
            End Get
            Set
                Me(Me.tablePROSPECTOS.ORIGENColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property ESTADO() As String
            Get
                Return CType(Me(Me.tablePROSPECTOS.ESTADOColumn),String)
            End Get
            Set
                Me(Me.tablePROSPECTOS.ESTADOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property USUARIO_REGISTRO() As String
            Get
                Return CType(Me(Me.tablePROSPECTOS.USUARIO_REGISTROColumn),String)
            End Get
            Set
                Me(Me.tablePROSPECTOS.USUARIO_REGISTROColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property FECHA_REGISTRO() As Date
            Get
                Return CType(Me(Me.tablePROSPECTOS.FECHA_REGISTROColumn),Date)
            End Get
            Set
                Me(Me.tablePROSPECTOS.FECHA_REGISTROColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property USUARIO_MODIFICA() As String
            Get
                Try 
                    Return CType(Me(Me.tablePROSPECTOS.USUARIO_MODIFICAColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'USUARIO_MODIFICA' de la tabla 'PROSPECTOS' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePROSPECTOS.USUARIO_MODIFICAColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property FECHA_MODIFICA() As Date
            Get
                Try 
                    Return CType(Me(Me.tablePROSPECTOS.FECHA_MODIFICAColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'FECHA_MODIFICA' de la tabla 'PROSPECTOS' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePROSPECTOS.FECHA_MODIFICAColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsFECHA_COTIZACIONNull() As Boolean
            Return Me.IsNull(Me.tablePROSPECTOS.FECHA_COTIZACIONColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetFECHA_COTIZACIONNull()
            Me(Me.tablePROSPECTOS.FECHA_COTIZACIONColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsFECHA_APROBACIONNull() As Boolean
            Return Me.IsNull(Me.tablePROSPECTOS.FECHA_APROBACIONColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetFECHA_APROBACIONNull()
            Me(Me.tablePROSPECTOS.FECHA_APROBACIONColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsFECHA_ENTREGANull() As Boolean
            Return Me.IsNull(Me.tablePROSPECTOS.FECHA_ENTREGAColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetFECHA_ENTREGANull()
            Me(Me.tablePROSPECTOS.FECHA_ENTREGAColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsFECHA_ENCUESTANull() As Boolean
            Return Me.IsNull(Me.tablePROSPECTOS.FECHA_ENCUESTAColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetFECHA_ENCUESTANull()
            Me(Me.tablePROSPECTOS.FECHA_ENCUESTAColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsUSUARIO_MODIFICANull() As Boolean
            Return Me.IsNull(Me.tablePROSPECTOS.USUARIO_MODIFICAColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetUSUARIO_MODIFICANull()
            Me(Me.tablePROSPECTOS.USUARIO_MODIFICAColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsFECHA_MODIFICANull() As Boolean
            Return Me.IsNull(Me.tablePROSPECTOS.FECHA_MODIFICAColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetFECHA_MODIFICANull()
            Me(Me.tablePROSPECTOS.FECHA_MODIFICAColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Public Class PROSPECTOSRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As PROSPECTOSRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New(ByVal row As PROSPECTOSRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Row() As PROSPECTOSRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
End Class
