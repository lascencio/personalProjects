'------------------------------------------------------------------------------
' <auto-generated>
'     Este código fue generado por una herramienta.
'     Versión del motor en tiempo de ejecución:2.0.50727.5485
'
'     Los cambios en este archivo podrían causar un comportamiento incorrecto y se perderán si
'     se vuelve a generar el código.
' </auto-generated>
'------------------------------------------------------------------------------

Option Strict Off
Option Explicit On



'''<summary>
'''Represents a strongly typed in-memory cache of data.
'''</summary>
<Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0"),  _
 Global.System.Serializable(),  _
 Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
 Global.System.ComponentModel.ToolboxItem(true),  _
 Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema"),  _
 Global.System.Xml.Serialization.XmlRootAttribute("dsAsientoContable"),  _
 Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")>  _
Partial Public Class dsAsientoContable
    Inherits Global.System.Data.DataSet
    
    Private tableCABECERA As CABECERADataTable
    
    Private tableDETALLE As DETALLEDataTable
    
    Private tableASIENTOS_VENTA_CABECERA As ASIENTOS_VENTA_CABECERADataTable
    
    Private tableASIENTOS_VENTA_DETALLE As ASIENTOS_VENTA_DETALLEDataTable
    
    Private tableASIENTOS_VENTA_LISTA As ASIENTOS_VENTA_LISTADataTable
    
    Private _schemaSerializationMode As Global.System.Data.SchemaSerializationMode = Global.System.Data.SchemaSerializationMode.IncludeSchema
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Public Sub New()
        MyBase.New
        Me.BeginInit
        Me.InitClass
        Dim schemaChangedHandler As Global.System.ComponentModel.CollectionChangeEventHandler = AddressOf Me.SchemaChanged
        AddHandler MyBase.Tables.CollectionChanged, schemaChangedHandler
        AddHandler MyBase.Relations.CollectionChanged, schemaChangedHandler
        Me.EndInit
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
        MyBase.New(info, context, false)
        If (Me.IsBinarySerialized(info, context) = true) Then
            Me.InitVars(false)
            Dim schemaChangedHandler1 As Global.System.ComponentModel.CollectionChangeEventHandler = AddressOf Me.SchemaChanged
            AddHandler Me.Tables.CollectionChanged, schemaChangedHandler1
            AddHandler Me.Relations.CollectionChanged, schemaChangedHandler1
            Return
        End If
        Dim strSchema As String = CType(info.GetValue("XmlSchema", GetType(String)),String)
        If (Me.DetermineSchemaSerializationMode(info, context) = Global.System.Data.SchemaSerializationMode.IncludeSchema) Then
            Dim ds As Global.System.Data.DataSet = New Global.System.Data.DataSet
            ds.ReadXmlSchema(New Global.System.Xml.XmlTextReader(New Global.System.IO.StringReader(strSchema)))
            If (Not (ds.Tables("CABECERA")) Is Nothing) Then
                MyBase.Tables.Add(New CABECERADataTable(ds.Tables("CABECERA")))
            End If
            If (Not (ds.Tables("DETALLE")) Is Nothing) Then
                MyBase.Tables.Add(New DETALLEDataTable(ds.Tables("DETALLE")))
            End If
            If (Not (ds.Tables("ASIENTOS_VENTA_CABECERA")) Is Nothing) Then
                MyBase.Tables.Add(New ASIENTOS_VENTA_CABECERADataTable(ds.Tables("ASIENTOS_VENTA_CABECERA")))
            End If
            If (Not (ds.Tables("ASIENTOS_VENTA_DETALLE")) Is Nothing) Then
                MyBase.Tables.Add(New ASIENTOS_VENTA_DETALLEDataTable(ds.Tables("ASIENTOS_VENTA_DETALLE")))
            End If
            If (Not (ds.Tables("ASIENTOS_VENTA_LISTA")) Is Nothing) Then
                MyBase.Tables.Add(New ASIENTOS_VENTA_LISTADataTable(ds.Tables("ASIENTOS_VENTA_LISTA")))
            End If
            Me.DataSetName = ds.DataSetName
            Me.Prefix = ds.Prefix
            Me.Namespace = ds.Namespace
            Me.Locale = ds.Locale
            Me.CaseSensitive = ds.CaseSensitive
            Me.EnforceConstraints = ds.EnforceConstraints
            Me.Merge(ds, false, Global.System.Data.MissingSchemaAction.Add)
            Me.InitVars
        Else
            Me.ReadXmlSchema(New Global.System.Xml.XmlTextReader(New Global.System.IO.StringReader(strSchema)))
        End If
        Me.GetSerializationData(info, context)
        Dim schemaChangedHandler As Global.System.ComponentModel.CollectionChangeEventHandler = AddressOf Me.SchemaChanged
        AddHandler MyBase.Tables.CollectionChanged, schemaChangedHandler
        AddHandler Me.Relations.CollectionChanged, schemaChangedHandler
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property CABECERA() As CABECERADataTable
        Get
            Return Me.tableCABECERA
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property DETALLE() As DETALLEDataTable
        Get
            Return Me.tableDETALLE
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property ASIENTOS_VENTA_CABECERA() As ASIENTOS_VENTA_CABECERADataTable
        Get
            Return Me.tableASIENTOS_VENTA_CABECERA
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property ASIENTOS_VENTA_DETALLE() As ASIENTOS_VENTA_DETALLEDataTable
        Get
            Return Me.tableASIENTOS_VENTA_DETALLE
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property ASIENTOS_VENTA_LISTA() As ASIENTOS_VENTA_LISTADataTable
        Get
            Return Me.tableASIENTOS_VENTA_LISTA
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.ComponentModel.BrowsableAttribute(true),  _
     Global.System.ComponentModel.DesignerSerializationVisibilityAttribute(Global.System.ComponentModel.DesignerSerializationVisibility.Visible)>  _
    Public Overrides Property SchemaSerializationMode() As Global.System.Data.SchemaSerializationMode
        Get
            Return Me._schemaSerializationMode
        End Get
        Set
            Me._schemaSerializationMode = value
        End Set
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.ComponentModel.DesignerSerializationVisibilityAttribute(Global.System.ComponentModel.DesignerSerializationVisibility.Hidden)>  _
    Public Shadows ReadOnly Property Tables() As Global.System.Data.DataTableCollection
        Get
            Return MyBase.Tables
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.ComponentModel.DesignerSerializationVisibilityAttribute(Global.System.ComponentModel.DesignerSerializationVisibility.Hidden)>  _
    Public Shadows ReadOnly Property Relations() As Global.System.Data.DataRelationCollection
        Get
            Return MyBase.Relations
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Protected Overrides Sub InitializeDerivedDataSet()
        Me.BeginInit
        Me.InitClass
        Me.EndInit
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Public Overrides Function Clone() As Global.System.Data.DataSet
        Dim cln As dsAsientoContable = CType(MyBase.Clone,dsAsientoContable)
        cln.InitVars
        cln.SchemaSerializationMode = Me.SchemaSerializationMode
        Return cln
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Protected Overrides Function ShouldSerializeTables() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Protected Overrides Function ShouldSerializeRelations() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Protected Overrides Sub ReadXmlSerializable(ByVal reader As Global.System.Xml.XmlReader)
        If (Me.DetermineSchemaSerializationMode(reader) = Global.System.Data.SchemaSerializationMode.IncludeSchema) Then
            Me.Reset
            Dim ds As Global.System.Data.DataSet = New Global.System.Data.DataSet
            ds.ReadXml(reader)
            If (Not (ds.Tables("CABECERA")) Is Nothing) Then
                MyBase.Tables.Add(New CABECERADataTable(ds.Tables("CABECERA")))
            End If
            If (Not (ds.Tables("DETALLE")) Is Nothing) Then
                MyBase.Tables.Add(New DETALLEDataTable(ds.Tables("DETALLE")))
            End If
            If (Not (ds.Tables("ASIENTOS_VENTA_CABECERA")) Is Nothing) Then
                MyBase.Tables.Add(New ASIENTOS_VENTA_CABECERADataTable(ds.Tables("ASIENTOS_VENTA_CABECERA")))
            End If
            If (Not (ds.Tables("ASIENTOS_VENTA_DETALLE")) Is Nothing) Then
                MyBase.Tables.Add(New ASIENTOS_VENTA_DETALLEDataTable(ds.Tables("ASIENTOS_VENTA_DETALLE")))
            End If
            If (Not (ds.Tables("ASIENTOS_VENTA_LISTA")) Is Nothing) Then
                MyBase.Tables.Add(New ASIENTOS_VENTA_LISTADataTable(ds.Tables("ASIENTOS_VENTA_LISTA")))
            End If
            Me.DataSetName = ds.DataSetName
            Me.Prefix = ds.Prefix
            Me.Namespace = ds.Namespace
            Me.Locale = ds.Locale
            Me.CaseSensitive = ds.CaseSensitive
            Me.EnforceConstraints = ds.EnforceConstraints
            Me.Merge(ds, false, Global.System.Data.MissingSchemaAction.Add)
            Me.InitVars
        Else
            Me.ReadXml(reader)
            Me.InitVars
        End If
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Protected Overrides Function GetSchemaSerializable() As Global.System.Xml.Schema.XmlSchema
        Dim stream As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
        Me.WriteXmlSchema(New Global.System.Xml.XmlTextWriter(stream, Nothing))
        stream.Position = 0
        Return Global.System.Xml.Schema.XmlSchema.Read(New Global.System.Xml.XmlTextReader(stream), Nothing)
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Friend Overloads Sub InitVars()
        Me.InitVars(true)
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Friend Overloads Sub InitVars(ByVal initTable As Boolean)
        Me.tableCABECERA = CType(MyBase.Tables("CABECERA"),CABECERADataTable)
        If (initTable = true) Then
            If (Not (Me.tableCABECERA) Is Nothing) Then
                Me.tableCABECERA.InitVars
            End If
        End If
        Me.tableDETALLE = CType(MyBase.Tables("DETALLE"),DETALLEDataTable)
        If (initTable = true) Then
            If (Not (Me.tableDETALLE) Is Nothing) Then
                Me.tableDETALLE.InitVars
            End If
        End If
        Me.tableASIENTOS_VENTA_CABECERA = CType(MyBase.Tables("ASIENTOS_VENTA_CABECERA"),ASIENTOS_VENTA_CABECERADataTable)
        If (initTable = true) Then
            If (Not (Me.tableASIENTOS_VENTA_CABECERA) Is Nothing) Then
                Me.tableASIENTOS_VENTA_CABECERA.InitVars
            End If
        End If
        Me.tableASIENTOS_VENTA_DETALLE = CType(MyBase.Tables("ASIENTOS_VENTA_DETALLE"),ASIENTOS_VENTA_DETALLEDataTable)
        If (initTable = true) Then
            If (Not (Me.tableASIENTOS_VENTA_DETALLE) Is Nothing) Then
                Me.tableASIENTOS_VENTA_DETALLE.InitVars
            End If
        End If
        Me.tableASIENTOS_VENTA_LISTA = CType(MyBase.Tables("ASIENTOS_VENTA_LISTA"),ASIENTOS_VENTA_LISTADataTable)
        If (initTable = true) Then
            If (Not (Me.tableASIENTOS_VENTA_LISTA) Is Nothing) Then
                Me.tableASIENTOS_VENTA_LISTA.InitVars
            End If
        End If
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Private Sub InitClass()
        Me.DataSetName = "dsAsientoContable"
        Me.Prefix = ""
        Me.Namespace = "http://tempuri.org/dsAsientoContable.xsd"
        Me.EnforceConstraints = true
        Me.SchemaSerializationMode = Global.System.Data.SchemaSerializationMode.IncludeSchema
        Me.tableCABECERA = New CABECERADataTable
        MyBase.Tables.Add(Me.tableCABECERA)
        Me.tableDETALLE = New DETALLEDataTable
        MyBase.Tables.Add(Me.tableDETALLE)
        Me.tableASIENTOS_VENTA_CABECERA = New ASIENTOS_VENTA_CABECERADataTable
        MyBase.Tables.Add(Me.tableASIENTOS_VENTA_CABECERA)
        Me.tableASIENTOS_VENTA_DETALLE = New ASIENTOS_VENTA_DETALLEDataTable
        MyBase.Tables.Add(Me.tableASIENTOS_VENTA_DETALLE)
        Me.tableASIENTOS_VENTA_LISTA = New ASIENTOS_VENTA_LISTADataTable
        MyBase.Tables.Add(Me.tableASIENTOS_VENTA_LISTA)
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Private Function ShouldSerializeCABECERA() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Private Function ShouldSerializeDETALLE() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Private Function ShouldSerializeASIENTOS_VENTA_CABECERA() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Private Function ShouldSerializeASIENTOS_VENTA_DETALLE() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Private Function ShouldSerializeASIENTOS_VENTA_LISTA() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Private Sub SchemaChanged(ByVal sender As Object, ByVal e As Global.System.ComponentModel.CollectionChangeEventArgs)
        If (e.Action = Global.System.ComponentModel.CollectionChangeAction.Remove) Then
            Me.InitVars
        End If
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Public Shared Function GetTypedDataSetSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
        Dim ds As dsAsientoContable = New dsAsientoContable
        Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType
        Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence
        Dim any As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
        any.Namespace = ds.Namespace
        sequence.Items.Add(any)
        type.Particle = sequence
        Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
        If xs.Contains(dsSchema.TargetNamespace) Then
            Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
            Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
            Try 
                Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                dsSchema.Write(s1)
                Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                Do While schemas.MoveNext
                    schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                    s2.SetLength(0)
                    schema.Write(s2)
                    If (s1.Length = s2.Length) Then
                        s1.Position = 0
                        s2.Position = 0
                        
                        Do While ((s1.Position <> s1.Length)  _
                                    AndAlso (s1.ReadByte = s2.ReadByte))
                            
                            
                        Loop
                        If (s1.Position = s1.Length) Then
                            Return type
                        End If
                    End If
                    
                Loop
            Finally
                If (Not (s1) Is Nothing) Then
                    s1.Close
                End If
                If (Not (s2) Is Nothing) Then
                    s2.Close
                End If
            End Try
        End If
        xs.Add(dsSchema)
        Return type
    End Function
    
    Public Delegate Sub CABECERARowChangeEventHandler(ByVal sender As Object, ByVal e As CABECERARowChangeEvent)
    
    Public Delegate Sub DETALLERowChangeEventHandler(ByVal sender As Object, ByVal e As DETALLERowChangeEvent)
    
    Public Delegate Sub ASIENTOS_VENTA_CABECERARowChangeEventHandler(ByVal sender As Object, ByVal e As ASIENTOS_VENTA_CABECERARowChangeEvent)
    
    Public Delegate Sub ASIENTOS_VENTA_DETALLERowChangeEventHandler(ByVal sender As Object, ByVal e As ASIENTOS_VENTA_DETALLERowChangeEvent)
    
    Public Delegate Sub ASIENTOS_VENTA_LISTARowChangeEventHandler(ByVal sender As Object, ByVal e As ASIENTOS_VENTA_LISTARowChangeEvent)
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0"),  _
     Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class CABECERADataTable
        Inherits Global.System.Data.TypedTableBase(Of CABECERARow)
        
        Private columncsubdia As Global.System.Data.DataColumn
        
        Private columnccompro As Global.System.Data.DataColumn
        
        Private columncfeccom As Global.System.Data.DataColumn
        
        Private columnccodmon As Global.System.Data.DataColumn
        
        Private columncsitua As Global.System.Data.DataColumn
        
        Private columnctipcam As Global.System.Data.DataColumn
        
        Private columncglosa As Global.System.Data.DataColumn
        
        Private columnctotal As Global.System.Data.DataColumn
        
        Private columnctipo As Global.System.Data.DataColumn
        
        Private columncflag As Global.System.Data.DataColumn
        
        Private columncdate As Global.System.Data.DataColumn
        
        Private columnchora As Global.System.Data.DataColumn
        
        Private columncuser As Global.System.Data.DataColumn
        
        Private columncfeccam As Global.System.Data.DataColumn
        
        Private columncorig As Global.System.Data.DataColumn
        
        Private columncform As Global.System.Data.DataColumn
        
        Private columnctipcom As Global.System.Data.DataColumn
        
        Private columncextor As Global.System.Data.DataColumn
        
        Private columncfeccom2 As Global.System.Data.DataColumn
        
        Private columncfeccam2 As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "CABECERA"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property csubdiaColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columncsubdia
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property ccomproColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnccompro
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property cfeccomColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columncfeccom
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property ccodmonColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnccodmon
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property csituaColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columncsitua
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property ctipcamColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnctipcam
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property cglosaColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columncglosa
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property ctotalColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnctotal
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property ctipoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnctipo
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property cflagColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columncflag
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property cdateColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columncdate
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property choraColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnchora
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property cuserColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columncuser
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property cfeccamColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columncfeccam
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property corigColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columncorig
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property cformColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columncform
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property ctipcomColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnctipcom
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property cextorColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columncextor
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property cfeccom2Column() As Global.System.Data.DataColumn
            Get
                Return Me.columncfeccom2
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property cfeccam2Column() As Global.System.Data.DataColumn
            Get
                Return Me.columncfeccam2
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As CABECERARow
            Get
                Return CType(Me.Rows(index),CABECERARow)
            End Get
        End Property
        
        Public Event CABECERARowChanging As CABECERARowChangeEventHandler
        
        Public Event CABECERARowChanged As CABECERARowChangeEventHandler
        
        Public Event CABECERARowDeleting As CABECERARowChangeEventHandler
        
        Public Event CABECERARowDeleted As CABECERARowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Sub AddCABECERARow(ByVal row As CABECERARow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Function AddCABECERARow( _
                    ByVal csubdia As String,  _
                    ByVal ccompro As String,  _
                    ByVal cfeccom As String,  _
                    ByVal ccodmon As String,  _
                    ByVal csitua As String,  _
                    ByVal ctipcam As Decimal,  _
                    ByVal cglosa As String,  _
                    ByVal ctotal As Decimal,  _
                    ByVal ctipo As String,  _
                    ByVal cflag As String,  _
                    ByVal _cdate As Date,  _
                    ByVal chora As String,  _
                    ByVal cuser As String,  _
                    ByVal cfeccam As String,  _
                    ByVal corig As String,  _
                    ByVal cform As String,  _
                    ByVal ctipcom As String,  _
                    ByVal cextor As String,  _
                    ByVal cfeccom2 As Date,  _
                    ByVal cfeccam2 As Date) As CABECERARow
            Dim rowCABECERARow As CABECERARow = CType(Me.NewRow,CABECERARow)
            Dim columnValuesArray() As Object = New Object() {csubdia, ccompro, cfeccom, ccodmon, csitua, ctipcam, cglosa, ctotal, ctipo, cflag, _cdate, chora, cuser, cfeccam, corig, cform, ctipcom, cextor, cfeccom2, cfeccam2}
            rowCABECERARow.ItemArray = columnValuesArray
            Me.Rows.Add(rowCABECERARow)
            Return rowCABECERARow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As CABECERADataTable = CType(MyBase.Clone,CABECERADataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New CABECERADataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub InitVars()
            Me.columncsubdia = MyBase.Columns("csubdia")
            Me.columnccompro = MyBase.Columns("ccompro")
            Me.columncfeccom = MyBase.Columns("cfeccom")
            Me.columnccodmon = MyBase.Columns("ccodmon")
            Me.columncsitua = MyBase.Columns("csitua")
            Me.columnctipcam = MyBase.Columns("ctipcam")
            Me.columncglosa = MyBase.Columns("cglosa")
            Me.columnctotal = MyBase.Columns("ctotal")
            Me.columnctipo = MyBase.Columns("ctipo")
            Me.columncflag = MyBase.Columns("cflag")
            Me.columncdate = MyBase.Columns("cdate")
            Me.columnchora = MyBase.Columns("chora")
            Me.columncuser = MyBase.Columns("cuser")
            Me.columncfeccam = MyBase.Columns("cfeccam")
            Me.columncorig = MyBase.Columns("corig")
            Me.columncform = MyBase.Columns("cform")
            Me.columnctipcom = MyBase.Columns("ctipcom")
            Me.columncextor = MyBase.Columns("cextor")
            Me.columncfeccom2 = MyBase.Columns("cfeccom2")
            Me.columncfeccam2 = MyBase.Columns("cfeccam2")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitClass()
            Me.columncsubdia = New Global.System.Data.DataColumn("csubdia", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncsubdia)
            Me.columnccompro = New Global.System.Data.DataColumn("ccompro", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnccompro)
            Me.columncfeccom = New Global.System.Data.DataColumn("cfeccom", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncfeccom)
            Me.columnccodmon = New Global.System.Data.DataColumn("ccodmon", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnccodmon)
            Me.columncsitua = New Global.System.Data.DataColumn("csitua", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncsitua)
            Me.columnctipcam = New Global.System.Data.DataColumn("ctipcam", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnctipcam)
            Me.columncglosa = New Global.System.Data.DataColumn("cglosa", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncglosa)
            Me.columnctotal = New Global.System.Data.DataColumn("ctotal", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnctotal)
            Me.columnctipo = New Global.System.Data.DataColumn("ctipo", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnctipo)
            Me.columncflag = New Global.System.Data.DataColumn("cflag", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncflag)
            Me.columncdate = New Global.System.Data.DataColumn("cdate", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            Me.columncdate.ExtendedProperties.Add("Generator_ColumnPropNameInTable", "cdateColumn")
            Me.columncdate.ExtendedProperties.Add("Generator_ColumnVarNameInTable", "columncdate")
            Me.columncdate.ExtendedProperties.Add("Generator_UserColumnName", "cdate")
            MyBase.Columns.Add(Me.columncdate)
            Me.columnchora = New Global.System.Data.DataColumn("chora", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnchora)
            Me.columncuser = New Global.System.Data.DataColumn("cuser", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncuser)
            Me.columncfeccam = New Global.System.Data.DataColumn("cfeccam", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncfeccam)
            Me.columncorig = New Global.System.Data.DataColumn("corig", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncorig)
            Me.columncform = New Global.System.Data.DataColumn("cform", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncform)
            Me.columnctipcom = New Global.System.Data.DataColumn("ctipcom", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnctipcom)
            Me.columncextor = New Global.System.Data.DataColumn("cextor", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncextor)
            Me.columncfeccom2 = New Global.System.Data.DataColumn("cfeccom2", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncfeccom2)
            Me.columncfeccam2 = New Global.System.Data.DataColumn("cfeccam2", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncfeccam2)
            Me.columncsubdia.MaxLength = 2
            Me.columnccompro.MaxLength = 6
            Me.columncfeccom.MaxLength = 6
            Me.columnccodmon.MaxLength = 2
            Me.columncsitua.MaxLength = 1
            Me.columncglosa.MaxLength = 40
            Me.columnctipo.MaxLength = 1
            Me.columncflag.MaxLength = 1
            Me.columnchora.MaxLength = 6
            Me.columncuser.MaxLength = 5
            Me.columncfeccam.MaxLength = 6
            Me.columncorig.MaxLength = 2
            Me.columncform.MaxLength = 1
            Me.columnctipcom.MaxLength = 2
            Me.columncextor.MaxLength = 1
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function NewCABECERARow() As CABECERARow
            Return CType(Me.NewRow,CABECERARow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New CABECERARow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(CABECERARow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.CABECERARowChangedEvent) Is Nothing) Then
                RaiseEvent CABECERARowChanged(Me, New CABECERARowChangeEvent(CType(e.Row,CABECERARow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.CABECERARowChangingEvent) Is Nothing) Then
                RaiseEvent CABECERARowChanging(Me, New CABECERARowChangeEvent(CType(e.Row,CABECERARow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.CABECERARowDeletedEvent) Is Nothing) Then
                RaiseEvent CABECERARowDeleted(Me, New CABECERARowChangeEvent(CType(e.Row,CABECERARow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.CABECERARowDeletingEvent) Is Nothing) Then
                RaiseEvent CABECERARowDeleting(Me, New CABECERARowChangeEvent(CType(e.Row,CABECERARow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub RemoveCABECERARow(ByVal row As CABECERARow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence
            Dim ds As dsAsientoContable = New dsAsientoContable
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "CABECERADataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0"),  _
     Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class DETALLEDataTable
        Inherits Global.System.Data.TypedTableBase(Of DETALLERow)
        
        Private columndsubdia As Global.System.Data.DataColumn
        
        Private columndcompro As Global.System.Data.DataColumn
        
        Private columndsecue As Global.System.Data.DataColumn
        
        Private columndfeccom As Global.System.Data.DataColumn
        
        Private columndcuenta As Global.System.Data.DataColumn
        
        Private columndcodane As Global.System.Data.DataColumn
        
        Private columndcencos As Global.System.Data.DataColumn
        
        Private columndcodmon As Global.System.Data.DataColumn
        
        Private columnddh As Global.System.Data.DataColumn
        
        Private columndimport As Global.System.Data.DataColumn
        
        Private columndtipdoc As Global.System.Data.DataColumn
        
        Private columndnumdoc As Global.System.Data.DataColumn
        
        Private columndfecdoc As Global.System.Data.DataColumn
        
        Private columndfecven As Global.System.Data.DataColumn
        
        Private columndarea As Global.System.Data.DataColumn
        
        Private columndflag As Global.System.Data.DataColumn
        
        Private columnddate As Global.System.Data.DataColumn
        
        Private columndxglosa As Global.System.Data.DataColumn
        
        Private columndusimpor As Global.System.Data.DataColumn
        
        Private columndmnimpor As Global.System.Data.DataColumn
        
        Private columndcodarc As Global.System.Data.DataColumn
        
        Private columndfeccom2 As Global.System.Data.DataColumn
        
        Private columndfecdoc2 As Global.System.Data.DataColumn
        
        Private columndfecven2 As Global.System.Data.DataColumn
        
        Private columndcodane2 As Global.System.Data.DataColumn
        
        Private columndvanexo As Global.System.Data.DataColumn
        
        Private columndvanexo2 As Global.System.Data.DataColumn
        
        Private columndtipcam As Global.System.Data.DataColumn
        
        Private columndcantid As Global.System.Data.DataColumn
        
        Private columndrete As Global.System.Data.DataColumn
        
        Private columndporre As Global.System.Data.DataColumn
        
        Private columndtipdor As Global.System.Data.DataColumn
        
        Private columndnumdor As Global.System.Data.DataColumn
        
        Private columndfecdo2 As Global.System.Data.DataColumn
        
        Private columndtiptas As Global.System.Data.DataColumn
        
        Private columndimptas As Global.System.Data.DataColumn
        
        Private columndimpbmn As Global.System.Data.DataColumn
        
        Private columndimpbus As Global.System.Data.DataColumn
        
        Private columndinacom As Global.System.Data.DataColumn
        
        Private columndigvcom As Global.System.Data.DataColumn
        
        Private columndmedpag As Global.System.Data.DataColumn
        
        Private columndmoncom As Global.System.Data.DataColumn
        
        Private columndcolcom As Global.System.Data.DataColumn
        
        Private columndbascom As Global.System.Data.DataColumn
        
        Private columndtpconv As Global.System.Data.DataColumn
        
        Private columndflgcom As Global.System.Data.DataColumn
        
        Private columndtipaco As Global.System.Data.DataColumn
        
        Private columndanecom As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "DETALLE"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property dsubdiaColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columndsubdia
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property dcomproColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columndcompro
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property dsecueColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columndsecue
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property dfeccomColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columndfeccom
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property dcuentaColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columndcuenta
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property dcodaneColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columndcodane
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property dcencosColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columndcencos
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property dcodmonColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columndcodmon
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property ddhColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnddh
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property dimportColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columndimport
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property dtipdocColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columndtipdoc
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property dnumdocColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columndnumdoc
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property dfecdocColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columndfecdoc
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property dfecvenColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columndfecven
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property dareaColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columndarea
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property dflagColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columndflag
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property ddateColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnddate
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property dxglosaColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columndxglosa
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property dusimporColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columndusimpor
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property dmnimporColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columndmnimpor
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property dcodarcColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columndcodarc
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property dfeccom2Column() As Global.System.Data.DataColumn
            Get
                Return Me.columndfeccom2
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property dfecdoc2Column() As Global.System.Data.DataColumn
            Get
                Return Me.columndfecdoc2
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property dfecven2Column() As Global.System.Data.DataColumn
            Get
                Return Me.columndfecven2
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property dcodane2Column() As Global.System.Data.DataColumn
            Get
                Return Me.columndcodane2
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property dvanexoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columndvanexo
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property dvanexo2Column() As Global.System.Data.DataColumn
            Get
                Return Me.columndvanexo2
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property dtipcamColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columndtipcam
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property dcantidColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columndcantid
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property dreteColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columndrete
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property dporreColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columndporre
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property dtipdorColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columndtipdor
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property dnumdorColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columndnumdor
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property dfecdo2Column() As Global.System.Data.DataColumn
            Get
                Return Me.columndfecdo2
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property dtiptasColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columndtiptas
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property dimptasColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columndimptas
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property dimpbmnColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columndimpbmn
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property dimpbusColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columndimpbus
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property dinacomColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columndinacom
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property digvcomColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columndigvcom
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property dmedpagColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columndmedpag
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property dmoncomColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columndmoncom
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property dcolcomColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columndcolcom
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property dbascomColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columndbascom
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property dtpconvColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columndtpconv
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property dflgcomColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columndflgcom
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property dtipacoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columndtipaco
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property danecomColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columndanecom
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As DETALLERow
            Get
                Return CType(Me.Rows(index),DETALLERow)
            End Get
        End Property
        
        Public Event DETALLERowChanging As DETALLERowChangeEventHandler
        
        Public Event DETALLERowChanged As DETALLERowChangeEventHandler
        
        Public Event DETALLERowDeleting As DETALLERowChangeEventHandler
        
        Public Event DETALLERowDeleted As DETALLERowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Sub AddDETALLERow(ByVal row As DETALLERow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Function AddDETALLERow( _
                    ByVal dsubdia As String,  _
                    ByVal dcompro As String,  _
                    ByVal dsecue As String,  _
                    ByVal dfeccom As String,  _
                    ByVal dcuenta As String,  _
                    ByVal dcodane As String,  _
                    ByVal dcencos As String,  _
                    ByVal dcodmon As String,  _
                    ByVal ddh As String,  _
                    ByVal dimport As Decimal,  _
                    ByVal dtipdoc As String,  _
                    ByVal dnumdoc As String,  _
                    ByVal dfecdoc As String,  _
                    ByVal dfecven As String,  _
                    ByVal darea As String,  _
                    ByVal dflag As String,  _
                    ByVal ddate As Date,  _
                    ByVal dxglosa As String,  _
                    ByVal dusimpor As Decimal,  _
                    ByVal dmnimpor As Decimal,  _
                    ByVal dcodarc As String,  _
                    ByVal dfeccom2 As Date,  _
                    ByVal dfecdoc2 As Date,  _
                    ByVal dfecven2 As Date,  _
                    ByVal dcodane2 As String,  _
                    ByVal dvanexo As String,  _
                    ByVal dvanexo2 As String,  _
                    ByVal dtipcam As Decimal,  _
                    ByVal dcantid As Decimal,  _
                    ByVal drete As String,  _
                    ByVal dporre As Decimal,  _
                    ByVal dtipdor As String,  _
                    ByVal dnumdor As String,  _
                    ByVal dfecdo2 As Date,  _
                    ByVal dtiptas As String,  _
                    ByVal dimptas As Decimal,  _
                    ByVal dimpbmn As Decimal,  _
                    ByVal dimpbus As Decimal,  _
                    ByVal dinacom As Decimal,  _
                    ByVal digvcom As Decimal,  _
                    ByVal dmedpag As String,  _
                    ByVal dmoncom As String,  _
                    ByVal dcolcom As String,  _
                    ByVal dbascom As Decimal,  _
                    ByVal dtpconv As String,  _
                    ByVal dflgcom As String,  _
                    ByVal dtipaco As String,  _
                    ByVal danecom As String) As DETALLERow
            Dim rowDETALLERow As DETALLERow = CType(Me.NewRow,DETALLERow)
            Dim columnValuesArray() As Object = New Object() {dsubdia, dcompro, dsecue, dfeccom, dcuenta, dcodane, dcencos, dcodmon, ddh, dimport, dtipdoc, dnumdoc, dfecdoc, dfecven, darea, dflag, ddate, dxglosa, dusimpor, dmnimpor, dcodarc, dfeccom2, dfecdoc2, dfecven2, dcodane2, dvanexo, dvanexo2, dtipcam, dcantid, drete, dporre, dtipdor, dnumdor, dfecdo2, dtiptas, dimptas, dimpbmn, dimpbus, dinacom, digvcom, dmedpag, dmoncom, dcolcom, dbascom, dtpconv, dflgcom, dtipaco, danecom}
            rowDETALLERow.ItemArray = columnValuesArray
            Me.Rows.Add(rowDETALLERow)
            Return rowDETALLERow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As DETALLEDataTable = CType(MyBase.Clone,DETALLEDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New DETALLEDataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub InitVars()
            Me.columndsubdia = MyBase.Columns("dsubdia")
            Me.columndcompro = MyBase.Columns("dcompro")
            Me.columndsecue = MyBase.Columns("dsecue")
            Me.columndfeccom = MyBase.Columns("dfeccom")
            Me.columndcuenta = MyBase.Columns("dcuenta")
            Me.columndcodane = MyBase.Columns("dcodane")
            Me.columndcencos = MyBase.Columns("dcencos")
            Me.columndcodmon = MyBase.Columns("dcodmon")
            Me.columnddh = MyBase.Columns("ddh")
            Me.columndimport = MyBase.Columns("dimport")
            Me.columndtipdoc = MyBase.Columns("dtipdoc")
            Me.columndnumdoc = MyBase.Columns("dnumdoc")
            Me.columndfecdoc = MyBase.Columns("dfecdoc")
            Me.columndfecven = MyBase.Columns("dfecven")
            Me.columndarea = MyBase.Columns("darea")
            Me.columndflag = MyBase.Columns("dflag")
            Me.columnddate = MyBase.Columns("ddate")
            Me.columndxglosa = MyBase.Columns("dxglosa")
            Me.columndusimpor = MyBase.Columns("dusimpor")
            Me.columndmnimpor = MyBase.Columns("dmnimpor")
            Me.columndcodarc = MyBase.Columns("dcodarc")
            Me.columndfeccom2 = MyBase.Columns("dfeccom2")
            Me.columndfecdoc2 = MyBase.Columns("dfecdoc2")
            Me.columndfecven2 = MyBase.Columns("dfecven2")
            Me.columndcodane2 = MyBase.Columns("dcodane2")
            Me.columndvanexo = MyBase.Columns("dvanexo")
            Me.columndvanexo2 = MyBase.Columns("dvanexo2")
            Me.columndtipcam = MyBase.Columns("dtipcam")
            Me.columndcantid = MyBase.Columns("dcantid")
            Me.columndrete = MyBase.Columns("drete")
            Me.columndporre = MyBase.Columns("dporre")
            Me.columndtipdor = MyBase.Columns("dtipdor")
            Me.columndnumdor = MyBase.Columns("dnumdor")
            Me.columndfecdo2 = MyBase.Columns("dfecdo2")
            Me.columndtiptas = MyBase.Columns("dtiptas")
            Me.columndimptas = MyBase.Columns("dimptas")
            Me.columndimpbmn = MyBase.Columns("dimpbmn")
            Me.columndimpbus = MyBase.Columns("dimpbus")
            Me.columndinacom = MyBase.Columns("dinacom")
            Me.columndigvcom = MyBase.Columns("digvcom")
            Me.columndmedpag = MyBase.Columns("dmedpag")
            Me.columndmoncom = MyBase.Columns("dmoncom")
            Me.columndcolcom = MyBase.Columns("dcolcom")
            Me.columndbascom = MyBase.Columns("dbascom")
            Me.columndtpconv = MyBase.Columns("dtpconv")
            Me.columndflgcom = MyBase.Columns("dflgcom")
            Me.columndtipaco = MyBase.Columns("dtipaco")
            Me.columndanecom = MyBase.Columns("danecom")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitClass()
            Me.columndsubdia = New Global.System.Data.DataColumn("dsubdia", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columndsubdia)
            Me.columndcompro = New Global.System.Data.DataColumn("dcompro", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columndcompro)
            Me.columndsecue = New Global.System.Data.DataColumn("dsecue", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columndsecue)
            Me.columndfeccom = New Global.System.Data.DataColumn("dfeccom", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columndfeccom)
            Me.columndcuenta = New Global.System.Data.DataColumn("dcuenta", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columndcuenta)
            Me.columndcodane = New Global.System.Data.DataColumn("dcodane", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columndcodane)
            Me.columndcencos = New Global.System.Data.DataColumn("dcencos", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columndcencos)
            Me.columndcodmon = New Global.System.Data.DataColumn("dcodmon", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columndcodmon)
            Me.columnddh = New Global.System.Data.DataColumn("ddh", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnddh)
            Me.columndimport = New Global.System.Data.DataColumn("dimport", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columndimport)
            Me.columndtipdoc = New Global.System.Data.DataColumn("dtipdoc", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columndtipdoc)
            Me.columndnumdoc = New Global.System.Data.DataColumn("dnumdoc", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columndnumdoc)
            Me.columndfecdoc = New Global.System.Data.DataColumn("dfecdoc", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columndfecdoc)
            Me.columndfecven = New Global.System.Data.DataColumn("dfecven", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columndfecven)
            Me.columndarea = New Global.System.Data.DataColumn("darea", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columndarea)
            Me.columndflag = New Global.System.Data.DataColumn("dflag", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columndflag)
            Me.columnddate = New Global.System.Data.DataColumn("ddate", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnddate)
            Me.columndxglosa = New Global.System.Data.DataColumn("dxglosa", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columndxglosa)
            Me.columndusimpor = New Global.System.Data.DataColumn("dusimpor", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columndusimpor)
            Me.columndmnimpor = New Global.System.Data.DataColumn("dmnimpor", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columndmnimpor)
            Me.columndcodarc = New Global.System.Data.DataColumn("dcodarc", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columndcodarc)
            Me.columndfeccom2 = New Global.System.Data.DataColumn("dfeccom2", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columndfeccom2)
            Me.columndfecdoc2 = New Global.System.Data.DataColumn("dfecdoc2", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columndfecdoc2)
            Me.columndfecven2 = New Global.System.Data.DataColumn("dfecven2", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columndfecven2)
            Me.columndcodane2 = New Global.System.Data.DataColumn("dcodane2", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columndcodane2)
            Me.columndvanexo = New Global.System.Data.DataColumn("dvanexo", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columndvanexo)
            Me.columndvanexo2 = New Global.System.Data.DataColumn("dvanexo2", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columndvanexo2)
            Me.columndtipcam = New Global.System.Data.DataColumn("dtipcam", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columndtipcam)
            Me.columndcantid = New Global.System.Data.DataColumn("dcantid", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columndcantid)
            Me.columndrete = New Global.System.Data.DataColumn("drete", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columndrete)
            Me.columndporre = New Global.System.Data.DataColumn("dporre", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columndporre)
            Me.columndtipdor = New Global.System.Data.DataColumn("dtipdor", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columndtipdor)
            Me.columndnumdor = New Global.System.Data.DataColumn("dnumdor", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columndnumdor)
            Me.columndfecdo2 = New Global.System.Data.DataColumn("dfecdo2", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columndfecdo2)
            Me.columndtiptas = New Global.System.Data.DataColumn("dtiptas", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columndtiptas)
            Me.columndimptas = New Global.System.Data.DataColumn("dimptas", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columndimptas)
            Me.columndimpbmn = New Global.System.Data.DataColumn("dimpbmn", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columndimpbmn)
            Me.columndimpbus = New Global.System.Data.DataColumn("dimpbus", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columndimpbus)
            Me.columndinacom = New Global.System.Data.DataColumn("dinacom", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columndinacom)
            Me.columndigvcom = New Global.System.Data.DataColumn("digvcom", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columndigvcom)
            Me.columndmedpag = New Global.System.Data.DataColumn("dmedpag", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columndmedpag)
            Me.columndmoncom = New Global.System.Data.DataColumn("dmoncom", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columndmoncom)
            Me.columndcolcom = New Global.System.Data.DataColumn("dcolcom", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columndcolcom)
            Me.columndbascom = New Global.System.Data.DataColumn("dbascom", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columndbascom)
            Me.columndtpconv = New Global.System.Data.DataColumn("dtpconv", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columndtpconv)
            Me.columndflgcom = New Global.System.Data.DataColumn("dflgcom", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columndflgcom)
            Me.columndtipaco = New Global.System.Data.DataColumn("dtipaco", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columndtipaco)
            Me.columndanecom = New Global.System.Data.DataColumn("danecom", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columndanecom)
            Me.columndsubdia.MaxLength = 2
            Me.columndcompro.MaxLength = 6
            Me.columndsecue.MaxLength = 4
            Me.columndfeccom.MaxLength = 6
            Me.columndcuenta.MaxLength = 8
            Me.columndcodane.MaxLength = 18
            Me.columndcencos.MaxLength = 6
            Me.columndcodmon.MaxLength = 2
            Me.columnddh.MaxLength = 1
            Me.columndtipdoc.MaxLength = 2
            Me.columndnumdoc.MaxLength = 20
            Me.columndfecdoc.MaxLength = 6
            Me.columndfecven.MaxLength = 6
            Me.columndarea.MaxLength = 3
            Me.columndflag.MaxLength = 1
            Me.columndxglosa.MaxLength = 30
            Me.columndcodarc.MaxLength = 2
            Me.columndcodane2.MaxLength = 18
            Me.columndvanexo.MaxLength = 1
            Me.columndvanexo2.MaxLength = 1
            Me.columndrete.MaxLength = 1
            Me.columndtipdor.MaxLength = 2
            Me.columndnumdor.MaxLength = 20
            Me.columndtiptas.MaxLength = 8
            Me.columndmedpag.MaxLength = 8
            Me.columndmoncom.MaxLength = 2
            Me.columndcolcom.MaxLength = 10
            Me.columndtpconv.MaxLength = 1
            Me.columndflgcom.MaxLength = 1
            Me.columndtipaco.MaxLength = 1
            Me.columndanecom.MaxLength = 18
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function NewDETALLERow() As DETALLERow
            Return CType(Me.NewRow,DETALLERow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New DETALLERow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(DETALLERow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.DETALLERowChangedEvent) Is Nothing) Then
                RaiseEvent DETALLERowChanged(Me, New DETALLERowChangeEvent(CType(e.Row,DETALLERow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.DETALLERowChangingEvent) Is Nothing) Then
                RaiseEvent DETALLERowChanging(Me, New DETALLERowChangeEvent(CType(e.Row,DETALLERow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.DETALLERowDeletedEvent) Is Nothing) Then
                RaiseEvent DETALLERowDeleted(Me, New DETALLERowChangeEvent(CType(e.Row,DETALLERow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.DETALLERowDeletingEvent) Is Nothing) Then
                RaiseEvent DETALLERowDeleting(Me, New DETALLERowChangeEvent(CType(e.Row,DETALLERow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub RemoveDETALLERow(ByVal row As DETALLERow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence
            Dim ds As dsAsientoContable = New dsAsientoContable
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "DETALLEDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0"),  _
     Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class ASIENTOS_VENTA_CABECERADataTable
        Inherits Global.System.Data.TypedTableBase(Of ASIENTOS_VENTA_CABECERARow)
        
        Private columncempresa As Global.System.Data.DataColumn
        
        Private columncejercicio As Global.System.Data.DataColumn
        
        Private columncmes As Global.System.Data.DataColumn
        
        Private columncsubdia As Global.System.Data.DataColumn
        
        Private columnccompro As Global.System.Data.DataColumn
        
        Private columncfeccom As Global.System.Data.DataColumn
        
        Private columnccodmon As Global.System.Data.DataColumn
        
        Private columncsitua As Global.System.Data.DataColumn
        
        Private columnctipcam As Global.System.Data.DataColumn
        
        Private columncglosa As Global.System.Data.DataColumn
        
        Private columnctotal As Global.System.Data.DataColumn
        
        Private columnctipo As Global.System.Data.DataColumn
        
        Private columncflag As Global.System.Data.DataColumn
        
        Private columncdate As Global.System.Data.DataColumn
        
        Private columnchora As Global.System.Data.DataColumn
        
        Private columncuser As Global.System.Data.DataColumn
        
        Private columncfeccam As Global.System.Data.DataColumn
        
        Private columncorig As Global.System.Data.DataColumn
        
        Private columncform As Global.System.Data.DataColumn
        
        Private columnctipcom As Global.System.Data.DataColumn
        
        Private columncextor As Global.System.Data.DataColumn
        
        Private columncfeccom2 As Global.System.Data.DataColumn
        
        Private columncfeccam2 As Global.System.Data.DataColumn
        
        Private columncindica_exportacion As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "ASIENTOS_VENTA_CABECERA"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property cempresaColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columncempresa
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property cejercicioColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columncejercicio
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property cmesColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columncmes
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property csubdiaColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columncsubdia
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property ccomproColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnccompro
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property cfeccomColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columncfeccom
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property ccodmonColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnccodmon
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property csituaColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columncsitua
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property ctipcamColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnctipcam
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property cglosaColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columncglosa
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property ctotalColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnctotal
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property ctipoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnctipo
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property cflagColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columncflag
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property cdateColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columncdate
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property choraColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnchora
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property cuserColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columncuser
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property cfeccamColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columncfeccam
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property corigColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columncorig
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property cformColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columncform
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property ctipcomColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnctipcom
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property cextorColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columncextor
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property cfeccom2Column() As Global.System.Data.DataColumn
            Get
                Return Me.columncfeccom2
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property cfeccam2Column() As Global.System.Data.DataColumn
            Get
                Return Me.columncfeccam2
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property cindica_exportacionColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columncindica_exportacion
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As ASIENTOS_VENTA_CABECERARow
            Get
                Return CType(Me.Rows(index),ASIENTOS_VENTA_CABECERARow)
            End Get
        End Property
        
        Public Event ASIENTOS_VENTA_CABECERARowChanging As ASIENTOS_VENTA_CABECERARowChangeEventHandler
        
        Public Event ASIENTOS_VENTA_CABECERARowChanged As ASIENTOS_VENTA_CABECERARowChangeEventHandler
        
        Public Event ASIENTOS_VENTA_CABECERARowDeleting As ASIENTOS_VENTA_CABECERARowChangeEventHandler
        
        Public Event ASIENTOS_VENTA_CABECERARowDeleted As ASIENTOS_VENTA_CABECERARowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Sub AddASIENTOS_VENTA_CABECERARow(ByVal row As ASIENTOS_VENTA_CABECERARow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Function AddASIENTOS_VENTA_CABECERARow( _
                    ByVal cempresa As String,  _
                    ByVal cejercicio As String,  _
                    ByVal cmes As String,  _
                    ByVal csubdia As String,  _
                    ByVal ccompro As String,  _
                    ByVal cfeccom As String,  _
                    ByVal ccodmon As String,  _
                    ByVal csitua As String,  _
                    ByVal ctipcam As Decimal,  _
                    ByVal cglosa As String,  _
                    ByVal ctotal As Decimal,  _
                    ByVal ctipo As String,  _
                    ByVal cflag As String,  _
                    ByVal _cdate As Date,  _
                    ByVal chora As String,  _
                    ByVal cuser As String,  _
                    ByVal cfeccam As String,  _
                    ByVal corig As String,  _
                    ByVal cform As String,  _
                    ByVal ctipcom As String,  _
                    ByVal cextor As String,  _
                    ByVal cfeccom2 As Date,  _
                    ByVal cfeccam2 As Date,  _
                    ByVal cindica_exportacion As String) As ASIENTOS_VENTA_CABECERARow
            Dim rowASIENTOS_VENTA_CABECERARow As ASIENTOS_VENTA_CABECERARow = CType(Me.NewRow,ASIENTOS_VENTA_CABECERARow)
            Dim columnValuesArray() As Object = New Object() {cempresa, cejercicio, cmes, csubdia, ccompro, cfeccom, ccodmon, csitua, ctipcam, cglosa, ctotal, ctipo, cflag, _cdate, chora, cuser, cfeccam, corig, cform, ctipcom, cextor, cfeccom2, cfeccam2, cindica_exportacion}
            rowASIENTOS_VENTA_CABECERARow.ItemArray = columnValuesArray
            Me.Rows.Add(rowASIENTOS_VENTA_CABECERARow)
            Return rowASIENTOS_VENTA_CABECERARow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As ASIENTOS_VENTA_CABECERADataTable = CType(MyBase.Clone,ASIENTOS_VENTA_CABECERADataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New ASIENTOS_VENTA_CABECERADataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub InitVars()
            Me.columncempresa = MyBase.Columns("cempresa")
            Me.columncejercicio = MyBase.Columns("cejercicio")
            Me.columncmes = MyBase.Columns("cmes")
            Me.columncsubdia = MyBase.Columns("csubdia")
            Me.columnccompro = MyBase.Columns("ccompro")
            Me.columncfeccom = MyBase.Columns("cfeccom")
            Me.columnccodmon = MyBase.Columns("ccodmon")
            Me.columncsitua = MyBase.Columns("csitua")
            Me.columnctipcam = MyBase.Columns("ctipcam")
            Me.columncglosa = MyBase.Columns("cglosa")
            Me.columnctotal = MyBase.Columns("ctotal")
            Me.columnctipo = MyBase.Columns("ctipo")
            Me.columncflag = MyBase.Columns("cflag")
            Me.columncdate = MyBase.Columns("cdate")
            Me.columnchora = MyBase.Columns("chora")
            Me.columncuser = MyBase.Columns("cuser")
            Me.columncfeccam = MyBase.Columns("cfeccam")
            Me.columncorig = MyBase.Columns("corig")
            Me.columncform = MyBase.Columns("cform")
            Me.columnctipcom = MyBase.Columns("ctipcom")
            Me.columncextor = MyBase.Columns("cextor")
            Me.columncfeccom2 = MyBase.Columns("cfeccom2")
            Me.columncfeccam2 = MyBase.Columns("cfeccam2")
            Me.columncindica_exportacion = MyBase.Columns("cindica_exportacion")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitClass()
            Me.columncempresa = New Global.System.Data.DataColumn("cempresa", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncempresa)
            Me.columncejercicio = New Global.System.Data.DataColumn("cejercicio", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncejercicio)
            Me.columncmes = New Global.System.Data.DataColumn("cmes", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncmes)
            Me.columncsubdia = New Global.System.Data.DataColumn("csubdia", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncsubdia)
            Me.columnccompro = New Global.System.Data.DataColumn("ccompro", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnccompro)
            Me.columncfeccom = New Global.System.Data.DataColumn("cfeccom", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncfeccom)
            Me.columnccodmon = New Global.System.Data.DataColumn("ccodmon", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnccodmon)
            Me.columncsitua = New Global.System.Data.DataColumn("csitua", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncsitua)
            Me.columnctipcam = New Global.System.Data.DataColumn("ctipcam", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnctipcam)
            Me.columncglosa = New Global.System.Data.DataColumn("cglosa", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncglosa)
            Me.columnctotal = New Global.System.Data.DataColumn("ctotal", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnctotal)
            Me.columnctipo = New Global.System.Data.DataColumn("ctipo", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnctipo)
            Me.columncflag = New Global.System.Data.DataColumn("cflag", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncflag)
            Me.columncdate = New Global.System.Data.DataColumn("cdate", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            Me.columncdate.ExtendedProperties.Add("Generator_ColumnPropNameInTable", "cdateColumn")
            Me.columncdate.ExtendedProperties.Add("Generator_ColumnVarNameInTable", "columncdate")
            Me.columncdate.ExtendedProperties.Add("Generator_UserColumnName", "cdate")
            MyBase.Columns.Add(Me.columncdate)
            Me.columnchora = New Global.System.Data.DataColumn("chora", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnchora)
            Me.columncuser = New Global.System.Data.DataColumn("cuser", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncuser)
            Me.columncfeccam = New Global.System.Data.DataColumn("cfeccam", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncfeccam)
            Me.columncorig = New Global.System.Data.DataColumn("corig", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncorig)
            Me.columncform = New Global.System.Data.DataColumn("cform", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncform)
            Me.columnctipcom = New Global.System.Data.DataColumn("ctipcom", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnctipcom)
            Me.columncextor = New Global.System.Data.DataColumn("cextor", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncextor)
            Me.columncfeccom2 = New Global.System.Data.DataColumn("cfeccom2", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncfeccom2)
            Me.columncfeccam2 = New Global.System.Data.DataColumn("cfeccam2", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncfeccam2)
            Me.columncindica_exportacion = New Global.System.Data.DataColumn("cindica_exportacion", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncindica_exportacion)
            Me.columncempresa.ReadOnly = true
            Me.columncempresa.MaxLength = 3
            Me.columncejercicio.AllowDBNull = false
            Me.columncejercicio.MaxLength = 4
            Me.columncmes.AllowDBNull = false
            Me.columncmes.MaxLength = 2
            Me.columncsubdia.AllowDBNull = false
            Me.columncsubdia.MaxLength = 2
            Me.columnccompro.ReadOnly = true
            Me.columnccompro.MaxLength = 6
            Me.columncfeccom.ReadOnly = true
            Me.columncfeccom.MaxLength = 6
            Me.columnccodmon.ReadOnly = true
            Me.columnccodmon.MaxLength = 2
            Me.columncsitua.ReadOnly = true
            Me.columncsitua.MaxLength = 1
            Me.columnctipcam.AllowDBNull = false
            Me.columncglosa.ReadOnly = true
            Me.columncglosa.MaxLength = 40
            Me.columnctotal.AllowDBNull = false
            Me.columnctipo.ReadOnly = true
            Me.columnctipo.MaxLength = 1
            Me.columncflag.ReadOnly = true
            Me.columncflag.MaxLength = 1
            Me.columncdate.ReadOnly = true
            Me.columnchora.ReadOnly = true
            Me.columnchora.MaxLength = 6
            Me.columncuser.ReadOnly = true
            Me.columncuser.MaxLength = 4
            Me.columncfeccam.ReadOnly = true
            Me.columncfeccam.MaxLength = 1
            Me.columncorig.ReadOnly = true
            Me.columncorig.MaxLength = 1
            Me.columncform.ReadOnly = true
            Me.columncform.MaxLength = 1
            Me.columnctipcom.ReadOnly = true
            Me.columnctipcom.MaxLength = 1
            Me.columncextor.ReadOnly = true
            Me.columncextor.MaxLength = 1
            Me.columncfeccom2.AllowDBNull = false
            Me.columncfeccam2.ReadOnly = true
            Me.columncindica_exportacion.AllowDBNull = false
            Me.columncindica_exportacion.MaxLength = 2
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function NewASIENTOS_VENTA_CABECERARow() As ASIENTOS_VENTA_CABECERARow
            Return CType(Me.NewRow,ASIENTOS_VENTA_CABECERARow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New ASIENTOS_VENTA_CABECERARow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(ASIENTOS_VENTA_CABECERARow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.ASIENTOS_VENTA_CABECERARowChangedEvent) Is Nothing) Then
                RaiseEvent ASIENTOS_VENTA_CABECERARowChanged(Me, New ASIENTOS_VENTA_CABECERARowChangeEvent(CType(e.Row,ASIENTOS_VENTA_CABECERARow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.ASIENTOS_VENTA_CABECERARowChangingEvent) Is Nothing) Then
                RaiseEvent ASIENTOS_VENTA_CABECERARowChanging(Me, New ASIENTOS_VENTA_CABECERARowChangeEvent(CType(e.Row,ASIENTOS_VENTA_CABECERARow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.ASIENTOS_VENTA_CABECERARowDeletedEvent) Is Nothing) Then
                RaiseEvent ASIENTOS_VENTA_CABECERARowDeleted(Me, New ASIENTOS_VENTA_CABECERARowChangeEvent(CType(e.Row,ASIENTOS_VENTA_CABECERARow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.ASIENTOS_VENTA_CABECERARowDeletingEvent) Is Nothing) Then
                RaiseEvent ASIENTOS_VENTA_CABECERARowDeleting(Me, New ASIENTOS_VENTA_CABECERARowChangeEvent(CType(e.Row,ASIENTOS_VENTA_CABECERARow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub RemoveASIENTOS_VENTA_CABECERARow(ByVal row As ASIENTOS_VENTA_CABECERARow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence
            Dim ds As dsAsientoContable = New dsAsientoContable
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "ASIENTOS_VENTA_CABECERADataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0"),  _
     Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class ASIENTOS_VENTA_DETALLEDataTable
        Inherits Global.System.Data.TypedTableBase(Of ASIENTOS_VENTA_DETALLERow)
        
        Private columndempresa As Global.System.Data.DataColumn
        
        Private columndejercicio As Global.System.Data.DataColumn
        
        Private columndmes As Global.System.Data.DataColumn
        
        Private columndsubdia As Global.System.Data.DataColumn
        
        Private columndcompro As Global.System.Data.DataColumn
        
        Private columndsecue As Global.System.Data.DataColumn
        
        Private columndfeccom As Global.System.Data.DataColumn
        
        Private columndcuenta As Global.System.Data.DataColumn
        
        Private columndcodane As Global.System.Data.DataColumn
        
        Private columndcencos As Global.System.Data.DataColumn
        
        Private columndcodmon As Global.System.Data.DataColumn
        
        Private columnddh As Global.System.Data.DataColumn
        
        Private columndimport As Global.System.Data.DataColumn
        
        Private columndtipdoc As Global.System.Data.DataColumn
        
        Private columndnumdoc As Global.System.Data.DataColumn
        
        Private columndfecdoc As Global.System.Data.DataColumn
        
        Private columndfecven As Global.System.Data.DataColumn
        
        Private columndarea As Global.System.Data.DataColumn
        
        Private columndflag As Global.System.Data.DataColumn
        
        Private columnddate As Global.System.Data.DataColumn
        
        Private columndxglosa As Global.System.Data.DataColumn
        
        Private columndusimpor As Global.System.Data.DataColumn
        
        Private columndmnimpor As Global.System.Data.DataColumn
        
        Private columndcodarc As Global.System.Data.DataColumn
        
        Private columndfeccom2 As Global.System.Data.DataColumn
        
        Private columndfecdoc2 As Global.System.Data.DataColumn
        
        Private columndfecven2 As Global.System.Data.DataColumn
        
        Private columndcodane2 As Global.System.Data.DataColumn
        
        Private columndvanexo As Global.System.Data.DataColumn
        
        Private columndvanexo2 As Global.System.Data.DataColumn
        
        Private columndtipcam As Global.System.Data.DataColumn
        
        Private columndcantid As Global.System.Data.DataColumn
        
        Private columndrete As Global.System.Data.DataColumn
        
        Private columndporre As Global.System.Data.DataColumn
        
        Private columndtipdor As Global.System.Data.DataColumn
        
        Private columndnumdor As Global.System.Data.DataColumn
        
        Private columndfecdo2 As Global.System.Data.DataColumn
        
        Private columndtiptas As Global.System.Data.DataColumn
        
        Private columndimptas As Global.System.Data.DataColumn
        
        Private columndimpbmn As Global.System.Data.DataColumn
        
        Private columndimpbus As Global.System.Data.DataColumn
        
        Private columndinacom As Global.System.Data.DataColumn
        
        Private columndigvcom As Global.System.Data.DataColumn
        
        Private columndmedpag As Global.System.Data.DataColumn
        
        Private columndmoncom As Global.System.Data.DataColumn
        
        Private columndcolcom As Global.System.Data.DataColumn
        
        Private columndbascom As Global.System.Data.DataColumn
        
        Private columndtpconv As Global.System.Data.DataColumn
        
        Private columndflgcom As Global.System.Data.DataColumn
        
        Private columndtipaco As Global.System.Data.DataColumn
        
        Private columndanecom As Global.System.Data.DataColumn
        
        Private columnprefijo As Global.System.Data.DataColumn
        
        Private columnprefijo2 As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "ASIENTOS_VENTA_DETALLE"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property dempresaColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columndempresa
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property dejercicioColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columndejercicio
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property dmesColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columndmes
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property dsubdiaColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columndsubdia
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property dcomproColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columndcompro
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property dsecueColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columndsecue
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property dfeccomColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columndfeccom
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property dcuentaColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columndcuenta
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property dcodaneColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columndcodane
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property dcencosColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columndcencos
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property dcodmonColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columndcodmon
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property ddhColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnddh
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property dimportColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columndimport
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property dtipdocColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columndtipdoc
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property dnumdocColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columndnumdoc
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property dfecdocColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columndfecdoc
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property dfecvenColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columndfecven
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property dareaColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columndarea
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property dflagColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columndflag
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property ddateColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnddate
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property dxglosaColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columndxglosa
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property dusimporColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columndusimpor
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property dmnimporColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columndmnimpor
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property dcodarcColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columndcodarc
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property dfeccom2Column() As Global.System.Data.DataColumn
            Get
                Return Me.columndfeccom2
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property dfecdoc2Column() As Global.System.Data.DataColumn
            Get
                Return Me.columndfecdoc2
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property dfecven2Column() As Global.System.Data.DataColumn
            Get
                Return Me.columndfecven2
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property dcodane2Column() As Global.System.Data.DataColumn
            Get
                Return Me.columndcodane2
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property dvanexoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columndvanexo
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property dvanexo2Column() As Global.System.Data.DataColumn
            Get
                Return Me.columndvanexo2
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property dtipcamColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columndtipcam
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property dcantidColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columndcantid
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property dreteColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columndrete
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property dporreColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columndporre
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property dtipdorColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columndtipdor
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property dnumdorColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columndnumdor
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property dfecdo2Column() As Global.System.Data.DataColumn
            Get
                Return Me.columndfecdo2
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property dtiptasColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columndtiptas
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property dimptasColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columndimptas
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property dimpbmnColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columndimpbmn
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property dimpbusColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columndimpbus
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property dinacomColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columndinacom
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property digvcomColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columndigvcom
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property dmedpagColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columndmedpag
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property dmoncomColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columndmoncom
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property dcolcomColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columndcolcom
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property dbascomColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columndbascom
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property dtpconvColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columndtpconv
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property dflgcomColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columndflgcom
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property dtipacoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columndtipaco
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property danecomColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columndanecom
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property prefijoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnprefijo
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property prefijo2Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnprefijo2
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As ASIENTOS_VENTA_DETALLERow
            Get
                Return CType(Me.Rows(index),ASIENTOS_VENTA_DETALLERow)
            End Get
        End Property
        
        Public Event ASIENTOS_VENTA_DETALLERowChanging As ASIENTOS_VENTA_DETALLERowChangeEventHandler
        
        Public Event ASIENTOS_VENTA_DETALLERowChanged As ASIENTOS_VENTA_DETALLERowChangeEventHandler
        
        Public Event ASIENTOS_VENTA_DETALLERowDeleting As ASIENTOS_VENTA_DETALLERowChangeEventHandler
        
        Public Event ASIENTOS_VENTA_DETALLERowDeleted As ASIENTOS_VENTA_DETALLERowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Sub AddASIENTOS_VENTA_DETALLERow(ByVal row As ASIENTOS_VENTA_DETALLERow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Function AddASIENTOS_VENTA_DETALLERow( _
                    ByVal dempresa As String,  _
                    ByVal dejercicio As String,  _
                    ByVal dmes As String,  _
                    ByVal dsubdia As String,  _
                    ByVal dcompro As String,  _
                    ByVal dsecue As String,  _
                    ByVal dfeccom As String,  _
                    ByVal dcuenta As String,  _
                    ByVal dcodane As String,  _
                    ByVal dcencos As String,  _
                    ByVal dcodmon As String,  _
                    ByVal ddh As String,  _
                    ByVal dimport As Decimal,  _
                    ByVal dtipdoc As String,  _
                    ByVal dnumdoc As String,  _
                    ByVal dfecdoc As String,  _
                    ByVal dfecven As String,  _
                    ByVal darea As String,  _
                    ByVal dflag As String,  _
                    ByVal ddate As Date,  _
                    ByVal dxglosa As String,  _
                    ByVal dusimpor As Decimal,  _
                    ByVal dmnimpor As Decimal,  _
                    ByVal dcodarc As String,  _
                    ByVal dfeccom2 As Date,  _
                    ByVal dfecdoc2 As Date,  _
                    ByVal dfecven2 As Date,  _
                    ByVal dcodane2 As String,  _
                    ByVal dvanexo As String,  _
                    ByVal dvanexo2 As String,  _
                    ByVal dtipcam As Integer,  _
                    ByVal dcantid As Integer,  _
                    ByVal drete As String,  _
                    ByVal dporre As Integer,  _
                    ByVal dtipdor As String,  _
                    ByVal dnumdor As String,  _
                    ByVal dfecdo2 As Date,  _
                    ByVal dtiptas As String,  _
                    ByVal dimptas As Integer,  _
                    ByVal dimpbmn As Integer,  _
                    ByVal dimpbus As Integer,  _
                    ByVal dinacom As Integer,  _
                    ByVal digvcom As Integer,  _
                    ByVal dmedpag As String,  _
                    ByVal dmoncom As String,  _
                    ByVal dcolcom As String,  _
                    ByVal dbascom As Integer,  _
                    ByVal dtpconv As String,  _
                    ByVal dflgcom As String,  _
                    ByVal dtipaco As String,  _
                    ByVal danecom As String,  _
                    ByVal prefijo As String,  _
                    ByVal prefijo2 As String) As ASIENTOS_VENTA_DETALLERow
            Dim rowASIENTOS_VENTA_DETALLERow As ASIENTOS_VENTA_DETALLERow = CType(Me.NewRow,ASIENTOS_VENTA_DETALLERow)
            Dim columnValuesArray() As Object = New Object() {dempresa, dejercicio, dmes, dsubdia, dcompro, dsecue, dfeccom, dcuenta, dcodane, dcencos, dcodmon, ddh, dimport, dtipdoc, dnumdoc, dfecdoc, dfecven, darea, dflag, ddate, dxglosa, dusimpor, dmnimpor, dcodarc, dfeccom2, dfecdoc2, dfecven2, dcodane2, dvanexo, dvanexo2, dtipcam, dcantid, drete, dporre, dtipdor, dnumdor, dfecdo2, dtiptas, dimptas, dimpbmn, dimpbus, dinacom, digvcom, dmedpag, dmoncom, dcolcom, dbascom, dtpconv, dflgcom, dtipaco, danecom, prefijo, prefijo2}
            rowASIENTOS_VENTA_DETALLERow.ItemArray = columnValuesArray
            Me.Rows.Add(rowASIENTOS_VENTA_DETALLERow)
            Return rowASIENTOS_VENTA_DETALLERow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As ASIENTOS_VENTA_DETALLEDataTable = CType(MyBase.Clone,ASIENTOS_VENTA_DETALLEDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New ASIENTOS_VENTA_DETALLEDataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub InitVars()
            Me.columndempresa = MyBase.Columns("dempresa")
            Me.columndejercicio = MyBase.Columns("dejercicio")
            Me.columndmes = MyBase.Columns("dmes")
            Me.columndsubdia = MyBase.Columns("dsubdia")
            Me.columndcompro = MyBase.Columns("dcompro")
            Me.columndsecue = MyBase.Columns("dsecue")
            Me.columndfeccom = MyBase.Columns("dfeccom")
            Me.columndcuenta = MyBase.Columns("dcuenta")
            Me.columndcodane = MyBase.Columns("dcodane")
            Me.columndcencos = MyBase.Columns("dcencos")
            Me.columndcodmon = MyBase.Columns("dcodmon")
            Me.columnddh = MyBase.Columns("ddh")
            Me.columndimport = MyBase.Columns("dimport")
            Me.columndtipdoc = MyBase.Columns("dtipdoc")
            Me.columndnumdoc = MyBase.Columns("dnumdoc")
            Me.columndfecdoc = MyBase.Columns("dfecdoc")
            Me.columndfecven = MyBase.Columns("dfecven")
            Me.columndarea = MyBase.Columns("darea")
            Me.columndflag = MyBase.Columns("dflag")
            Me.columnddate = MyBase.Columns("ddate")
            Me.columndxglosa = MyBase.Columns("dxglosa")
            Me.columndusimpor = MyBase.Columns("dusimpor")
            Me.columndmnimpor = MyBase.Columns("dmnimpor")
            Me.columndcodarc = MyBase.Columns("dcodarc")
            Me.columndfeccom2 = MyBase.Columns("dfeccom2")
            Me.columndfecdoc2 = MyBase.Columns("dfecdoc2")
            Me.columndfecven2 = MyBase.Columns("dfecven2")
            Me.columndcodane2 = MyBase.Columns("dcodane2")
            Me.columndvanexo = MyBase.Columns("dvanexo")
            Me.columndvanexo2 = MyBase.Columns("dvanexo2")
            Me.columndtipcam = MyBase.Columns("dtipcam")
            Me.columndcantid = MyBase.Columns("dcantid")
            Me.columndrete = MyBase.Columns("drete")
            Me.columndporre = MyBase.Columns("dporre")
            Me.columndtipdor = MyBase.Columns("dtipdor")
            Me.columndnumdor = MyBase.Columns("dnumdor")
            Me.columndfecdo2 = MyBase.Columns("dfecdo2")
            Me.columndtiptas = MyBase.Columns("dtiptas")
            Me.columndimptas = MyBase.Columns("dimptas")
            Me.columndimpbmn = MyBase.Columns("dimpbmn")
            Me.columndimpbus = MyBase.Columns("dimpbus")
            Me.columndinacom = MyBase.Columns("dinacom")
            Me.columndigvcom = MyBase.Columns("digvcom")
            Me.columndmedpag = MyBase.Columns("dmedpag")
            Me.columndmoncom = MyBase.Columns("dmoncom")
            Me.columndcolcom = MyBase.Columns("dcolcom")
            Me.columndbascom = MyBase.Columns("dbascom")
            Me.columndtpconv = MyBase.Columns("dtpconv")
            Me.columndflgcom = MyBase.Columns("dflgcom")
            Me.columndtipaco = MyBase.Columns("dtipaco")
            Me.columndanecom = MyBase.Columns("danecom")
            Me.columnprefijo = MyBase.Columns("prefijo")
            Me.columnprefijo2 = MyBase.Columns("prefijo2")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitClass()
            Me.columndempresa = New Global.System.Data.DataColumn("dempresa", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columndempresa)
            Me.columndejercicio = New Global.System.Data.DataColumn("dejercicio", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columndejercicio)
            Me.columndmes = New Global.System.Data.DataColumn("dmes", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columndmes)
            Me.columndsubdia = New Global.System.Data.DataColumn("dsubdia", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columndsubdia)
            Me.columndcompro = New Global.System.Data.DataColumn("dcompro", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columndcompro)
            Me.columndsecue = New Global.System.Data.DataColumn("dsecue", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columndsecue)
            Me.columndfeccom = New Global.System.Data.DataColumn("dfeccom", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columndfeccom)
            Me.columndcuenta = New Global.System.Data.DataColumn("dcuenta", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columndcuenta)
            Me.columndcodane = New Global.System.Data.DataColumn("dcodane", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columndcodane)
            Me.columndcencos = New Global.System.Data.DataColumn("dcencos", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columndcencos)
            Me.columndcodmon = New Global.System.Data.DataColumn("dcodmon", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columndcodmon)
            Me.columnddh = New Global.System.Data.DataColumn("ddh", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnddh)
            Me.columndimport = New Global.System.Data.DataColumn("dimport", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columndimport)
            Me.columndtipdoc = New Global.System.Data.DataColumn("dtipdoc", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columndtipdoc)
            Me.columndnumdoc = New Global.System.Data.DataColumn("dnumdoc", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columndnumdoc)
            Me.columndfecdoc = New Global.System.Data.DataColumn("dfecdoc", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columndfecdoc)
            Me.columndfecven = New Global.System.Data.DataColumn("dfecven", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columndfecven)
            Me.columndarea = New Global.System.Data.DataColumn("darea", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columndarea)
            Me.columndflag = New Global.System.Data.DataColumn("dflag", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columndflag)
            Me.columnddate = New Global.System.Data.DataColumn("ddate", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnddate)
            Me.columndxglosa = New Global.System.Data.DataColumn("dxglosa", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columndxglosa)
            Me.columndusimpor = New Global.System.Data.DataColumn("dusimpor", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columndusimpor)
            Me.columndmnimpor = New Global.System.Data.DataColumn("dmnimpor", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columndmnimpor)
            Me.columndcodarc = New Global.System.Data.DataColumn("dcodarc", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columndcodarc)
            Me.columndfeccom2 = New Global.System.Data.DataColumn("dfeccom2", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columndfeccom2)
            Me.columndfecdoc2 = New Global.System.Data.DataColumn("dfecdoc2", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columndfecdoc2)
            Me.columndfecven2 = New Global.System.Data.DataColumn("dfecven2", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columndfecven2)
            Me.columndcodane2 = New Global.System.Data.DataColumn("dcodane2", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columndcodane2)
            Me.columndvanexo = New Global.System.Data.DataColumn("dvanexo", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columndvanexo)
            Me.columndvanexo2 = New Global.System.Data.DataColumn("dvanexo2", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columndvanexo2)
            Me.columndtipcam = New Global.System.Data.DataColumn("dtipcam", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columndtipcam)
            Me.columndcantid = New Global.System.Data.DataColumn("dcantid", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columndcantid)
            Me.columndrete = New Global.System.Data.DataColumn("drete", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columndrete)
            Me.columndporre = New Global.System.Data.DataColumn("dporre", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columndporre)
            Me.columndtipdor = New Global.System.Data.DataColumn("dtipdor", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columndtipdor)
            Me.columndnumdor = New Global.System.Data.DataColumn("dnumdor", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columndnumdor)
            Me.columndfecdo2 = New Global.System.Data.DataColumn("dfecdo2", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columndfecdo2)
            Me.columndtiptas = New Global.System.Data.DataColumn("dtiptas", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columndtiptas)
            Me.columndimptas = New Global.System.Data.DataColumn("dimptas", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columndimptas)
            Me.columndimpbmn = New Global.System.Data.DataColumn("dimpbmn", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columndimpbmn)
            Me.columndimpbus = New Global.System.Data.DataColumn("dimpbus", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columndimpbus)
            Me.columndinacom = New Global.System.Data.DataColumn("dinacom", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columndinacom)
            Me.columndigvcom = New Global.System.Data.DataColumn("digvcom", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columndigvcom)
            Me.columndmedpag = New Global.System.Data.DataColumn("dmedpag", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columndmedpag)
            Me.columndmoncom = New Global.System.Data.DataColumn("dmoncom", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columndmoncom)
            Me.columndcolcom = New Global.System.Data.DataColumn("dcolcom", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columndcolcom)
            Me.columndbascom = New Global.System.Data.DataColumn("dbascom", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columndbascom)
            Me.columndtpconv = New Global.System.Data.DataColumn("dtpconv", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columndtpconv)
            Me.columndflgcom = New Global.System.Data.DataColumn("dflgcom", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columndflgcom)
            Me.columndtipaco = New Global.System.Data.DataColumn("dtipaco", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columndtipaco)
            Me.columndanecom = New Global.System.Data.DataColumn("danecom", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columndanecom)
            Me.columnprefijo = New Global.System.Data.DataColumn("prefijo", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnprefijo)
            Me.columnprefijo2 = New Global.System.Data.DataColumn("prefijo2", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnprefijo2)
            Me.columndempresa.AllowDBNull = false
            Me.columndempresa.MaxLength = 3
            Me.columndejercicio.AllowDBNull = false
            Me.columndejercicio.MaxLength = 4
            Me.columndmes.AllowDBNull = false
            Me.columndmes.MaxLength = 2
            Me.columndsubdia.AllowDBNull = false
            Me.columndsubdia.MaxLength = 2
            Me.columndcompro.MaxLength = 6
            Me.columndsecue.MaxLength = 4
            Me.columndfeccom.MaxLength = 6
            Me.columndcuenta.AllowDBNull = false
            Me.columndcuenta.MaxLength = 6
            Me.columndcodane.MaxLength = 18
            Me.columndcencos.MaxLength = 1
            Me.columndcodmon.AllowDBNull = false
            Me.columndcodmon.MaxLength = 2
            Me.columnddh.AllowDBNull = false
            Me.columnddh.MaxLength = 1
            Me.columndtipdoc.AllowDBNull = false
            Me.columndtipdoc.MaxLength = 2
            Me.columndnumdoc.MaxLength = 10
            Me.columndfecdoc.MaxLength = 6
            Me.columndfecven.MaxLength = 6
            Me.columndarea.MaxLength = 1
            Me.columndflag.AllowDBNull = false
            Me.columndflag.MaxLength = 1
            Me.columndxglosa.MaxLength = 30
            Me.columndcodarc.MaxLength = 1
            Me.columndfeccom2.AllowDBNull = false
            Me.columndfecdoc2.AllowDBNull = false
            Me.columndfecven2.AllowDBNull = false
            Me.columndcodane2.MaxLength = 20
            Me.columndvanexo.MaxLength = 1
            Me.columndvanexo2.MaxLength = 1
            Me.columndtipcam.AllowDBNull = false
            Me.columndcantid.AllowDBNull = false
            Me.columndrete.MaxLength = 1
            Me.columndporre.AllowDBNull = false
            Me.columndtipdor.MaxLength = 1
            Me.columndnumdor.MaxLength = 1
            Me.columndtiptas.MaxLength = 1
            Me.columndimptas.AllowDBNull = false
            Me.columndimpbmn.AllowDBNull = false
            Me.columndimpbus.AllowDBNull = false
            Me.columndinacom.AllowDBNull = false
            Me.columndigvcom.AllowDBNull = false
            Me.columndmedpag.MaxLength = 1
            Me.columndmoncom.MaxLength = 1
            Me.columndcolcom.MaxLength = 1
            Me.columndbascom.AllowDBNull = false
            Me.columndtpconv.MaxLength = 1
            Me.columndflgcom.MaxLength = 1
            Me.columndtipaco.MaxLength = 1
            Me.columndanecom.MaxLength = 1
            Me.columnprefijo.MaxLength = 1
            Me.columnprefijo2.MaxLength = 1
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function NewASIENTOS_VENTA_DETALLERow() As ASIENTOS_VENTA_DETALLERow
            Return CType(Me.NewRow,ASIENTOS_VENTA_DETALLERow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New ASIENTOS_VENTA_DETALLERow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(ASIENTOS_VENTA_DETALLERow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.ASIENTOS_VENTA_DETALLERowChangedEvent) Is Nothing) Then
                RaiseEvent ASIENTOS_VENTA_DETALLERowChanged(Me, New ASIENTOS_VENTA_DETALLERowChangeEvent(CType(e.Row,ASIENTOS_VENTA_DETALLERow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.ASIENTOS_VENTA_DETALLERowChangingEvent) Is Nothing) Then
                RaiseEvent ASIENTOS_VENTA_DETALLERowChanging(Me, New ASIENTOS_VENTA_DETALLERowChangeEvent(CType(e.Row,ASIENTOS_VENTA_DETALLERow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.ASIENTOS_VENTA_DETALLERowDeletedEvent) Is Nothing) Then
                RaiseEvent ASIENTOS_VENTA_DETALLERowDeleted(Me, New ASIENTOS_VENTA_DETALLERowChangeEvent(CType(e.Row,ASIENTOS_VENTA_DETALLERow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.ASIENTOS_VENTA_DETALLERowDeletingEvent) Is Nothing) Then
                RaiseEvent ASIENTOS_VENTA_DETALLERowDeleting(Me, New ASIENTOS_VENTA_DETALLERowChangeEvent(CType(e.Row,ASIENTOS_VENTA_DETALLERow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub RemoveASIENTOS_VENTA_DETALLERow(ByVal row As ASIENTOS_VENTA_DETALLERow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence
            Dim ds As dsAsientoContable = New dsAsientoContable
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "ASIENTOS_VENTA_DETALLEDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0"),  _
     Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class ASIENTOS_VENTA_LISTADataTable
        Inherits Global.System.Data.TypedTableBase(Of ASIENTOS_VENTA_LISTARow)
        
        Private columncempresa As Global.System.Data.DataColumn
        
        Private columncejercicio As Global.System.Data.DataColumn
        
        Private columncmes As Global.System.Data.DataColumn
        
        Private columncsubdia As Global.System.Data.DataColumn
        
        Private columnccompro As Global.System.Data.DataColumn
        
        Private columnccorrelativo As Global.System.Data.DataColumn
        
        Private columncfeccom As Global.System.Data.DataColumn
        
        Private columnccodmon As Global.System.Data.DataColumn
        
        Private columncsitua As Global.System.Data.DataColumn
        
        Private columnctipcam As Global.System.Data.DataColumn
        
        Private columndtipdoc As Global.System.Data.DataColumn
        
        Private columndnumdoc As Global.System.Data.DataColumn
        
        Private columndfecdoc As Global.System.Data.DataColumn
        
        Private columncglosa As Global.System.Data.DataColumn
        
        Private columnctotal As Global.System.Data.DataColumn
        
        Private columnctipo As Global.System.Data.DataColumn
        
        Private columncflag As Global.System.Data.DataColumn
        
        Private columncdate2 As Global.System.Data.DataColumn
        
        Private columncfeccom2 As Global.System.Data.DataColumn
        
        Private columncfeccam2 As Global.System.Data.DataColumn
        
        Private columncindica_exportacion As Global.System.Data.DataColumn
        
        Private columnEMPRESA As Global.System.Data.DataColumn
        
        Private columnVENTA As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "ASIENTOS_VENTA_LISTA"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property cempresaColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columncempresa
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property cejercicioColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columncejercicio
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property cmesColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columncmes
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property csubdiaColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columncsubdia
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property ccomproColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnccompro
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property ccorrelativoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnccorrelativo
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property cfeccomColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columncfeccom
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property ccodmonColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnccodmon
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property csituaColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columncsitua
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property ctipcamColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnctipcam
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property dtipdocColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columndtipdoc
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property dnumdocColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columndnumdoc
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property dfecdocColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columndfecdoc
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property cglosaColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columncglosa
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property ctotalColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnctotal
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property ctipoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnctipo
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property cflagColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columncflag
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property cdate2Column() As Global.System.Data.DataColumn
            Get
                Return Me.columncdate2
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property cfeccom2Column() As Global.System.Data.DataColumn
            Get
                Return Me.columncfeccom2
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property cfeccam2Column() As Global.System.Data.DataColumn
            Get
                Return Me.columncfeccam2
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property cindica_exportacionColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columncindica_exportacion
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property EMPRESAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnEMPRESA
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property VENTAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnVENTA
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As ASIENTOS_VENTA_LISTARow
            Get
                Return CType(Me.Rows(index),ASIENTOS_VENTA_LISTARow)
            End Get
        End Property
        
        Public Event ASIENTOS_VENTA_LISTARowChanging As ASIENTOS_VENTA_LISTARowChangeEventHandler
        
        Public Event ASIENTOS_VENTA_LISTARowChanged As ASIENTOS_VENTA_LISTARowChangeEventHandler
        
        Public Event ASIENTOS_VENTA_LISTARowDeleting As ASIENTOS_VENTA_LISTARowChangeEventHandler
        
        Public Event ASIENTOS_VENTA_LISTARowDeleted As ASIENTOS_VENTA_LISTARowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Sub AddASIENTOS_VENTA_LISTARow(ByVal row As ASIENTOS_VENTA_LISTARow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Function AddASIENTOS_VENTA_LISTARow( _
                    ByVal cempresa As String,  _
                    ByVal cejercicio As String,  _
                    ByVal cmes As String,  _
                    ByVal csubdia As String,  _
                    ByVal ccompro As String,  _
                    ByVal ccorrelativo As String,  _
                    ByVal cfeccom As String,  _
                    ByVal ccodmon As String,  _
                    ByVal csitua As String,  _
                    ByVal ctipcam As Decimal,  _
                    ByVal dtipdoc As String,  _
                    ByVal dnumdoc As String,  _
                    ByVal dfecdoc As String,  _
                    ByVal cglosa As String,  _
                    ByVal ctotal As Decimal,  _
                    ByVal ctipo As String,  _
                    ByVal cflag As String,  _
                    ByVal cdate2 As Date,  _
                    ByVal cfeccom2 As Date,  _
                    ByVal cfeccam2 As Date,  _
                    ByVal cindica_exportacion As Boolean,  _
                    ByVal EMPRESA As String,  _
                    ByVal VENTA As String) As ASIENTOS_VENTA_LISTARow
            Dim rowASIENTOS_VENTA_LISTARow As ASIENTOS_VENTA_LISTARow = CType(Me.NewRow,ASIENTOS_VENTA_LISTARow)
            Dim columnValuesArray() As Object = New Object() {cempresa, cejercicio, cmes, csubdia, ccompro, ccorrelativo, cfeccom, ccodmon, csitua, ctipcam, dtipdoc, dnumdoc, dfecdoc, cglosa, ctotal, ctipo, cflag, cdate2, cfeccom2, cfeccam2, cindica_exportacion, EMPRESA, VENTA}
            rowASIENTOS_VENTA_LISTARow.ItemArray = columnValuesArray
            Me.Rows.Add(rowASIENTOS_VENTA_LISTARow)
            Return rowASIENTOS_VENTA_LISTARow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As ASIENTOS_VENTA_LISTADataTable = CType(MyBase.Clone,ASIENTOS_VENTA_LISTADataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New ASIENTOS_VENTA_LISTADataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub InitVars()
            Me.columncempresa = MyBase.Columns("cempresa")
            Me.columncejercicio = MyBase.Columns("cejercicio")
            Me.columncmes = MyBase.Columns("cmes")
            Me.columncsubdia = MyBase.Columns("csubdia")
            Me.columnccompro = MyBase.Columns("ccompro")
            Me.columnccorrelativo = MyBase.Columns("ccorrelativo")
            Me.columncfeccom = MyBase.Columns("cfeccom")
            Me.columnccodmon = MyBase.Columns("ccodmon")
            Me.columncsitua = MyBase.Columns("csitua")
            Me.columnctipcam = MyBase.Columns("ctipcam")
            Me.columndtipdoc = MyBase.Columns("dtipdoc")
            Me.columndnumdoc = MyBase.Columns("dnumdoc")
            Me.columndfecdoc = MyBase.Columns("dfecdoc")
            Me.columncglosa = MyBase.Columns("cglosa")
            Me.columnctotal = MyBase.Columns("ctotal")
            Me.columnctipo = MyBase.Columns("ctipo")
            Me.columncflag = MyBase.Columns("cflag")
            Me.columncdate2 = MyBase.Columns("cdate2")
            Me.columncfeccom2 = MyBase.Columns("cfeccom2")
            Me.columncfeccam2 = MyBase.Columns("cfeccam2")
            Me.columncindica_exportacion = MyBase.Columns("cindica_exportacion")
            Me.columnEMPRESA = MyBase.Columns("EMPRESA")
            Me.columnVENTA = MyBase.Columns("VENTA")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitClass()
            Me.columncempresa = New Global.System.Data.DataColumn("cempresa", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncempresa)
            Me.columncejercicio = New Global.System.Data.DataColumn("cejercicio", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncejercicio)
            Me.columncmes = New Global.System.Data.DataColumn("cmes", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncmes)
            Me.columncsubdia = New Global.System.Data.DataColumn("csubdia", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncsubdia)
            Me.columnccompro = New Global.System.Data.DataColumn("ccompro", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnccompro)
            Me.columnccorrelativo = New Global.System.Data.DataColumn("ccorrelativo", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnccorrelativo)
            Me.columncfeccom = New Global.System.Data.DataColumn("cfeccom", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncfeccom)
            Me.columnccodmon = New Global.System.Data.DataColumn("ccodmon", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnccodmon)
            Me.columncsitua = New Global.System.Data.DataColumn("csitua", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncsitua)
            Me.columnctipcam = New Global.System.Data.DataColumn("ctipcam", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnctipcam)
            Me.columndtipdoc = New Global.System.Data.DataColumn("dtipdoc", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columndtipdoc)
            Me.columndnumdoc = New Global.System.Data.DataColumn("dnumdoc", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columndnumdoc)
            Me.columndfecdoc = New Global.System.Data.DataColumn("dfecdoc", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columndfecdoc)
            Me.columncglosa = New Global.System.Data.DataColumn("cglosa", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncglosa)
            Me.columnctotal = New Global.System.Data.DataColumn("ctotal", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnctotal)
            Me.columnctipo = New Global.System.Data.DataColumn("ctipo", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnctipo)
            Me.columncflag = New Global.System.Data.DataColumn("cflag", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncflag)
            Me.columncdate2 = New Global.System.Data.DataColumn("cdate2", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncdate2)
            Me.columncfeccom2 = New Global.System.Data.DataColumn("cfeccom2", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncfeccom2)
            Me.columncfeccam2 = New Global.System.Data.DataColumn("cfeccam2", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncfeccam2)
            Me.columncindica_exportacion = New Global.System.Data.DataColumn("cindica_exportacion", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncindica_exportacion)
            Me.columnEMPRESA = New Global.System.Data.DataColumn("EMPRESA", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnEMPRESA)
            Me.columnVENTA = New Global.System.Data.DataColumn("VENTA", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnVENTA)
            Me.columncempresa.ReadOnly = true
            Me.columncempresa.MaxLength = 3
            Me.columncejercicio.AllowDBNull = false
            Me.columncejercicio.MaxLength = 4
            Me.columncmes.AllowDBNull = false
            Me.columncmes.MaxLength = 2
            Me.columncsubdia.AllowDBNull = false
            Me.columncsubdia.MaxLength = 2
            Me.columnccompro.MaxLength = 6
            Me.columnccorrelativo.MaxLength = 6
            Me.columncfeccom.ReadOnly = true
            Me.columncfeccom.MaxLength = 6
            Me.columnccodmon.ReadOnly = true
            Me.columnccodmon.MaxLength = 2
            Me.columncsitua.ReadOnly = true
            Me.columncsitua.MaxLength = 1
            Me.columnctipcam.AllowDBNull = false
            Me.columndtipdoc.AllowDBNull = false
            Me.columndtipdoc.MaxLength = 2
            Me.columndnumdoc.MaxLength = 10
            Me.columndfecdoc.MaxLength = 6
            Me.columncglosa.ReadOnly = true
            Me.columncglosa.MaxLength = 40
            Me.columnctotal.AllowDBNull = false
            Me.columnctipo.ReadOnly = true
            Me.columnctipo.MaxLength = 1
            Me.columncflag.ReadOnly = true
            Me.columncflag.MaxLength = 1
            Me.columncdate2.ReadOnly = true
            Me.columncfeccom2.AllowDBNull = false
            Me.columncfeccam2.ReadOnly = true
            Me.columncindica_exportacion.AllowDBNull = false
            Me.columnEMPRESA.AllowDBNull = false
            Me.columnEMPRESA.MaxLength = 3
            Me.columnVENTA.AllowDBNull = false
            Me.columnVENTA.MaxLength = 12
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function NewASIENTOS_VENTA_LISTARow() As ASIENTOS_VENTA_LISTARow
            Return CType(Me.NewRow,ASIENTOS_VENTA_LISTARow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New ASIENTOS_VENTA_LISTARow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(ASIENTOS_VENTA_LISTARow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.ASIENTOS_VENTA_LISTARowChangedEvent) Is Nothing) Then
                RaiseEvent ASIENTOS_VENTA_LISTARowChanged(Me, New ASIENTOS_VENTA_LISTARowChangeEvent(CType(e.Row,ASIENTOS_VENTA_LISTARow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.ASIENTOS_VENTA_LISTARowChangingEvent) Is Nothing) Then
                RaiseEvent ASIENTOS_VENTA_LISTARowChanging(Me, New ASIENTOS_VENTA_LISTARowChangeEvent(CType(e.Row,ASIENTOS_VENTA_LISTARow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.ASIENTOS_VENTA_LISTARowDeletedEvent) Is Nothing) Then
                RaiseEvent ASIENTOS_VENTA_LISTARowDeleted(Me, New ASIENTOS_VENTA_LISTARowChangeEvent(CType(e.Row,ASIENTOS_VENTA_LISTARow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.ASIENTOS_VENTA_LISTARowDeletingEvent) Is Nothing) Then
                RaiseEvent ASIENTOS_VENTA_LISTARowDeleting(Me, New ASIENTOS_VENTA_LISTARowChangeEvent(CType(e.Row,ASIENTOS_VENTA_LISTARow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub RemoveASIENTOS_VENTA_LISTARow(ByVal row As ASIENTOS_VENTA_LISTARow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence
            Dim ds As dsAsientoContable = New dsAsientoContable
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "ASIENTOS_VENTA_LISTADataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Partial Public Class CABECERARow
        Inherits Global.System.Data.DataRow
        
        Private tableCABECERA As CABECERADataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableCABECERA = CType(Me.Table,CABECERADataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property csubdia() As String
            Get
                Try 
                    Return CType(Me(Me.tableCABECERA.csubdiaColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'csubdia' de la tabla 'CABECERA' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableCABECERA.csubdiaColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property ccompro() As String
            Get
                Try 
                    Return CType(Me(Me.tableCABECERA.ccomproColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'ccompro' de la tabla 'CABECERA' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableCABECERA.ccomproColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property cfeccom() As String
            Get
                Try 
                    Return CType(Me(Me.tableCABECERA.cfeccomColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'cfeccom' de la tabla 'CABECERA' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableCABECERA.cfeccomColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property ccodmon() As String
            Get
                Try 
                    Return CType(Me(Me.tableCABECERA.ccodmonColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'ccodmon' de la tabla 'CABECERA' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableCABECERA.ccodmonColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property csitua() As String
            Get
                Try 
                    Return CType(Me(Me.tableCABECERA.csituaColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'csitua' de la tabla 'CABECERA' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableCABECERA.csituaColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property ctipcam() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableCABECERA.ctipcamColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'ctipcam' de la tabla 'CABECERA' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableCABECERA.ctipcamColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property cglosa() As String
            Get
                Try 
                    Return CType(Me(Me.tableCABECERA.cglosaColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'cglosa' de la tabla 'CABECERA' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableCABECERA.cglosaColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property ctotal() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableCABECERA.ctotalColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'ctotal' de la tabla 'CABECERA' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableCABECERA.ctotalColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property ctipo() As String
            Get
                Try 
                    Return CType(Me(Me.tableCABECERA.ctipoColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'ctipo' de la tabla 'CABECERA' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableCABECERA.ctipoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property cflag() As String
            Get
                Try 
                    Return CType(Me(Me.tableCABECERA.cflagColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'cflag' de la tabla 'CABECERA' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableCABECERA.cflagColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property _cdate() As Date
            Get
                Try 
                    Return CType(Me(Me.tableCABECERA.cdateColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'cdate' de la tabla 'CABECERA' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableCABECERA.cdateColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property chora() As String
            Get
                Try 
                    Return CType(Me(Me.tableCABECERA.choraColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'chora' de la tabla 'CABECERA' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableCABECERA.choraColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property cuser() As String
            Get
                Try 
                    Return CType(Me(Me.tableCABECERA.cuserColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'cuser' de la tabla 'CABECERA' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableCABECERA.cuserColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property cfeccam() As String
            Get
                Try 
                    Return CType(Me(Me.tableCABECERA.cfeccamColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'cfeccam' de la tabla 'CABECERA' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableCABECERA.cfeccamColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property corig() As String
            Get
                Try 
                    Return CType(Me(Me.tableCABECERA.corigColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'corig' de la tabla 'CABECERA' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableCABECERA.corigColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property cform() As String
            Get
                Try 
                    Return CType(Me(Me.tableCABECERA.cformColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'cform' de la tabla 'CABECERA' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableCABECERA.cformColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property ctipcom() As String
            Get
                Try 
                    Return CType(Me(Me.tableCABECERA.ctipcomColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'ctipcom' de la tabla 'CABECERA' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableCABECERA.ctipcomColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property cextor() As String
            Get
                Try 
                    Return CType(Me(Me.tableCABECERA.cextorColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'cextor' de la tabla 'CABECERA' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableCABECERA.cextorColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property cfeccom2() As Date
            Get
                Try 
                    Return CType(Me(Me.tableCABECERA.cfeccom2Column),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'cfeccom2' de la tabla 'CABECERA' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableCABECERA.cfeccom2Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property cfeccam2() As Date
            Get
                Try 
                    Return CType(Me(Me.tableCABECERA.cfeccam2Column),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'cfeccam2' de la tabla 'CABECERA' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableCABECERA.cfeccam2Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IscsubdiaNull() As Boolean
            Return Me.IsNull(Me.tableCABECERA.csubdiaColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetcsubdiaNull()
            Me(Me.tableCABECERA.csubdiaColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsccomproNull() As Boolean
            Return Me.IsNull(Me.tableCABECERA.ccomproColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetccomproNull()
            Me(Me.tableCABECERA.ccomproColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IscfeccomNull() As Boolean
            Return Me.IsNull(Me.tableCABECERA.cfeccomColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetcfeccomNull()
            Me(Me.tableCABECERA.cfeccomColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsccodmonNull() As Boolean
            Return Me.IsNull(Me.tableCABECERA.ccodmonColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetccodmonNull()
            Me(Me.tableCABECERA.ccodmonColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IscsituaNull() As Boolean
            Return Me.IsNull(Me.tableCABECERA.csituaColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetcsituaNull()
            Me(Me.tableCABECERA.csituaColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsctipcamNull() As Boolean
            Return Me.IsNull(Me.tableCABECERA.ctipcamColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetctipcamNull()
            Me(Me.tableCABECERA.ctipcamColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IscglosaNull() As Boolean
            Return Me.IsNull(Me.tableCABECERA.cglosaColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetcglosaNull()
            Me(Me.tableCABECERA.cglosaColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsctotalNull() As Boolean
            Return Me.IsNull(Me.tableCABECERA.ctotalColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetctotalNull()
            Me(Me.tableCABECERA.ctotalColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsctipoNull() As Boolean
            Return Me.IsNull(Me.tableCABECERA.ctipoColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetctipoNull()
            Me(Me.tableCABECERA.ctipoColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IscflagNull() As Boolean
            Return Me.IsNull(Me.tableCABECERA.cflagColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetcflagNull()
            Me(Me.tableCABECERA.cflagColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Is_cdateNull() As Boolean
            Return Me.IsNull(Me.tableCABECERA.cdateColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Set_cdateNull()
            Me(Me.tableCABECERA.cdateColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IschoraNull() As Boolean
            Return Me.IsNull(Me.tableCABECERA.choraColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetchoraNull()
            Me(Me.tableCABECERA.choraColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IscuserNull() As Boolean
            Return Me.IsNull(Me.tableCABECERA.cuserColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetcuserNull()
            Me(Me.tableCABECERA.cuserColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IscfeccamNull() As Boolean
            Return Me.IsNull(Me.tableCABECERA.cfeccamColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetcfeccamNull()
            Me(Me.tableCABECERA.cfeccamColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IscorigNull() As Boolean
            Return Me.IsNull(Me.tableCABECERA.corigColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetcorigNull()
            Me(Me.tableCABECERA.corigColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IscformNull() As Boolean
            Return Me.IsNull(Me.tableCABECERA.cformColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetcformNull()
            Me(Me.tableCABECERA.cformColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsctipcomNull() As Boolean
            Return Me.IsNull(Me.tableCABECERA.ctipcomColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetctipcomNull()
            Me(Me.tableCABECERA.ctipcomColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IscextorNull() As Boolean
            Return Me.IsNull(Me.tableCABECERA.cextorColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetcextorNull()
            Me(Me.tableCABECERA.cextorColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Iscfeccom2Null() As Boolean
            Return Me.IsNull(Me.tableCABECERA.cfeccom2Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setcfeccom2Null()
            Me(Me.tableCABECERA.cfeccom2Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Iscfeccam2Null() As Boolean
            Return Me.IsNull(Me.tableCABECERA.cfeccam2Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setcfeccam2Null()
            Me(Me.tableCABECERA.cfeccam2Column) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Partial Public Class DETALLERow
        Inherits Global.System.Data.DataRow
        
        Private tableDETALLE As DETALLEDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableDETALLE = CType(Me.Table,DETALLEDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property dsubdia() As String
            Get
                Try 
                    Return CType(Me(Me.tableDETALLE.dsubdiaColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'dsubdia' de la tabla 'DETALLE' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableDETALLE.dsubdiaColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property dcompro() As String
            Get
                Try 
                    Return CType(Me(Me.tableDETALLE.dcomproColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'dcompro' de la tabla 'DETALLE' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableDETALLE.dcomproColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property dsecue() As String
            Get
                Try 
                    Return CType(Me(Me.tableDETALLE.dsecueColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'dsecue' de la tabla 'DETALLE' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableDETALLE.dsecueColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property dfeccom() As String
            Get
                Try 
                    Return CType(Me(Me.tableDETALLE.dfeccomColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'dfeccom' de la tabla 'DETALLE' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableDETALLE.dfeccomColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property dcuenta() As String
            Get
                Try 
                    Return CType(Me(Me.tableDETALLE.dcuentaColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'dcuenta' de la tabla 'DETALLE' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableDETALLE.dcuentaColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property dcodane() As String
            Get
                Try 
                    Return CType(Me(Me.tableDETALLE.dcodaneColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'dcodane' de la tabla 'DETALLE' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableDETALLE.dcodaneColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property dcencos() As String
            Get
                Try 
                    Return CType(Me(Me.tableDETALLE.dcencosColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'dcencos' de la tabla 'DETALLE' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableDETALLE.dcencosColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property dcodmon() As String
            Get
                Try 
                    Return CType(Me(Me.tableDETALLE.dcodmonColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'dcodmon' de la tabla 'DETALLE' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableDETALLE.dcodmonColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property ddh() As String
            Get
                Try 
                    Return CType(Me(Me.tableDETALLE.ddhColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'ddh' de la tabla 'DETALLE' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableDETALLE.ddhColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property dimport() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableDETALLE.dimportColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'dimport' de la tabla 'DETALLE' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableDETALLE.dimportColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property dtipdoc() As String
            Get
                Try 
                    Return CType(Me(Me.tableDETALLE.dtipdocColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'dtipdoc' de la tabla 'DETALLE' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableDETALLE.dtipdocColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property dnumdoc() As String
            Get
                Try 
                    Return CType(Me(Me.tableDETALLE.dnumdocColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'dnumdoc' de la tabla 'DETALLE' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableDETALLE.dnumdocColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property dfecdoc() As String
            Get
                Try 
                    Return CType(Me(Me.tableDETALLE.dfecdocColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'dfecdoc' de la tabla 'DETALLE' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableDETALLE.dfecdocColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property dfecven() As String
            Get
                Try 
                    Return CType(Me(Me.tableDETALLE.dfecvenColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'dfecven' de la tabla 'DETALLE' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableDETALLE.dfecvenColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property darea() As String
            Get
                Try 
                    Return CType(Me(Me.tableDETALLE.dareaColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'darea' de la tabla 'DETALLE' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableDETALLE.dareaColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property dflag() As String
            Get
                Try 
                    Return CType(Me(Me.tableDETALLE.dflagColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'dflag' de la tabla 'DETALLE' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableDETALLE.dflagColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property ddate() As Date
            Get
                Try 
                    Return CType(Me(Me.tableDETALLE.ddateColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'ddate' de la tabla 'DETALLE' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableDETALLE.ddateColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property dxglosa() As String
            Get
                Try 
                    Return CType(Me(Me.tableDETALLE.dxglosaColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'dxglosa' de la tabla 'DETALLE' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableDETALLE.dxglosaColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property dusimpor() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableDETALLE.dusimporColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'dusimpor' de la tabla 'DETALLE' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableDETALLE.dusimporColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property dmnimpor() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableDETALLE.dmnimporColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'dmnimpor' de la tabla 'DETALLE' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableDETALLE.dmnimporColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property dcodarc() As String
            Get
                Try 
                    Return CType(Me(Me.tableDETALLE.dcodarcColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'dcodarc' de la tabla 'DETALLE' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableDETALLE.dcodarcColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property dfeccom2() As Date
            Get
                Try 
                    Return CType(Me(Me.tableDETALLE.dfeccom2Column),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'dfeccom2' de la tabla 'DETALLE' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableDETALLE.dfeccom2Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property dfecdoc2() As Date
            Get
                Try 
                    Return CType(Me(Me.tableDETALLE.dfecdoc2Column),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'dfecdoc2' de la tabla 'DETALLE' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableDETALLE.dfecdoc2Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property dfecven2() As Date
            Get
                Try 
                    Return CType(Me(Me.tableDETALLE.dfecven2Column),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'dfecven2' de la tabla 'DETALLE' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableDETALLE.dfecven2Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property dcodane2() As String
            Get
                Try 
                    Return CType(Me(Me.tableDETALLE.dcodane2Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'dcodane2' de la tabla 'DETALLE' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableDETALLE.dcodane2Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property dvanexo() As String
            Get
                Try 
                    Return CType(Me(Me.tableDETALLE.dvanexoColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'dvanexo' de la tabla 'DETALLE' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableDETALLE.dvanexoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property dvanexo2() As String
            Get
                Try 
                    Return CType(Me(Me.tableDETALLE.dvanexo2Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'dvanexo2' de la tabla 'DETALLE' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableDETALLE.dvanexo2Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property dtipcam() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableDETALLE.dtipcamColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'dtipcam' de la tabla 'DETALLE' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableDETALLE.dtipcamColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property dcantid() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableDETALLE.dcantidColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'dcantid' de la tabla 'DETALLE' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableDETALLE.dcantidColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property drete() As String
            Get
                Try 
                    Return CType(Me(Me.tableDETALLE.dreteColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'drete' de la tabla 'DETALLE' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableDETALLE.dreteColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property dporre() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableDETALLE.dporreColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'dporre' de la tabla 'DETALLE' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableDETALLE.dporreColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property dtipdor() As String
            Get
                Try 
                    Return CType(Me(Me.tableDETALLE.dtipdorColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'dtipdor' de la tabla 'DETALLE' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableDETALLE.dtipdorColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property dnumdor() As String
            Get
                Try 
                    Return CType(Me(Me.tableDETALLE.dnumdorColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'dnumdor' de la tabla 'DETALLE' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableDETALLE.dnumdorColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property dfecdo2() As Date
            Get
                Try 
                    Return CType(Me(Me.tableDETALLE.dfecdo2Column),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'dfecdo2' de la tabla 'DETALLE' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableDETALLE.dfecdo2Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property dtiptas() As String
            Get
                Try 
                    Return CType(Me(Me.tableDETALLE.dtiptasColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'dtiptas' de la tabla 'DETALLE' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableDETALLE.dtiptasColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property dimptas() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableDETALLE.dimptasColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'dimptas' de la tabla 'DETALLE' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableDETALLE.dimptasColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property dimpbmn() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableDETALLE.dimpbmnColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'dimpbmn' de la tabla 'DETALLE' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableDETALLE.dimpbmnColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property dimpbus() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableDETALLE.dimpbusColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'dimpbus' de la tabla 'DETALLE' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableDETALLE.dimpbusColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property dinacom() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableDETALLE.dinacomColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'dinacom' de la tabla 'DETALLE' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableDETALLE.dinacomColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property digvcom() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableDETALLE.digvcomColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'digvcom' de la tabla 'DETALLE' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableDETALLE.digvcomColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property dmedpag() As String
            Get
                Try 
                    Return CType(Me(Me.tableDETALLE.dmedpagColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'dmedpag' de la tabla 'DETALLE' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableDETALLE.dmedpagColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property dmoncom() As String
            Get
                Try 
                    Return CType(Me(Me.tableDETALLE.dmoncomColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'dmoncom' de la tabla 'DETALLE' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableDETALLE.dmoncomColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property dcolcom() As String
            Get
                Try 
                    Return CType(Me(Me.tableDETALLE.dcolcomColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'dcolcom' de la tabla 'DETALLE' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableDETALLE.dcolcomColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property dbascom() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableDETALLE.dbascomColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'dbascom' de la tabla 'DETALLE' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableDETALLE.dbascomColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property dtpconv() As String
            Get
                Try 
                    Return CType(Me(Me.tableDETALLE.dtpconvColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'dtpconv' de la tabla 'DETALLE' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableDETALLE.dtpconvColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property dflgcom() As String
            Get
                Try 
                    Return CType(Me(Me.tableDETALLE.dflgcomColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'dflgcom' de la tabla 'DETALLE' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableDETALLE.dflgcomColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property dtipaco() As String
            Get
                Try 
                    Return CType(Me(Me.tableDETALLE.dtipacoColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'dtipaco' de la tabla 'DETALLE' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableDETALLE.dtipacoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property danecom() As String
            Get
                Try 
                    Return CType(Me(Me.tableDETALLE.danecomColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'danecom' de la tabla 'DETALLE' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableDETALLE.danecomColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsdsubdiaNull() As Boolean
            Return Me.IsNull(Me.tableDETALLE.dsubdiaColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetdsubdiaNull()
            Me(Me.tableDETALLE.dsubdiaColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsdcomproNull() As Boolean
            Return Me.IsNull(Me.tableDETALLE.dcomproColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetdcomproNull()
            Me(Me.tableDETALLE.dcomproColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsdsecueNull() As Boolean
            Return Me.IsNull(Me.tableDETALLE.dsecueColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetdsecueNull()
            Me(Me.tableDETALLE.dsecueColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsdfeccomNull() As Boolean
            Return Me.IsNull(Me.tableDETALLE.dfeccomColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetdfeccomNull()
            Me(Me.tableDETALLE.dfeccomColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsdcuentaNull() As Boolean
            Return Me.IsNull(Me.tableDETALLE.dcuentaColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetdcuentaNull()
            Me(Me.tableDETALLE.dcuentaColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsdcodaneNull() As Boolean
            Return Me.IsNull(Me.tableDETALLE.dcodaneColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetdcodaneNull()
            Me(Me.tableDETALLE.dcodaneColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsdcencosNull() As Boolean
            Return Me.IsNull(Me.tableDETALLE.dcencosColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetdcencosNull()
            Me(Me.tableDETALLE.dcencosColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsdcodmonNull() As Boolean
            Return Me.IsNull(Me.tableDETALLE.dcodmonColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetdcodmonNull()
            Me(Me.tableDETALLE.dcodmonColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsddhNull() As Boolean
            Return Me.IsNull(Me.tableDETALLE.ddhColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetddhNull()
            Me(Me.tableDETALLE.ddhColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsdimportNull() As Boolean
            Return Me.IsNull(Me.tableDETALLE.dimportColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetdimportNull()
            Me(Me.tableDETALLE.dimportColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsdtipdocNull() As Boolean
            Return Me.IsNull(Me.tableDETALLE.dtipdocColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetdtipdocNull()
            Me(Me.tableDETALLE.dtipdocColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsdnumdocNull() As Boolean
            Return Me.IsNull(Me.tableDETALLE.dnumdocColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetdnumdocNull()
            Me(Me.tableDETALLE.dnumdocColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsdfecdocNull() As Boolean
            Return Me.IsNull(Me.tableDETALLE.dfecdocColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetdfecdocNull()
            Me(Me.tableDETALLE.dfecdocColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsdfecvenNull() As Boolean
            Return Me.IsNull(Me.tableDETALLE.dfecvenColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetdfecvenNull()
            Me(Me.tableDETALLE.dfecvenColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsdareaNull() As Boolean
            Return Me.IsNull(Me.tableDETALLE.dareaColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetdareaNull()
            Me(Me.tableDETALLE.dareaColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsdflagNull() As Boolean
            Return Me.IsNull(Me.tableDETALLE.dflagColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetdflagNull()
            Me(Me.tableDETALLE.dflagColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsddateNull() As Boolean
            Return Me.IsNull(Me.tableDETALLE.ddateColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetddateNull()
            Me(Me.tableDETALLE.ddateColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsdxglosaNull() As Boolean
            Return Me.IsNull(Me.tableDETALLE.dxglosaColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetdxglosaNull()
            Me(Me.tableDETALLE.dxglosaColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsdusimporNull() As Boolean
            Return Me.IsNull(Me.tableDETALLE.dusimporColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetdusimporNull()
            Me(Me.tableDETALLE.dusimporColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsdmnimporNull() As Boolean
            Return Me.IsNull(Me.tableDETALLE.dmnimporColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetdmnimporNull()
            Me(Me.tableDETALLE.dmnimporColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsdcodarcNull() As Boolean
            Return Me.IsNull(Me.tableDETALLE.dcodarcColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetdcodarcNull()
            Me(Me.tableDETALLE.dcodarcColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isdfeccom2Null() As Boolean
            Return Me.IsNull(Me.tableDETALLE.dfeccom2Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setdfeccom2Null()
            Me(Me.tableDETALLE.dfeccom2Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isdfecdoc2Null() As Boolean
            Return Me.IsNull(Me.tableDETALLE.dfecdoc2Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setdfecdoc2Null()
            Me(Me.tableDETALLE.dfecdoc2Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isdfecven2Null() As Boolean
            Return Me.IsNull(Me.tableDETALLE.dfecven2Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setdfecven2Null()
            Me(Me.tableDETALLE.dfecven2Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isdcodane2Null() As Boolean
            Return Me.IsNull(Me.tableDETALLE.dcodane2Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setdcodane2Null()
            Me(Me.tableDETALLE.dcodane2Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsdvanexoNull() As Boolean
            Return Me.IsNull(Me.tableDETALLE.dvanexoColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetdvanexoNull()
            Me(Me.tableDETALLE.dvanexoColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isdvanexo2Null() As Boolean
            Return Me.IsNull(Me.tableDETALLE.dvanexo2Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setdvanexo2Null()
            Me(Me.tableDETALLE.dvanexo2Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsdtipcamNull() As Boolean
            Return Me.IsNull(Me.tableDETALLE.dtipcamColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetdtipcamNull()
            Me(Me.tableDETALLE.dtipcamColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsdcantidNull() As Boolean
            Return Me.IsNull(Me.tableDETALLE.dcantidColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetdcantidNull()
            Me(Me.tableDETALLE.dcantidColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsdreteNull() As Boolean
            Return Me.IsNull(Me.tableDETALLE.dreteColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetdreteNull()
            Me(Me.tableDETALLE.dreteColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsdporreNull() As Boolean
            Return Me.IsNull(Me.tableDETALLE.dporreColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetdporreNull()
            Me(Me.tableDETALLE.dporreColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsdtipdorNull() As Boolean
            Return Me.IsNull(Me.tableDETALLE.dtipdorColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetdtipdorNull()
            Me(Me.tableDETALLE.dtipdorColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsdnumdorNull() As Boolean
            Return Me.IsNull(Me.tableDETALLE.dnumdorColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetdnumdorNull()
            Me(Me.tableDETALLE.dnumdorColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isdfecdo2Null() As Boolean
            Return Me.IsNull(Me.tableDETALLE.dfecdo2Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setdfecdo2Null()
            Me(Me.tableDETALLE.dfecdo2Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsdtiptasNull() As Boolean
            Return Me.IsNull(Me.tableDETALLE.dtiptasColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetdtiptasNull()
            Me(Me.tableDETALLE.dtiptasColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsdimptasNull() As Boolean
            Return Me.IsNull(Me.tableDETALLE.dimptasColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetdimptasNull()
            Me(Me.tableDETALLE.dimptasColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsdimpbmnNull() As Boolean
            Return Me.IsNull(Me.tableDETALLE.dimpbmnColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetdimpbmnNull()
            Me(Me.tableDETALLE.dimpbmnColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsdimpbusNull() As Boolean
            Return Me.IsNull(Me.tableDETALLE.dimpbusColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetdimpbusNull()
            Me(Me.tableDETALLE.dimpbusColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsdinacomNull() As Boolean
            Return Me.IsNull(Me.tableDETALLE.dinacomColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetdinacomNull()
            Me(Me.tableDETALLE.dinacomColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsdigvcomNull() As Boolean
            Return Me.IsNull(Me.tableDETALLE.digvcomColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetdigvcomNull()
            Me(Me.tableDETALLE.digvcomColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsdmedpagNull() As Boolean
            Return Me.IsNull(Me.tableDETALLE.dmedpagColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetdmedpagNull()
            Me(Me.tableDETALLE.dmedpagColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsdmoncomNull() As Boolean
            Return Me.IsNull(Me.tableDETALLE.dmoncomColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetdmoncomNull()
            Me(Me.tableDETALLE.dmoncomColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsdcolcomNull() As Boolean
            Return Me.IsNull(Me.tableDETALLE.dcolcomColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetdcolcomNull()
            Me(Me.tableDETALLE.dcolcomColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsdbascomNull() As Boolean
            Return Me.IsNull(Me.tableDETALLE.dbascomColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetdbascomNull()
            Me(Me.tableDETALLE.dbascomColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsdtpconvNull() As Boolean
            Return Me.IsNull(Me.tableDETALLE.dtpconvColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetdtpconvNull()
            Me(Me.tableDETALLE.dtpconvColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsdflgcomNull() As Boolean
            Return Me.IsNull(Me.tableDETALLE.dflgcomColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetdflgcomNull()
            Me(Me.tableDETALLE.dflgcomColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsdtipacoNull() As Boolean
            Return Me.IsNull(Me.tableDETALLE.dtipacoColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetdtipacoNull()
            Me(Me.tableDETALLE.dtipacoColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsdanecomNull() As Boolean
            Return Me.IsNull(Me.tableDETALLE.danecomColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetdanecomNull()
            Me(Me.tableDETALLE.danecomColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Partial Public Class ASIENTOS_VENTA_CABECERARow
        Inherits Global.System.Data.DataRow
        
        Private tableASIENTOS_VENTA_CABECERA As ASIENTOS_VENTA_CABECERADataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableASIENTOS_VENTA_CABECERA = CType(Me.Table,ASIENTOS_VENTA_CABECERADataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property cempresa() As String
            Get
                Try 
                    Return CType(Me(Me.tableASIENTOS_VENTA_CABECERA.cempresaColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'cempresa' de la tabla 'ASIENTOS_VENTA_CABECERA' es DBNull"& _ 
                            ".", e)
                End Try
            End Get
            Set
                Me(Me.tableASIENTOS_VENTA_CABECERA.cempresaColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property cejercicio() As String
            Get
                Return CType(Me(Me.tableASIENTOS_VENTA_CABECERA.cejercicioColumn),String)
            End Get
            Set
                Me(Me.tableASIENTOS_VENTA_CABECERA.cejercicioColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property cmes() As String
            Get
                Return CType(Me(Me.tableASIENTOS_VENTA_CABECERA.cmesColumn),String)
            End Get
            Set
                Me(Me.tableASIENTOS_VENTA_CABECERA.cmesColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property csubdia() As String
            Get
                Return CType(Me(Me.tableASIENTOS_VENTA_CABECERA.csubdiaColumn),String)
            End Get
            Set
                Me(Me.tableASIENTOS_VENTA_CABECERA.csubdiaColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property ccompro() As String
            Get
                Try 
                    Return CType(Me(Me.tableASIENTOS_VENTA_CABECERA.ccomproColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'ccompro' de la tabla 'ASIENTOS_VENTA_CABECERA' es DBNull."& _ 
                            "", e)
                End Try
            End Get
            Set
                Me(Me.tableASIENTOS_VENTA_CABECERA.ccomproColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property cfeccom() As String
            Get
                Try 
                    Return CType(Me(Me.tableASIENTOS_VENTA_CABECERA.cfeccomColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'cfeccom' de la tabla 'ASIENTOS_VENTA_CABECERA' es DBNull."& _ 
                            "", e)
                End Try
            End Get
            Set
                Me(Me.tableASIENTOS_VENTA_CABECERA.cfeccomColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property ccodmon() As String
            Get
                Try 
                    Return CType(Me(Me.tableASIENTOS_VENTA_CABECERA.ccodmonColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'ccodmon' de la tabla 'ASIENTOS_VENTA_CABECERA' es DBNull."& _ 
                            "", e)
                End Try
            End Get
            Set
                Me(Me.tableASIENTOS_VENTA_CABECERA.ccodmonColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property csitua() As String
            Get
                Try 
                    Return CType(Me(Me.tableASIENTOS_VENTA_CABECERA.csituaColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'csitua' de la tabla 'ASIENTOS_VENTA_CABECERA' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableASIENTOS_VENTA_CABECERA.csituaColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property ctipcam() As Decimal
            Get
                Return CType(Me(Me.tableASIENTOS_VENTA_CABECERA.ctipcamColumn),Decimal)
            End Get
            Set
                Me(Me.tableASIENTOS_VENTA_CABECERA.ctipcamColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property cglosa() As String
            Get
                Try 
                    Return CType(Me(Me.tableASIENTOS_VENTA_CABECERA.cglosaColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'cglosa' de la tabla 'ASIENTOS_VENTA_CABECERA' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableASIENTOS_VENTA_CABECERA.cglosaColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property ctotal() As Decimal
            Get
                Return CType(Me(Me.tableASIENTOS_VENTA_CABECERA.ctotalColumn),Decimal)
            End Get
            Set
                Me(Me.tableASIENTOS_VENTA_CABECERA.ctotalColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property ctipo() As String
            Get
                Try 
                    Return CType(Me(Me.tableASIENTOS_VENTA_CABECERA.ctipoColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'ctipo' de la tabla 'ASIENTOS_VENTA_CABECERA' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableASIENTOS_VENTA_CABECERA.ctipoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property cflag() As String
            Get
                Try 
                    Return CType(Me(Me.tableASIENTOS_VENTA_CABECERA.cflagColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'cflag' de la tabla 'ASIENTOS_VENTA_CABECERA' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableASIENTOS_VENTA_CABECERA.cflagColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property _cdate() As Date
            Get
                Try 
                    Return CType(Me(Me.tableASIENTOS_VENTA_CABECERA.cdateColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'cdate' de la tabla 'ASIENTOS_VENTA_CABECERA' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableASIENTOS_VENTA_CABECERA.cdateColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property chora() As String
            Get
                Try 
                    Return CType(Me(Me.tableASIENTOS_VENTA_CABECERA.choraColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'chora' de la tabla 'ASIENTOS_VENTA_CABECERA' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableASIENTOS_VENTA_CABECERA.choraColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property cuser() As String
            Get
                Try 
                    Return CType(Me(Me.tableASIENTOS_VENTA_CABECERA.cuserColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'cuser' de la tabla 'ASIENTOS_VENTA_CABECERA' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableASIENTOS_VENTA_CABECERA.cuserColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property cfeccam() As String
            Get
                Try 
                    Return CType(Me(Me.tableASIENTOS_VENTA_CABECERA.cfeccamColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'cfeccam' de la tabla 'ASIENTOS_VENTA_CABECERA' es DBNull."& _ 
                            "", e)
                End Try
            End Get
            Set
                Me(Me.tableASIENTOS_VENTA_CABECERA.cfeccamColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property corig() As String
            Get
                Try 
                    Return CType(Me(Me.tableASIENTOS_VENTA_CABECERA.corigColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'corig' de la tabla 'ASIENTOS_VENTA_CABECERA' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableASIENTOS_VENTA_CABECERA.corigColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property cform() As String
            Get
                Try 
                    Return CType(Me(Me.tableASIENTOS_VENTA_CABECERA.cformColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'cform' de la tabla 'ASIENTOS_VENTA_CABECERA' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableASIENTOS_VENTA_CABECERA.cformColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property ctipcom() As String
            Get
                Try 
                    Return CType(Me(Me.tableASIENTOS_VENTA_CABECERA.ctipcomColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'ctipcom' de la tabla 'ASIENTOS_VENTA_CABECERA' es DBNull."& _ 
                            "", e)
                End Try
            End Get
            Set
                Me(Me.tableASIENTOS_VENTA_CABECERA.ctipcomColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property cextor() As String
            Get
                Try 
                    Return CType(Me(Me.tableASIENTOS_VENTA_CABECERA.cextorColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'cextor' de la tabla 'ASIENTOS_VENTA_CABECERA' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableASIENTOS_VENTA_CABECERA.cextorColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property cfeccom2() As Date
            Get
                Return CType(Me(Me.tableASIENTOS_VENTA_CABECERA.cfeccom2Column),Date)
            End Get
            Set
                Me(Me.tableASIENTOS_VENTA_CABECERA.cfeccom2Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property cfeccam2() As Date
            Get
                Try 
                    Return CType(Me(Me.tableASIENTOS_VENTA_CABECERA.cfeccam2Column),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'cfeccam2' de la tabla 'ASIENTOS_VENTA_CABECERA' es DBNull"& _ 
                            ".", e)
                End Try
            End Get
            Set
                Me(Me.tableASIENTOS_VENTA_CABECERA.cfeccam2Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property cindica_exportacion() As String
            Get
                Return CType(Me(Me.tableASIENTOS_VENTA_CABECERA.cindica_exportacionColumn),String)
            End Get
            Set
                Me(Me.tableASIENTOS_VENTA_CABECERA.cindica_exportacionColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IscempresaNull() As Boolean
            Return Me.IsNull(Me.tableASIENTOS_VENTA_CABECERA.cempresaColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetcempresaNull()
            Me(Me.tableASIENTOS_VENTA_CABECERA.cempresaColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsccomproNull() As Boolean
            Return Me.IsNull(Me.tableASIENTOS_VENTA_CABECERA.ccomproColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetccomproNull()
            Me(Me.tableASIENTOS_VENTA_CABECERA.ccomproColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IscfeccomNull() As Boolean
            Return Me.IsNull(Me.tableASIENTOS_VENTA_CABECERA.cfeccomColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetcfeccomNull()
            Me(Me.tableASIENTOS_VENTA_CABECERA.cfeccomColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsccodmonNull() As Boolean
            Return Me.IsNull(Me.tableASIENTOS_VENTA_CABECERA.ccodmonColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetccodmonNull()
            Me(Me.tableASIENTOS_VENTA_CABECERA.ccodmonColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IscsituaNull() As Boolean
            Return Me.IsNull(Me.tableASIENTOS_VENTA_CABECERA.csituaColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetcsituaNull()
            Me(Me.tableASIENTOS_VENTA_CABECERA.csituaColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IscglosaNull() As Boolean
            Return Me.IsNull(Me.tableASIENTOS_VENTA_CABECERA.cglosaColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetcglosaNull()
            Me(Me.tableASIENTOS_VENTA_CABECERA.cglosaColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsctipoNull() As Boolean
            Return Me.IsNull(Me.tableASIENTOS_VENTA_CABECERA.ctipoColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetctipoNull()
            Me(Me.tableASIENTOS_VENTA_CABECERA.ctipoColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IscflagNull() As Boolean
            Return Me.IsNull(Me.tableASIENTOS_VENTA_CABECERA.cflagColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetcflagNull()
            Me(Me.tableASIENTOS_VENTA_CABECERA.cflagColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Is_cdateNull() As Boolean
            Return Me.IsNull(Me.tableASIENTOS_VENTA_CABECERA.cdateColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Set_cdateNull()
            Me(Me.tableASIENTOS_VENTA_CABECERA.cdateColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IschoraNull() As Boolean
            Return Me.IsNull(Me.tableASIENTOS_VENTA_CABECERA.choraColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetchoraNull()
            Me(Me.tableASIENTOS_VENTA_CABECERA.choraColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IscuserNull() As Boolean
            Return Me.IsNull(Me.tableASIENTOS_VENTA_CABECERA.cuserColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetcuserNull()
            Me(Me.tableASIENTOS_VENTA_CABECERA.cuserColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IscfeccamNull() As Boolean
            Return Me.IsNull(Me.tableASIENTOS_VENTA_CABECERA.cfeccamColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetcfeccamNull()
            Me(Me.tableASIENTOS_VENTA_CABECERA.cfeccamColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IscorigNull() As Boolean
            Return Me.IsNull(Me.tableASIENTOS_VENTA_CABECERA.corigColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetcorigNull()
            Me(Me.tableASIENTOS_VENTA_CABECERA.corigColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IscformNull() As Boolean
            Return Me.IsNull(Me.tableASIENTOS_VENTA_CABECERA.cformColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetcformNull()
            Me(Me.tableASIENTOS_VENTA_CABECERA.cformColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsctipcomNull() As Boolean
            Return Me.IsNull(Me.tableASIENTOS_VENTA_CABECERA.ctipcomColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetctipcomNull()
            Me(Me.tableASIENTOS_VENTA_CABECERA.ctipcomColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IscextorNull() As Boolean
            Return Me.IsNull(Me.tableASIENTOS_VENTA_CABECERA.cextorColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetcextorNull()
            Me(Me.tableASIENTOS_VENTA_CABECERA.cextorColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Iscfeccam2Null() As Boolean
            Return Me.IsNull(Me.tableASIENTOS_VENTA_CABECERA.cfeccam2Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setcfeccam2Null()
            Me(Me.tableASIENTOS_VENTA_CABECERA.cfeccam2Column) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Partial Public Class ASIENTOS_VENTA_DETALLERow
        Inherits Global.System.Data.DataRow
        
        Private tableASIENTOS_VENTA_DETALLE As ASIENTOS_VENTA_DETALLEDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableASIENTOS_VENTA_DETALLE = CType(Me.Table,ASIENTOS_VENTA_DETALLEDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property dempresa() As String
            Get
                Return CType(Me(Me.tableASIENTOS_VENTA_DETALLE.dempresaColumn),String)
            End Get
            Set
                Me(Me.tableASIENTOS_VENTA_DETALLE.dempresaColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property dejercicio() As String
            Get
                Return CType(Me(Me.tableASIENTOS_VENTA_DETALLE.dejercicioColumn),String)
            End Get
            Set
                Me(Me.tableASIENTOS_VENTA_DETALLE.dejercicioColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property dmes() As String
            Get
                Return CType(Me(Me.tableASIENTOS_VENTA_DETALLE.dmesColumn),String)
            End Get
            Set
                Me(Me.tableASIENTOS_VENTA_DETALLE.dmesColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property dsubdia() As String
            Get
                Return CType(Me(Me.tableASIENTOS_VENTA_DETALLE.dsubdiaColumn),String)
            End Get
            Set
                Me(Me.tableASIENTOS_VENTA_DETALLE.dsubdiaColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property dcompro() As String
            Get
                Try 
                    Return CType(Me(Me.tableASIENTOS_VENTA_DETALLE.dcomproColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'dcompro' de la tabla 'ASIENTOS_VENTA_DETALLE' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableASIENTOS_VENTA_DETALLE.dcomproColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property dsecue() As String
            Get
                Try 
                    Return CType(Me(Me.tableASIENTOS_VENTA_DETALLE.dsecueColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'dsecue' de la tabla 'ASIENTOS_VENTA_DETALLE' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableASIENTOS_VENTA_DETALLE.dsecueColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property dfeccom() As String
            Get
                Try 
                    Return CType(Me(Me.tableASIENTOS_VENTA_DETALLE.dfeccomColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'dfeccom' de la tabla 'ASIENTOS_VENTA_DETALLE' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableASIENTOS_VENTA_DETALLE.dfeccomColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property dcuenta() As String
            Get
                Return CType(Me(Me.tableASIENTOS_VENTA_DETALLE.dcuentaColumn),String)
            End Get
            Set
                Me(Me.tableASIENTOS_VENTA_DETALLE.dcuentaColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property dcodane() As String
            Get
                Try 
                    Return CType(Me(Me.tableASIENTOS_VENTA_DETALLE.dcodaneColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'dcodane' de la tabla 'ASIENTOS_VENTA_DETALLE' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableASIENTOS_VENTA_DETALLE.dcodaneColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property dcencos() As String
            Get
                Try 
                    Return CType(Me(Me.tableASIENTOS_VENTA_DETALLE.dcencosColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'dcencos' de la tabla 'ASIENTOS_VENTA_DETALLE' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableASIENTOS_VENTA_DETALLE.dcencosColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property dcodmon() As String
            Get
                Return CType(Me(Me.tableASIENTOS_VENTA_DETALLE.dcodmonColumn),String)
            End Get
            Set
                Me(Me.tableASIENTOS_VENTA_DETALLE.dcodmonColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property ddh() As String
            Get
                Return CType(Me(Me.tableASIENTOS_VENTA_DETALLE.ddhColumn),String)
            End Get
            Set
                Me(Me.tableASIENTOS_VENTA_DETALLE.ddhColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property dimport() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableASIENTOS_VENTA_DETALLE.dimportColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'dimport' de la tabla 'ASIENTOS_VENTA_DETALLE' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableASIENTOS_VENTA_DETALLE.dimportColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property dtipdoc() As String
            Get
                Return CType(Me(Me.tableASIENTOS_VENTA_DETALLE.dtipdocColumn),String)
            End Get
            Set
                Me(Me.tableASIENTOS_VENTA_DETALLE.dtipdocColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property dnumdoc() As String
            Get
                Try 
                    Return CType(Me(Me.tableASIENTOS_VENTA_DETALLE.dnumdocColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'dnumdoc' de la tabla 'ASIENTOS_VENTA_DETALLE' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableASIENTOS_VENTA_DETALLE.dnumdocColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property dfecdoc() As String
            Get
                Try 
                    Return CType(Me(Me.tableASIENTOS_VENTA_DETALLE.dfecdocColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'dfecdoc' de la tabla 'ASIENTOS_VENTA_DETALLE' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableASIENTOS_VENTA_DETALLE.dfecdocColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property dfecven() As String
            Get
                Try 
                    Return CType(Me(Me.tableASIENTOS_VENTA_DETALLE.dfecvenColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'dfecven' de la tabla 'ASIENTOS_VENTA_DETALLE' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableASIENTOS_VENTA_DETALLE.dfecvenColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property darea() As String
            Get
                Try 
                    Return CType(Me(Me.tableASIENTOS_VENTA_DETALLE.dareaColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'darea' de la tabla 'ASIENTOS_VENTA_DETALLE' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableASIENTOS_VENTA_DETALLE.dareaColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property dflag() As String
            Get
                Return CType(Me(Me.tableASIENTOS_VENTA_DETALLE.dflagColumn),String)
            End Get
            Set
                Me(Me.tableASIENTOS_VENTA_DETALLE.dflagColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property ddate() As Date
            Get
                Try 
                    Return CType(Me(Me.tableASIENTOS_VENTA_DETALLE.ddateColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'ddate' de la tabla 'ASIENTOS_VENTA_DETALLE' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableASIENTOS_VENTA_DETALLE.ddateColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property dxglosa() As String
            Get
                Try 
                    Return CType(Me(Me.tableASIENTOS_VENTA_DETALLE.dxglosaColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'dxglosa' de la tabla 'ASIENTOS_VENTA_DETALLE' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableASIENTOS_VENTA_DETALLE.dxglosaColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property dusimpor() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableASIENTOS_VENTA_DETALLE.dusimporColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'dusimpor' de la tabla 'ASIENTOS_VENTA_DETALLE' es DBNull."& _ 
                            "", e)
                End Try
            End Get
            Set
                Me(Me.tableASIENTOS_VENTA_DETALLE.dusimporColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property dmnimpor() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableASIENTOS_VENTA_DETALLE.dmnimporColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'dmnimpor' de la tabla 'ASIENTOS_VENTA_DETALLE' es DBNull."& _ 
                            "", e)
                End Try
            End Get
            Set
                Me(Me.tableASIENTOS_VENTA_DETALLE.dmnimporColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property dcodarc() As String
            Get
                Try 
                    Return CType(Me(Me.tableASIENTOS_VENTA_DETALLE.dcodarcColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'dcodarc' de la tabla 'ASIENTOS_VENTA_DETALLE' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableASIENTOS_VENTA_DETALLE.dcodarcColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property dfeccom2() As Date
            Get
                Return CType(Me(Me.tableASIENTOS_VENTA_DETALLE.dfeccom2Column),Date)
            End Get
            Set
                Me(Me.tableASIENTOS_VENTA_DETALLE.dfeccom2Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property dfecdoc2() As Date
            Get
                Return CType(Me(Me.tableASIENTOS_VENTA_DETALLE.dfecdoc2Column),Date)
            End Get
            Set
                Me(Me.tableASIENTOS_VENTA_DETALLE.dfecdoc2Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property dfecven2() As Date
            Get
                Return CType(Me(Me.tableASIENTOS_VENTA_DETALLE.dfecven2Column),Date)
            End Get
            Set
                Me(Me.tableASIENTOS_VENTA_DETALLE.dfecven2Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property dcodane2() As String
            Get
                Try 
                    Return CType(Me(Me.tableASIENTOS_VENTA_DETALLE.dcodane2Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'dcodane2' de la tabla 'ASIENTOS_VENTA_DETALLE' es DBNull."& _ 
                            "", e)
                End Try
            End Get
            Set
                Me(Me.tableASIENTOS_VENTA_DETALLE.dcodane2Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property dvanexo() As String
            Get
                Try 
                    Return CType(Me(Me.tableASIENTOS_VENTA_DETALLE.dvanexoColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'dvanexo' de la tabla 'ASIENTOS_VENTA_DETALLE' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableASIENTOS_VENTA_DETALLE.dvanexoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property dvanexo2() As String
            Get
                Try 
                    Return CType(Me(Me.tableASIENTOS_VENTA_DETALLE.dvanexo2Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'dvanexo2' de la tabla 'ASIENTOS_VENTA_DETALLE' es DBNull."& _ 
                            "", e)
                End Try
            End Get
            Set
                Me(Me.tableASIENTOS_VENTA_DETALLE.dvanexo2Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property dtipcam() As Integer
            Get
                Return CType(Me(Me.tableASIENTOS_VENTA_DETALLE.dtipcamColumn),Integer)
            End Get
            Set
                Me(Me.tableASIENTOS_VENTA_DETALLE.dtipcamColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property dcantid() As Integer
            Get
                Return CType(Me(Me.tableASIENTOS_VENTA_DETALLE.dcantidColumn),Integer)
            End Get
            Set
                Me(Me.tableASIENTOS_VENTA_DETALLE.dcantidColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property drete() As String
            Get
                Try 
                    Return CType(Me(Me.tableASIENTOS_VENTA_DETALLE.dreteColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'drete' de la tabla 'ASIENTOS_VENTA_DETALLE' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableASIENTOS_VENTA_DETALLE.dreteColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property dporre() As Integer
            Get
                Return CType(Me(Me.tableASIENTOS_VENTA_DETALLE.dporreColumn),Integer)
            End Get
            Set
                Me(Me.tableASIENTOS_VENTA_DETALLE.dporreColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property dtipdor() As String
            Get
                Try 
                    Return CType(Me(Me.tableASIENTOS_VENTA_DETALLE.dtipdorColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'dtipdor' de la tabla 'ASIENTOS_VENTA_DETALLE' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableASIENTOS_VENTA_DETALLE.dtipdorColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property dnumdor() As String
            Get
                Try 
                    Return CType(Me(Me.tableASIENTOS_VENTA_DETALLE.dnumdorColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'dnumdor' de la tabla 'ASIENTOS_VENTA_DETALLE' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableASIENTOS_VENTA_DETALLE.dnumdorColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property dfecdo2() As Date
            Get
                Try 
                    Return CType(Me(Me.tableASIENTOS_VENTA_DETALLE.dfecdo2Column),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'dfecdo2' de la tabla 'ASIENTOS_VENTA_DETALLE' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableASIENTOS_VENTA_DETALLE.dfecdo2Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property dtiptas() As String
            Get
                Try 
                    Return CType(Me(Me.tableASIENTOS_VENTA_DETALLE.dtiptasColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'dtiptas' de la tabla 'ASIENTOS_VENTA_DETALLE' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableASIENTOS_VENTA_DETALLE.dtiptasColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property dimptas() As Integer
            Get
                Return CType(Me(Me.tableASIENTOS_VENTA_DETALLE.dimptasColumn),Integer)
            End Get
            Set
                Me(Me.tableASIENTOS_VENTA_DETALLE.dimptasColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property dimpbmn() As Integer
            Get
                Return CType(Me(Me.tableASIENTOS_VENTA_DETALLE.dimpbmnColumn),Integer)
            End Get
            Set
                Me(Me.tableASIENTOS_VENTA_DETALLE.dimpbmnColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property dimpbus() As Integer
            Get
                Return CType(Me(Me.tableASIENTOS_VENTA_DETALLE.dimpbusColumn),Integer)
            End Get
            Set
                Me(Me.tableASIENTOS_VENTA_DETALLE.dimpbusColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property dinacom() As Integer
            Get
                Return CType(Me(Me.tableASIENTOS_VENTA_DETALLE.dinacomColumn),Integer)
            End Get
            Set
                Me(Me.tableASIENTOS_VENTA_DETALLE.dinacomColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property digvcom() As Integer
            Get
                Return CType(Me(Me.tableASIENTOS_VENTA_DETALLE.digvcomColumn),Integer)
            End Get
            Set
                Me(Me.tableASIENTOS_VENTA_DETALLE.digvcomColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property dmedpag() As String
            Get
                Try 
                    Return CType(Me(Me.tableASIENTOS_VENTA_DETALLE.dmedpagColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'dmedpag' de la tabla 'ASIENTOS_VENTA_DETALLE' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableASIENTOS_VENTA_DETALLE.dmedpagColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property dmoncom() As String
            Get
                Try 
                    Return CType(Me(Me.tableASIENTOS_VENTA_DETALLE.dmoncomColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'dmoncom' de la tabla 'ASIENTOS_VENTA_DETALLE' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableASIENTOS_VENTA_DETALLE.dmoncomColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property dcolcom() As String
            Get
                Try 
                    Return CType(Me(Me.tableASIENTOS_VENTA_DETALLE.dcolcomColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'dcolcom' de la tabla 'ASIENTOS_VENTA_DETALLE' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableASIENTOS_VENTA_DETALLE.dcolcomColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property dbascom() As Integer
            Get
                Return CType(Me(Me.tableASIENTOS_VENTA_DETALLE.dbascomColumn),Integer)
            End Get
            Set
                Me(Me.tableASIENTOS_VENTA_DETALLE.dbascomColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property dtpconv() As String
            Get
                Try 
                    Return CType(Me(Me.tableASIENTOS_VENTA_DETALLE.dtpconvColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'dtpconv' de la tabla 'ASIENTOS_VENTA_DETALLE' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableASIENTOS_VENTA_DETALLE.dtpconvColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property dflgcom() As String
            Get
                Try 
                    Return CType(Me(Me.tableASIENTOS_VENTA_DETALLE.dflgcomColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'dflgcom' de la tabla 'ASIENTOS_VENTA_DETALLE' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableASIENTOS_VENTA_DETALLE.dflgcomColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property dtipaco() As String
            Get
                Try 
                    Return CType(Me(Me.tableASIENTOS_VENTA_DETALLE.dtipacoColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'dtipaco' de la tabla 'ASIENTOS_VENTA_DETALLE' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableASIENTOS_VENTA_DETALLE.dtipacoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property danecom() As String
            Get
                Try 
                    Return CType(Me(Me.tableASIENTOS_VENTA_DETALLE.danecomColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'danecom' de la tabla 'ASIENTOS_VENTA_DETALLE' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableASIENTOS_VENTA_DETALLE.danecomColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property prefijo() As String
            Get
                Try 
                    Return CType(Me(Me.tableASIENTOS_VENTA_DETALLE.prefijoColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'prefijo' de la tabla 'ASIENTOS_VENTA_DETALLE' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableASIENTOS_VENTA_DETALLE.prefijoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property prefijo2() As String
            Get
                Try 
                    Return CType(Me(Me.tableASIENTOS_VENTA_DETALLE.prefijo2Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'prefijo2' de la tabla 'ASIENTOS_VENTA_DETALLE' es DBNull."& _ 
                            "", e)
                End Try
            End Get
            Set
                Me(Me.tableASIENTOS_VENTA_DETALLE.prefijo2Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsdcomproNull() As Boolean
            Return Me.IsNull(Me.tableASIENTOS_VENTA_DETALLE.dcomproColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetdcomproNull()
            Me(Me.tableASIENTOS_VENTA_DETALLE.dcomproColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsdsecueNull() As Boolean
            Return Me.IsNull(Me.tableASIENTOS_VENTA_DETALLE.dsecueColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetdsecueNull()
            Me(Me.tableASIENTOS_VENTA_DETALLE.dsecueColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsdfeccomNull() As Boolean
            Return Me.IsNull(Me.tableASIENTOS_VENTA_DETALLE.dfeccomColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetdfeccomNull()
            Me(Me.tableASIENTOS_VENTA_DETALLE.dfeccomColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsdcodaneNull() As Boolean
            Return Me.IsNull(Me.tableASIENTOS_VENTA_DETALLE.dcodaneColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetdcodaneNull()
            Me(Me.tableASIENTOS_VENTA_DETALLE.dcodaneColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsdcencosNull() As Boolean
            Return Me.IsNull(Me.tableASIENTOS_VENTA_DETALLE.dcencosColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetdcencosNull()
            Me(Me.tableASIENTOS_VENTA_DETALLE.dcencosColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsdimportNull() As Boolean
            Return Me.IsNull(Me.tableASIENTOS_VENTA_DETALLE.dimportColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetdimportNull()
            Me(Me.tableASIENTOS_VENTA_DETALLE.dimportColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsdnumdocNull() As Boolean
            Return Me.IsNull(Me.tableASIENTOS_VENTA_DETALLE.dnumdocColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetdnumdocNull()
            Me(Me.tableASIENTOS_VENTA_DETALLE.dnumdocColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsdfecdocNull() As Boolean
            Return Me.IsNull(Me.tableASIENTOS_VENTA_DETALLE.dfecdocColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetdfecdocNull()
            Me(Me.tableASIENTOS_VENTA_DETALLE.dfecdocColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsdfecvenNull() As Boolean
            Return Me.IsNull(Me.tableASIENTOS_VENTA_DETALLE.dfecvenColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetdfecvenNull()
            Me(Me.tableASIENTOS_VENTA_DETALLE.dfecvenColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsdareaNull() As Boolean
            Return Me.IsNull(Me.tableASIENTOS_VENTA_DETALLE.dareaColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetdareaNull()
            Me(Me.tableASIENTOS_VENTA_DETALLE.dareaColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsddateNull() As Boolean
            Return Me.IsNull(Me.tableASIENTOS_VENTA_DETALLE.ddateColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetddateNull()
            Me(Me.tableASIENTOS_VENTA_DETALLE.ddateColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsdxglosaNull() As Boolean
            Return Me.IsNull(Me.tableASIENTOS_VENTA_DETALLE.dxglosaColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetdxglosaNull()
            Me(Me.tableASIENTOS_VENTA_DETALLE.dxglosaColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsdusimporNull() As Boolean
            Return Me.IsNull(Me.tableASIENTOS_VENTA_DETALLE.dusimporColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetdusimporNull()
            Me(Me.tableASIENTOS_VENTA_DETALLE.dusimporColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsdmnimporNull() As Boolean
            Return Me.IsNull(Me.tableASIENTOS_VENTA_DETALLE.dmnimporColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetdmnimporNull()
            Me(Me.tableASIENTOS_VENTA_DETALLE.dmnimporColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsdcodarcNull() As Boolean
            Return Me.IsNull(Me.tableASIENTOS_VENTA_DETALLE.dcodarcColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetdcodarcNull()
            Me(Me.tableASIENTOS_VENTA_DETALLE.dcodarcColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isdcodane2Null() As Boolean
            Return Me.IsNull(Me.tableASIENTOS_VENTA_DETALLE.dcodane2Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setdcodane2Null()
            Me(Me.tableASIENTOS_VENTA_DETALLE.dcodane2Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsdvanexoNull() As Boolean
            Return Me.IsNull(Me.tableASIENTOS_VENTA_DETALLE.dvanexoColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetdvanexoNull()
            Me(Me.tableASIENTOS_VENTA_DETALLE.dvanexoColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isdvanexo2Null() As Boolean
            Return Me.IsNull(Me.tableASIENTOS_VENTA_DETALLE.dvanexo2Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setdvanexo2Null()
            Me(Me.tableASIENTOS_VENTA_DETALLE.dvanexo2Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsdreteNull() As Boolean
            Return Me.IsNull(Me.tableASIENTOS_VENTA_DETALLE.dreteColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetdreteNull()
            Me(Me.tableASIENTOS_VENTA_DETALLE.dreteColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsdtipdorNull() As Boolean
            Return Me.IsNull(Me.tableASIENTOS_VENTA_DETALLE.dtipdorColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetdtipdorNull()
            Me(Me.tableASIENTOS_VENTA_DETALLE.dtipdorColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsdnumdorNull() As Boolean
            Return Me.IsNull(Me.tableASIENTOS_VENTA_DETALLE.dnumdorColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetdnumdorNull()
            Me(Me.tableASIENTOS_VENTA_DETALLE.dnumdorColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isdfecdo2Null() As Boolean
            Return Me.IsNull(Me.tableASIENTOS_VENTA_DETALLE.dfecdo2Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setdfecdo2Null()
            Me(Me.tableASIENTOS_VENTA_DETALLE.dfecdo2Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsdtiptasNull() As Boolean
            Return Me.IsNull(Me.tableASIENTOS_VENTA_DETALLE.dtiptasColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetdtiptasNull()
            Me(Me.tableASIENTOS_VENTA_DETALLE.dtiptasColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsdmedpagNull() As Boolean
            Return Me.IsNull(Me.tableASIENTOS_VENTA_DETALLE.dmedpagColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetdmedpagNull()
            Me(Me.tableASIENTOS_VENTA_DETALLE.dmedpagColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsdmoncomNull() As Boolean
            Return Me.IsNull(Me.tableASIENTOS_VENTA_DETALLE.dmoncomColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetdmoncomNull()
            Me(Me.tableASIENTOS_VENTA_DETALLE.dmoncomColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsdcolcomNull() As Boolean
            Return Me.IsNull(Me.tableASIENTOS_VENTA_DETALLE.dcolcomColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetdcolcomNull()
            Me(Me.tableASIENTOS_VENTA_DETALLE.dcolcomColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsdtpconvNull() As Boolean
            Return Me.IsNull(Me.tableASIENTOS_VENTA_DETALLE.dtpconvColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetdtpconvNull()
            Me(Me.tableASIENTOS_VENTA_DETALLE.dtpconvColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsdflgcomNull() As Boolean
            Return Me.IsNull(Me.tableASIENTOS_VENTA_DETALLE.dflgcomColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetdflgcomNull()
            Me(Me.tableASIENTOS_VENTA_DETALLE.dflgcomColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsdtipacoNull() As Boolean
            Return Me.IsNull(Me.tableASIENTOS_VENTA_DETALLE.dtipacoColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetdtipacoNull()
            Me(Me.tableASIENTOS_VENTA_DETALLE.dtipacoColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsdanecomNull() As Boolean
            Return Me.IsNull(Me.tableASIENTOS_VENTA_DETALLE.danecomColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetdanecomNull()
            Me(Me.tableASIENTOS_VENTA_DETALLE.danecomColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsprefijoNull() As Boolean
            Return Me.IsNull(Me.tableASIENTOS_VENTA_DETALLE.prefijoColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetprefijoNull()
            Me(Me.tableASIENTOS_VENTA_DETALLE.prefijoColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isprefijo2Null() As Boolean
            Return Me.IsNull(Me.tableASIENTOS_VENTA_DETALLE.prefijo2Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setprefijo2Null()
            Me(Me.tableASIENTOS_VENTA_DETALLE.prefijo2Column) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Partial Public Class ASIENTOS_VENTA_LISTARow
        Inherits Global.System.Data.DataRow
        
        Private tableASIENTOS_VENTA_LISTA As ASIENTOS_VENTA_LISTADataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableASIENTOS_VENTA_LISTA = CType(Me.Table,ASIENTOS_VENTA_LISTADataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property cempresa() As String
            Get
                Try 
                    Return CType(Me(Me.tableASIENTOS_VENTA_LISTA.cempresaColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'cempresa' de la tabla 'ASIENTOS_VENTA_LISTA' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableASIENTOS_VENTA_LISTA.cempresaColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property cejercicio() As String
            Get
                Return CType(Me(Me.tableASIENTOS_VENTA_LISTA.cejercicioColumn),String)
            End Get
            Set
                Me(Me.tableASIENTOS_VENTA_LISTA.cejercicioColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property cmes() As String
            Get
                Return CType(Me(Me.tableASIENTOS_VENTA_LISTA.cmesColumn),String)
            End Get
            Set
                Me(Me.tableASIENTOS_VENTA_LISTA.cmesColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property csubdia() As String
            Get
                Return CType(Me(Me.tableASIENTOS_VENTA_LISTA.csubdiaColumn),String)
            End Get
            Set
                Me(Me.tableASIENTOS_VENTA_LISTA.csubdiaColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property ccompro() As String
            Get
                Try 
                    Return CType(Me(Me.tableASIENTOS_VENTA_LISTA.ccomproColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'ccompro' de la tabla 'ASIENTOS_VENTA_LISTA' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableASIENTOS_VENTA_LISTA.ccomproColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property ccorrelativo() As String
            Get
                Try 
                    Return CType(Me(Me.tableASIENTOS_VENTA_LISTA.ccorrelativoColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'ccorrelativo' de la tabla 'ASIENTOS_VENTA_LISTA' es DBNul"& _ 
                            "l.", e)
                End Try
            End Get
            Set
                Me(Me.tableASIENTOS_VENTA_LISTA.ccorrelativoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property cfeccom() As String
            Get
                Try 
                    Return CType(Me(Me.tableASIENTOS_VENTA_LISTA.cfeccomColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'cfeccom' de la tabla 'ASIENTOS_VENTA_LISTA' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableASIENTOS_VENTA_LISTA.cfeccomColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property ccodmon() As String
            Get
                Try 
                    Return CType(Me(Me.tableASIENTOS_VENTA_LISTA.ccodmonColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'ccodmon' de la tabla 'ASIENTOS_VENTA_LISTA' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableASIENTOS_VENTA_LISTA.ccodmonColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property csitua() As String
            Get
                Try 
                    Return CType(Me(Me.tableASIENTOS_VENTA_LISTA.csituaColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'csitua' de la tabla 'ASIENTOS_VENTA_LISTA' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableASIENTOS_VENTA_LISTA.csituaColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property ctipcam() As Decimal
            Get
                Return CType(Me(Me.tableASIENTOS_VENTA_LISTA.ctipcamColumn),Decimal)
            End Get
            Set
                Me(Me.tableASIENTOS_VENTA_LISTA.ctipcamColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property dtipdoc() As String
            Get
                Return CType(Me(Me.tableASIENTOS_VENTA_LISTA.dtipdocColumn),String)
            End Get
            Set
                Me(Me.tableASIENTOS_VENTA_LISTA.dtipdocColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property dnumdoc() As String
            Get
                Try 
                    Return CType(Me(Me.tableASIENTOS_VENTA_LISTA.dnumdocColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'dnumdoc' de la tabla 'ASIENTOS_VENTA_LISTA' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableASIENTOS_VENTA_LISTA.dnumdocColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property dfecdoc() As String
            Get
                Try 
                    Return CType(Me(Me.tableASIENTOS_VENTA_LISTA.dfecdocColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'dfecdoc' de la tabla 'ASIENTOS_VENTA_LISTA' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableASIENTOS_VENTA_LISTA.dfecdocColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property cglosa() As String
            Get
                Try 
                    Return CType(Me(Me.tableASIENTOS_VENTA_LISTA.cglosaColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'cglosa' de la tabla 'ASIENTOS_VENTA_LISTA' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableASIENTOS_VENTA_LISTA.cglosaColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property ctotal() As Decimal
            Get
                Return CType(Me(Me.tableASIENTOS_VENTA_LISTA.ctotalColumn),Decimal)
            End Get
            Set
                Me(Me.tableASIENTOS_VENTA_LISTA.ctotalColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property ctipo() As String
            Get
                Try 
                    Return CType(Me(Me.tableASIENTOS_VENTA_LISTA.ctipoColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'ctipo' de la tabla 'ASIENTOS_VENTA_LISTA' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableASIENTOS_VENTA_LISTA.ctipoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property cflag() As String
            Get
                Try 
                    Return CType(Me(Me.tableASIENTOS_VENTA_LISTA.cflagColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'cflag' de la tabla 'ASIENTOS_VENTA_LISTA' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableASIENTOS_VENTA_LISTA.cflagColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property cdate2() As Date
            Get
                Try 
                    Return CType(Me(Me.tableASIENTOS_VENTA_LISTA.cdate2Column),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'cdate2' de la tabla 'ASIENTOS_VENTA_LISTA' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableASIENTOS_VENTA_LISTA.cdate2Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property cfeccom2() As Date
            Get
                Return CType(Me(Me.tableASIENTOS_VENTA_LISTA.cfeccom2Column),Date)
            End Get
            Set
                Me(Me.tableASIENTOS_VENTA_LISTA.cfeccom2Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property cfeccam2() As Date
            Get
                Try 
                    Return CType(Me(Me.tableASIENTOS_VENTA_LISTA.cfeccam2Column),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'cfeccam2' de la tabla 'ASIENTOS_VENTA_LISTA' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableASIENTOS_VENTA_LISTA.cfeccam2Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property cindica_exportacion() As Boolean
            Get
                Return CType(Me(Me.tableASIENTOS_VENTA_LISTA.cindica_exportacionColumn),Boolean)
            End Get
            Set
                Me(Me.tableASIENTOS_VENTA_LISTA.cindica_exportacionColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property EMPRESA() As String
            Get
                Return CType(Me(Me.tableASIENTOS_VENTA_LISTA.EMPRESAColumn),String)
            End Get
            Set
                Me(Me.tableASIENTOS_VENTA_LISTA.EMPRESAColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property VENTA() As String
            Get
                Return CType(Me(Me.tableASIENTOS_VENTA_LISTA.VENTAColumn),String)
            End Get
            Set
                Me(Me.tableASIENTOS_VENTA_LISTA.VENTAColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IscempresaNull() As Boolean
            Return Me.IsNull(Me.tableASIENTOS_VENTA_LISTA.cempresaColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetcempresaNull()
            Me(Me.tableASIENTOS_VENTA_LISTA.cempresaColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsccomproNull() As Boolean
            Return Me.IsNull(Me.tableASIENTOS_VENTA_LISTA.ccomproColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetccomproNull()
            Me(Me.tableASIENTOS_VENTA_LISTA.ccomproColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsccorrelativoNull() As Boolean
            Return Me.IsNull(Me.tableASIENTOS_VENTA_LISTA.ccorrelativoColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetccorrelativoNull()
            Me(Me.tableASIENTOS_VENTA_LISTA.ccorrelativoColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IscfeccomNull() As Boolean
            Return Me.IsNull(Me.tableASIENTOS_VENTA_LISTA.cfeccomColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetcfeccomNull()
            Me(Me.tableASIENTOS_VENTA_LISTA.cfeccomColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsccodmonNull() As Boolean
            Return Me.IsNull(Me.tableASIENTOS_VENTA_LISTA.ccodmonColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetccodmonNull()
            Me(Me.tableASIENTOS_VENTA_LISTA.ccodmonColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IscsituaNull() As Boolean
            Return Me.IsNull(Me.tableASIENTOS_VENTA_LISTA.csituaColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetcsituaNull()
            Me(Me.tableASIENTOS_VENTA_LISTA.csituaColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsdnumdocNull() As Boolean
            Return Me.IsNull(Me.tableASIENTOS_VENTA_LISTA.dnumdocColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetdnumdocNull()
            Me(Me.tableASIENTOS_VENTA_LISTA.dnumdocColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsdfecdocNull() As Boolean
            Return Me.IsNull(Me.tableASIENTOS_VENTA_LISTA.dfecdocColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetdfecdocNull()
            Me(Me.tableASIENTOS_VENTA_LISTA.dfecdocColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IscglosaNull() As Boolean
            Return Me.IsNull(Me.tableASIENTOS_VENTA_LISTA.cglosaColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetcglosaNull()
            Me(Me.tableASIENTOS_VENTA_LISTA.cglosaColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsctipoNull() As Boolean
            Return Me.IsNull(Me.tableASIENTOS_VENTA_LISTA.ctipoColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetctipoNull()
            Me(Me.tableASIENTOS_VENTA_LISTA.ctipoColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IscflagNull() As Boolean
            Return Me.IsNull(Me.tableASIENTOS_VENTA_LISTA.cflagColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetcflagNull()
            Me(Me.tableASIENTOS_VENTA_LISTA.cflagColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Iscdate2Null() As Boolean
            Return Me.IsNull(Me.tableASIENTOS_VENTA_LISTA.cdate2Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setcdate2Null()
            Me(Me.tableASIENTOS_VENTA_LISTA.cdate2Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Iscfeccam2Null() As Boolean
            Return Me.IsNull(Me.tableASIENTOS_VENTA_LISTA.cfeccam2Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setcfeccam2Null()
            Me(Me.tableASIENTOS_VENTA_LISTA.cfeccam2Column) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Public Class CABECERARowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As CABECERARow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New(ByVal row As CABECERARow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Row() As CABECERARow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Public Class DETALLERowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As DETALLERow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New(ByVal row As DETALLERow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Row() As DETALLERow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Public Class ASIENTOS_VENTA_CABECERARowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As ASIENTOS_VENTA_CABECERARow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New(ByVal row As ASIENTOS_VENTA_CABECERARow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Row() As ASIENTOS_VENTA_CABECERARow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Public Class ASIENTOS_VENTA_DETALLERowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As ASIENTOS_VENTA_DETALLERow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New(ByVal row As ASIENTOS_VENTA_DETALLERow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Row() As ASIENTOS_VENTA_DETALLERow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Public Class ASIENTOS_VENTA_LISTARowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As ASIENTOS_VENTA_LISTARow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New(ByVal row As ASIENTOS_VENTA_LISTARow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Row() As ASIENTOS_VENTA_LISTARow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
End Class
