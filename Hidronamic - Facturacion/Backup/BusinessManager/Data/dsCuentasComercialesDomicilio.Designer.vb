'------------------------------------------------------------------------------
' <auto-generated>
'     Este código fue generado por una herramienta.
'     Versión del motor en tiempo de ejecución:2.0.50727.5472
'
'     Los cambios en este archivo podrían causar un comportamiento incorrecto y se perderán si
'     se vuelve a generar el código.
' </auto-generated>
'------------------------------------------------------------------------------

Option Strict Off
Option Explicit On



'''<summary>
'''Represents a strongly typed in-memory cache of data.
'''</summary>
<Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0"),  _
 Global.System.Serializable(),  _
 Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
 Global.System.ComponentModel.ToolboxItem(true),  _
 Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema"),  _
 Global.System.Xml.Serialization.XmlRootAttribute("dsCuentasComercialesDomicilio"),  _
 Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")>  _
Partial Public Class dsCuentasComercialesDomicilio
    Inherits Global.System.Data.DataSet
    
    Private tableCUENTAS_COMERCIALES_DOM As CUENTAS_COMERCIALES_DOMDataTable
    
    Private _schemaSerializationMode As Global.System.Data.SchemaSerializationMode = Global.System.Data.SchemaSerializationMode.IncludeSchema
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Public Sub New()
        MyBase.New
        Me.BeginInit
        Me.InitClass
        Dim schemaChangedHandler As Global.System.ComponentModel.CollectionChangeEventHandler = AddressOf Me.SchemaChanged
        AddHandler MyBase.Tables.CollectionChanged, schemaChangedHandler
        AddHandler MyBase.Relations.CollectionChanged, schemaChangedHandler
        Me.EndInit
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
        MyBase.New(info, context, false)
        If (Me.IsBinarySerialized(info, context) = true) Then
            Me.InitVars(false)
            Dim schemaChangedHandler1 As Global.System.ComponentModel.CollectionChangeEventHandler = AddressOf Me.SchemaChanged
            AddHandler Me.Tables.CollectionChanged, schemaChangedHandler1
            AddHandler Me.Relations.CollectionChanged, schemaChangedHandler1
            Return
        End If
        Dim strSchema As String = CType(info.GetValue("XmlSchema", GetType(String)),String)
        If (Me.DetermineSchemaSerializationMode(info, context) = Global.System.Data.SchemaSerializationMode.IncludeSchema) Then
            Dim ds As Global.System.Data.DataSet = New Global.System.Data.DataSet
            ds.ReadXmlSchema(New Global.System.Xml.XmlTextReader(New Global.System.IO.StringReader(strSchema)))
            If (Not (ds.Tables("CUENTAS_COMERCIALES_DOM")) Is Nothing) Then
                MyBase.Tables.Add(New CUENTAS_COMERCIALES_DOMDataTable(ds.Tables("CUENTAS_COMERCIALES_DOM")))
            End If
            Me.DataSetName = ds.DataSetName
            Me.Prefix = ds.Prefix
            Me.Namespace = ds.Namespace
            Me.Locale = ds.Locale
            Me.CaseSensitive = ds.CaseSensitive
            Me.EnforceConstraints = ds.EnforceConstraints
            Me.Merge(ds, false, Global.System.Data.MissingSchemaAction.Add)
            Me.InitVars
        Else
            Me.ReadXmlSchema(New Global.System.Xml.XmlTextReader(New Global.System.IO.StringReader(strSchema)))
        End If
        Me.GetSerializationData(info, context)
        Dim schemaChangedHandler As Global.System.ComponentModel.CollectionChangeEventHandler = AddressOf Me.SchemaChanged
        AddHandler MyBase.Tables.CollectionChanged, schemaChangedHandler
        AddHandler Me.Relations.CollectionChanged, schemaChangedHandler
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property CUENTAS_COMERCIALES_DOM() As CUENTAS_COMERCIALES_DOMDataTable
        Get
            Return Me.tableCUENTAS_COMERCIALES_DOM
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.ComponentModel.BrowsableAttribute(true),  _
     Global.System.ComponentModel.DesignerSerializationVisibilityAttribute(Global.System.ComponentModel.DesignerSerializationVisibility.Visible)>  _
    Public Overrides Property SchemaSerializationMode() As Global.System.Data.SchemaSerializationMode
        Get
            Return Me._schemaSerializationMode
        End Get
        Set
            Me._schemaSerializationMode = value
        End Set
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.ComponentModel.DesignerSerializationVisibilityAttribute(Global.System.ComponentModel.DesignerSerializationVisibility.Hidden)>  _
    Public Shadows ReadOnly Property Tables() As Global.System.Data.DataTableCollection
        Get
            Return MyBase.Tables
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.ComponentModel.DesignerSerializationVisibilityAttribute(Global.System.ComponentModel.DesignerSerializationVisibility.Hidden)>  _
    Public Shadows ReadOnly Property Relations() As Global.System.Data.DataRelationCollection
        Get
            Return MyBase.Relations
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Protected Overrides Sub InitializeDerivedDataSet()
        Me.BeginInit
        Me.InitClass
        Me.EndInit
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Public Overrides Function Clone() As Global.System.Data.DataSet
        Dim cln As dsCuentasComercialesDomicilio = CType(MyBase.Clone,dsCuentasComercialesDomicilio)
        cln.InitVars
        cln.SchemaSerializationMode = Me.SchemaSerializationMode
        Return cln
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Protected Overrides Function ShouldSerializeTables() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Protected Overrides Function ShouldSerializeRelations() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Protected Overrides Sub ReadXmlSerializable(ByVal reader As Global.System.Xml.XmlReader)
        If (Me.DetermineSchemaSerializationMode(reader) = Global.System.Data.SchemaSerializationMode.IncludeSchema) Then
            Me.Reset
            Dim ds As Global.System.Data.DataSet = New Global.System.Data.DataSet
            ds.ReadXml(reader)
            If (Not (ds.Tables("CUENTAS_COMERCIALES_DOM")) Is Nothing) Then
                MyBase.Tables.Add(New CUENTAS_COMERCIALES_DOMDataTable(ds.Tables("CUENTAS_COMERCIALES_DOM")))
            End If
            Me.DataSetName = ds.DataSetName
            Me.Prefix = ds.Prefix
            Me.Namespace = ds.Namespace
            Me.Locale = ds.Locale
            Me.CaseSensitive = ds.CaseSensitive
            Me.EnforceConstraints = ds.EnforceConstraints
            Me.Merge(ds, false, Global.System.Data.MissingSchemaAction.Add)
            Me.InitVars
        Else
            Me.ReadXml(reader)
            Me.InitVars
        End If
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Protected Overrides Function GetSchemaSerializable() As Global.System.Xml.Schema.XmlSchema
        Dim stream As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
        Me.WriteXmlSchema(New Global.System.Xml.XmlTextWriter(stream, Nothing))
        stream.Position = 0
        Return Global.System.Xml.Schema.XmlSchema.Read(New Global.System.Xml.XmlTextReader(stream), Nothing)
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Friend Overloads Sub InitVars()
        Me.InitVars(true)
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Friend Overloads Sub InitVars(ByVal initTable As Boolean)
        Me.tableCUENTAS_COMERCIALES_DOM = CType(MyBase.Tables("CUENTAS_COMERCIALES_DOM"),CUENTAS_COMERCIALES_DOMDataTable)
        If (initTable = true) Then
            If (Not (Me.tableCUENTAS_COMERCIALES_DOM) Is Nothing) Then
                Me.tableCUENTAS_COMERCIALES_DOM.InitVars
            End If
        End If
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Private Sub InitClass()
        Me.DataSetName = "dsCuentasComercialesDomicilio"
        Me.Prefix = ""
        Me.Namespace = "http://tempuri.org/dsCuentasComercialesDomicilio.xsd"
        Me.EnforceConstraints = true
        Me.SchemaSerializationMode = Global.System.Data.SchemaSerializationMode.IncludeSchema
        Me.tableCUENTAS_COMERCIALES_DOM = New CUENTAS_COMERCIALES_DOMDataTable
        MyBase.Tables.Add(Me.tableCUENTAS_COMERCIALES_DOM)
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Private Function ShouldSerializeCUENTAS_COMERCIALES_DOM() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Private Sub SchemaChanged(ByVal sender As Object, ByVal e As Global.System.ComponentModel.CollectionChangeEventArgs)
        If (e.Action = Global.System.ComponentModel.CollectionChangeAction.Remove) Then
            Me.InitVars
        End If
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Public Shared Function GetTypedDataSetSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
        Dim ds As dsCuentasComercialesDomicilio = New dsCuentasComercialesDomicilio
        Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType
        Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence
        Dim any As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
        any.Namespace = ds.Namespace
        sequence.Items.Add(any)
        type.Particle = sequence
        Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
        If xs.Contains(dsSchema.TargetNamespace) Then
            Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
            Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
            Try 
                Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                dsSchema.Write(s1)
                Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                Do While schemas.MoveNext
                    schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                    s2.SetLength(0)
                    schema.Write(s2)
                    If (s1.Length = s2.Length) Then
                        s1.Position = 0
                        s2.Position = 0
                        
                        Do While ((s1.Position <> s1.Length)  _
                                    AndAlso (s1.ReadByte = s2.ReadByte))
                            
                            
                        Loop
                        If (s1.Position = s1.Length) Then
                            Return type
                        End If
                    End If
                    
                Loop
            Finally
                If (Not (s1) Is Nothing) Then
                    s1.Close
                End If
                If (Not (s2) Is Nothing) Then
                    s2.Close
                End If
            End Try
        End If
        xs.Add(dsSchema)
        Return type
    End Function
    
    Public Delegate Sub CUENTAS_COMERCIALES_DOMRowChangeEventHandler(ByVal sender As Object, ByVal e As CUENTAS_COMERCIALES_DOMRowChangeEvent)
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0"),  _
     Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class CUENTAS_COMERCIALES_DOMDataTable
        Inherits Global.System.Data.TypedTableBase(Of CUENTAS_COMERCIALES_DOMRow)
        
        Private columnEMPRESA As Global.System.Data.DataColumn
        
        Private columnCUENTA_COMERCIAL As Global.System.Data.DataColumn
        
        Private columnDOMICILIO_ENVIO As Global.System.Data.DataColumn
        
        Private columnDESCRIPCION As Global.System.Data.DataColumn
        
        Private columnVIA_TIPO As Global.System.Data.DataColumn
        
        Private columnVIA_NOMBRE As Global.System.Data.DataColumn
        
        Private columnVIA_NUMERO As Global.System.Data.DataColumn
        
        Private columnVIA_INTERIOR As Global.System.Data.DataColumn
        
        Private columnZONA_TIPO As Global.System.Data.DataColumn
        
        Private columnZONA_NOMBRE As Global.System.Data.DataColumn
        
        Private columnREFERENCIA As Global.System.Data.DataColumn
        
        Private columnPAIS As Global.System.Data.DataColumn
        
        Private columnDEPARTAMENTO As Global.System.Data.DataColumn
        
        Private columnPROVINCIA As Global.System.Data.DataColumn
        
        Private columnUBIGEO As Global.System.Data.DataColumn
        
        Private columnCODIGO_POSTAL As Global.System.Data.DataColumn
        
        Private columnTELEFONO As Global.System.Data.DataColumn
        
        Private columnCELULAR As Global.System.Data.DataColumn
        
        Private columnFAX As Global.System.Data.DataColumn
        
        Private columnEMAIL As Global.System.Data.DataColumn
        
        Private columnESTADO As Global.System.Data.DataColumn
        
        Private columnUSUARIO_REGISTRO As Global.System.Data.DataColumn
        
        Private columnFECHA_REGISTRO As Global.System.Data.DataColumn
        
        Private columnUSUARIO_MODIFICA As Global.System.Data.DataColumn
        
        Private columnFECHA_MODIFICA As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "CUENTAS_COMERCIALES_DOM"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property EMPRESAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnEMPRESA
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property CUENTA_COMERCIALColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCUENTA_COMERCIAL
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property DOMICILIO_ENVIOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDOMICILIO_ENVIO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property DESCRIPCIONColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDESCRIPCION
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property VIA_TIPOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnVIA_TIPO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property VIA_NOMBREColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnVIA_NOMBRE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property VIA_NUMEROColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnVIA_NUMERO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property VIA_INTERIORColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnVIA_INTERIOR
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property ZONA_TIPOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnZONA_TIPO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property ZONA_NOMBREColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnZONA_NOMBRE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property REFERENCIAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnREFERENCIA
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property PAISColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPAIS
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property DEPARTAMENTOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDEPARTAMENTO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property PROVINCIAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPROVINCIA
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property UBIGEOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnUBIGEO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property CODIGO_POSTALColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCODIGO_POSTAL
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property TELEFONOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTELEFONO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property CELULARColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCELULAR
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property FAXColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnFAX
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property EMAILColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnEMAIL
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property ESTADOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnESTADO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property USUARIO_REGISTROColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnUSUARIO_REGISTRO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property FECHA_REGISTROColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnFECHA_REGISTRO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property USUARIO_MODIFICAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnUSUARIO_MODIFICA
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property FECHA_MODIFICAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnFECHA_MODIFICA
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As CUENTAS_COMERCIALES_DOMRow
            Get
                Return CType(Me.Rows(index),CUENTAS_COMERCIALES_DOMRow)
            End Get
        End Property
        
        Public Event CUENTAS_COMERCIALES_DOMRowChanging As CUENTAS_COMERCIALES_DOMRowChangeEventHandler
        
        Public Event CUENTAS_COMERCIALES_DOMRowChanged As CUENTAS_COMERCIALES_DOMRowChangeEventHandler
        
        Public Event CUENTAS_COMERCIALES_DOMRowDeleting As CUENTAS_COMERCIALES_DOMRowChangeEventHandler
        
        Public Event CUENTAS_COMERCIALES_DOMRowDeleted As CUENTAS_COMERCIALES_DOMRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Sub AddCUENTAS_COMERCIALES_DOMRow(ByVal row As CUENTAS_COMERCIALES_DOMRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Function AddCUENTAS_COMERCIALES_DOMRow( _
                    ByVal EMPRESA As String,  _
                    ByVal CUENTA_COMERCIAL As String,  _
                    ByVal DOMICILIO_ENVIO As String,  _
                    ByVal DESCRIPCION As String,  _
                    ByVal VIA_TIPO As String,  _
                    ByVal VIA_NOMBRE As String,  _
                    ByVal VIA_NUMERO As String,  _
                    ByVal VIA_INTERIOR As String,  _
                    ByVal ZONA_TIPO As String,  _
                    ByVal ZONA_NOMBRE As String,  _
                    ByVal REFERENCIA As String,  _
                    ByVal PAIS As String,  _
                    ByVal DEPARTAMENTO As String,  _
                    ByVal PROVINCIA As String,  _
                    ByVal UBIGEO As String,  _
                    ByVal CODIGO_POSTAL As String,  _
                    ByVal TELEFONO As String,  _
                    ByVal CELULAR As String,  _
                    ByVal FAX As String,  _
                    ByVal EMAIL As String,  _
                    ByVal ESTADO As String,  _
                    ByVal USUARIO_REGISTRO As String,  _
                    ByVal FECHA_REGISTRO As Date,  _
                    ByVal USUARIO_MODIFICA As String,  _
                    ByVal FECHA_MODIFICA As Date) As CUENTAS_COMERCIALES_DOMRow
            Dim rowCUENTAS_COMERCIALES_DOMRow As CUENTAS_COMERCIALES_DOMRow = CType(Me.NewRow,CUENTAS_COMERCIALES_DOMRow)
            Dim columnValuesArray() As Object = New Object() {EMPRESA, CUENTA_COMERCIAL, DOMICILIO_ENVIO, DESCRIPCION, VIA_TIPO, VIA_NOMBRE, VIA_NUMERO, VIA_INTERIOR, ZONA_TIPO, ZONA_NOMBRE, REFERENCIA, PAIS, DEPARTAMENTO, PROVINCIA, UBIGEO, CODIGO_POSTAL, TELEFONO, CELULAR, FAX, EMAIL, ESTADO, USUARIO_REGISTRO, FECHA_REGISTRO, USUARIO_MODIFICA, FECHA_MODIFICA}
            rowCUENTAS_COMERCIALES_DOMRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowCUENTAS_COMERCIALES_DOMRow)
            Return rowCUENTAS_COMERCIALES_DOMRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function FindByEMPRESACUENTA_COMERCIALDOMICILIO_ENVIO(ByVal EMPRESA As String, ByVal CUENTA_COMERCIAL As String, ByVal DOMICILIO_ENVIO As String) As CUENTAS_COMERCIALES_DOMRow
            Return CType(Me.Rows.Find(New Object() {EMPRESA, CUENTA_COMERCIAL, DOMICILIO_ENVIO}),CUENTAS_COMERCIALES_DOMRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As CUENTAS_COMERCIALES_DOMDataTable = CType(MyBase.Clone,CUENTAS_COMERCIALES_DOMDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New CUENTAS_COMERCIALES_DOMDataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub InitVars()
            Me.columnEMPRESA = MyBase.Columns("EMPRESA")
            Me.columnCUENTA_COMERCIAL = MyBase.Columns("CUENTA_COMERCIAL")
            Me.columnDOMICILIO_ENVIO = MyBase.Columns("DOMICILIO_ENVIO")
            Me.columnDESCRIPCION = MyBase.Columns("DESCRIPCION")
            Me.columnVIA_TIPO = MyBase.Columns("VIA_TIPO")
            Me.columnVIA_NOMBRE = MyBase.Columns("VIA_NOMBRE")
            Me.columnVIA_NUMERO = MyBase.Columns("VIA_NUMERO")
            Me.columnVIA_INTERIOR = MyBase.Columns("VIA_INTERIOR")
            Me.columnZONA_TIPO = MyBase.Columns("ZONA_TIPO")
            Me.columnZONA_NOMBRE = MyBase.Columns("ZONA_NOMBRE")
            Me.columnREFERENCIA = MyBase.Columns("REFERENCIA")
            Me.columnPAIS = MyBase.Columns("PAIS")
            Me.columnDEPARTAMENTO = MyBase.Columns("DEPARTAMENTO")
            Me.columnPROVINCIA = MyBase.Columns("PROVINCIA")
            Me.columnUBIGEO = MyBase.Columns("UBIGEO")
            Me.columnCODIGO_POSTAL = MyBase.Columns("CODIGO_POSTAL")
            Me.columnTELEFONO = MyBase.Columns("TELEFONO")
            Me.columnCELULAR = MyBase.Columns("CELULAR")
            Me.columnFAX = MyBase.Columns("FAX")
            Me.columnEMAIL = MyBase.Columns("EMAIL")
            Me.columnESTADO = MyBase.Columns("ESTADO")
            Me.columnUSUARIO_REGISTRO = MyBase.Columns("USUARIO_REGISTRO")
            Me.columnFECHA_REGISTRO = MyBase.Columns("FECHA_REGISTRO")
            Me.columnUSUARIO_MODIFICA = MyBase.Columns("USUARIO_MODIFICA")
            Me.columnFECHA_MODIFICA = MyBase.Columns("FECHA_MODIFICA")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitClass()
            Me.columnEMPRESA = New Global.System.Data.DataColumn("EMPRESA", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnEMPRESA)
            Me.columnCUENTA_COMERCIAL = New Global.System.Data.DataColumn("CUENTA_COMERCIAL", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCUENTA_COMERCIAL)
            Me.columnDOMICILIO_ENVIO = New Global.System.Data.DataColumn("DOMICILIO_ENVIO", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDOMICILIO_ENVIO)
            Me.columnDESCRIPCION = New Global.System.Data.DataColumn("DESCRIPCION", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDESCRIPCION)
            Me.columnVIA_TIPO = New Global.System.Data.DataColumn("VIA_TIPO", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnVIA_TIPO)
            Me.columnVIA_NOMBRE = New Global.System.Data.DataColumn("VIA_NOMBRE", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnVIA_NOMBRE)
            Me.columnVIA_NUMERO = New Global.System.Data.DataColumn("VIA_NUMERO", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnVIA_NUMERO)
            Me.columnVIA_INTERIOR = New Global.System.Data.DataColumn("VIA_INTERIOR", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnVIA_INTERIOR)
            Me.columnZONA_TIPO = New Global.System.Data.DataColumn("ZONA_TIPO", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnZONA_TIPO)
            Me.columnZONA_NOMBRE = New Global.System.Data.DataColumn("ZONA_NOMBRE", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnZONA_NOMBRE)
            Me.columnREFERENCIA = New Global.System.Data.DataColumn("REFERENCIA", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnREFERENCIA)
            Me.columnPAIS = New Global.System.Data.DataColumn("PAIS", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPAIS)
            Me.columnDEPARTAMENTO = New Global.System.Data.DataColumn("DEPARTAMENTO", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDEPARTAMENTO)
            Me.columnPROVINCIA = New Global.System.Data.DataColumn("PROVINCIA", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPROVINCIA)
            Me.columnUBIGEO = New Global.System.Data.DataColumn("UBIGEO", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnUBIGEO)
            Me.columnCODIGO_POSTAL = New Global.System.Data.DataColumn("CODIGO_POSTAL", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCODIGO_POSTAL)
            Me.columnTELEFONO = New Global.System.Data.DataColumn("TELEFONO", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTELEFONO)
            Me.columnCELULAR = New Global.System.Data.DataColumn("CELULAR", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCELULAR)
            Me.columnFAX = New Global.System.Data.DataColumn("FAX", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFAX)
            Me.columnEMAIL = New Global.System.Data.DataColumn("EMAIL", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnEMAIL)
            Me.columnESTADO = New Global.System.Data.DataColumn("ESTADO", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnESTADO)
            Me.columnUSUARIO_REGISTRO = New Global.System.Data.DataColumn("USUARIO_REGISTRO", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnUSUARIO_REGISTRO)
            Me.columnFECHA_REGISTRO = New Global.System.Data.DataColumn("FECHA_REGISTRO", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFECHA_REGISTRO)
            Me.columnUSUARIO_MODIFICA = New Global.System.Data.DataColumn("USUARIO_MODIFICA", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnUSUARIO_MODIFICA)
            Me.columnFECHA_MODIFICA = New Global.System.Data.DataColumn("FECHA_MODIFICA", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFECHA_MODIFICA)
            Me.Constraints.Add(New Global.System.Data.UniqueConstraint("Constraint1", New Global.System.Data.DataColumn() {Me.columnEMPRESA, Me.columnCUENTA_COMERCIAL, Me.columnDOMICILIO_ENVIO}, true))
            Me.columnEMPRESA.AllowDBNull = false
            Me.columnEMPRESA.MaxLength = 3
            Me.columnCUENTA_COMERCIAL.AllowDBNull = false
            Me.columnCUENTA_COMERCIAL.MaxLength = 8
            Me.columnDOMICILIO_ENVIO.AllowDBNull = false
            Me.columnDOMICILIO_ENVIO.MaxLength = 2
            Me.columnDESCRIPCION.AllowDBNull = false
            Me.columnDESCRIPCION.MaxLength = 100
            Me.columnVIA_TIPO.AllowDBNull = false
            Me.columnVIA_TIPO.MaxLength = 2
            Me.columnVIA_NOMBRE.AllowDBNull = false
            Me.columnVIA_NOMBRE.MaxLength = 30
            Me.columnVIA_NUMERO.AllowDBNull = false
            Me.columnVIA_NUMERO.MaxLength = 4
            Me.columnVIA_INTERIOR.AllowDBNull = false
            Me.columnVIA_INTERIOR.MaxLength = 4
            Me.columnZONA_TIPO.AllowDBNull = false
            Me.columnZONA_TIPO.MaxLength = 2
            Me.columnZONA_NOMBRE.AllowDBNull = false
            Me.columnZONA_NOMBRE.MaxLength = 30
            Me.columnREFERENCIA.AllowDBNull = false
            Me.columnREFERENCIA.MaxLength = 40
            Me.columnPAIS.AllowDBNull = false
            Me.columnPAIS.MaxLength = 4
            Me.columnDEPARTAMENTO.AllowDBNull = false
            Me.columnDEPARTAMENTO.MaxLength = 2
            Me.columnPROVINCIA.AllowDBNull = false
            Me.columnPROVINCIA.MaxLength = 4
            Me.columnUBIGEO.AllowDBNull = false
            Me.columnUBIGEO.MaxLength = 6
            Me.columnCODIGO_POSTAL.AllowDBNull = false
            Me.columnCODIGO_POSTAL.MaxLength = 10
            Me.columnTELEFONO.AllowDBNull = false
            Me.columnTELEFONO.MaxLength = 20
            Me.columnCELULAR.AllowDBNull = false
            Me.columnCELULAR.MaxLength = 20
            Me.columnFAX.AllowDBNull = false
            Me.columnFAX.MaxLength = 20
            Me.columnEMAIL.AllowDBNull = false
            Me.columnEMAIL.MaxLength = 70
            Me.columnESTADO.AllowDBNull = false
            Me.columnESTADO.MaxLength = 1
            Me.columnUSUARIO_REGISTRO.AllowDBNull = false
            Me.columnUSUARIO_REGISTRO.MaxLength = 12
            Me.columnFECHA_REGISTRO.AllowDBNull = false
            Me.columnUSUARIO_MODIFICA.MaxLength = 12
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function NewCUENTAS_COMERCIALES_DOMRow() As CUENTAS_COMERCIALES_DOMRow
            Return CType(Me.NewRow,CUENTAS_COMERCIALES_DOMRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New CUENTAS_COMERCIALES_DOMRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(CUENTAS_COMERCIALES_DOMRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.CUENTAS_COMERCIALES_DOMRowChangedEvent) Is Nothing) Then
                RaiseEvent CUENTAS_COMERCIALES_DOMRowChanged(Me, New CUENTAS_COMERCIALES_DOMRowChangeEvent(CType(e.Row,CUENTAS_COMERCIALES_DOMRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.CUENTAS_COMERCIALES_DOMRowChangingEvent) Is Nothing) Then
                RaiseEvent CUENTAS_COMERCIALES_DOMRowChanging(Me, New CUENTAS_COMERCIALES_DOMRowChangeEvent(CType(e.Row,CUENTAS_COMERCIALES_DOMRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.CUENTAS_COMERCIALES_DOMRowDeletedEvent) Is Nothing) Then
                RaiseEvent CUENTAS_COMERCIALES_DOMRowDeleted(Me, New CUENTAS_COMERCIALES_DOMRowChangeEvent(CType(e.Row,CUENTAS_COMERCIALES_DOMRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.CUENTAS_COMERCIALES_DOMRowDeletingEvent) Is Nothing) Then
                RaiseEvent CUENTAS_COMERCIALES_DOMRowDeleting(Me, New CUENTAS_COMERCIALES_DOMRowChangeEvent(CType(e.Row,CUENTAS_COMERCIALES_DOMRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub RemoveCUENTAS_COMERCIALES_DOMRow(ByVal row As CUENTAS_COMERCIALES_DOMRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence
            Dim ds As dsCuentasComercialesDomicilio = New dsCuentasComercialesDomicilio
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "CUENTAS_COMERCIALES_DOMDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Partial Public Class CUENTAS_COMERCIALES_DOMRow
        Inherits Global.System.Data.DataRow
        
        Private tableCUENTAS_COMERCIALES_DOM As CUENTAS_COMERCIALES_DOMDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableCUENTAS_COMERCIALES_DOM = CType(Me.Table,CUENTAS_COMERCIALES_DOMDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property EMPRESA() As String
            Get
                Return CType(Me(Me.tableCUENTAS_COMERCIALES_DOM.EMPRESAColumn),String)
            End Get
            Set
                Me(Me.tableCUENTAS_COMERCIALES_DOM.EMPRESAColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property CUENTA_COMERCIAL() As String
            Get
                Return CType(Me(Me.tableCUENTAS_COMERCIALES_DOM.CUENTA_COMERCIALColumn),String)
            End Get
            Set
                Me(Me.tableCUENTAS_COMERCIALES_DOM.CUENTA_COMERCIALColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property DOMICILIO_ENVIO() As String
            Get
                Return CType(Me(Me.tableCUENTAS_COMERCIALES_DOM.DOMICILIO_ENVIOColumn),String)
            End Get
            Set
                Me(Me.tableCUENTAS_COMERCIALES_DOM.DOMICILIO_ENVIOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property DESCRIPCION() As String
            Get
                Return CType(Me(Me.tableCUENTAS_COMERCIALES_DOM.DESCRIPCIONColumn),String)
            End Get
            Set
                Me(Me.tableCUENTAS_COMERCIALES_DOM.DESCRIPCIONColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property VIA_TIPO() As String
            Get
                Return CType(Me(Me.tableCUENTAS_COMERCIALES_DOM.VIA_TIPOColumn),String)
            End Get
            Set
                Me(Me.tableCUENTAS_COMERCIALES_DOM.VIA_TIPOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property VIA_NOMBRE() As String
            Get
                Return CType(Me(Me.tableCUENTAS_COMERCIALES_DOM.VIA_NOMBREColumn),String)
            End Get
            Set
                Me(Me.tableCUENTAS_COMERCIALES_DOM.VIA_NOMBREColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property VIA_NUMERO() As String
            Get
                Return CType(Me(Me.tableCUENTAS_COMERCIALES_DOM.VIA_NUMEROColumn),String)
            End Get
            Set
                Me(Me.tableCUENTAS_COMERCIALES_DOM.VIA_NUMEROColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property VIA_INTERIOR() As String
            Get
                Return CType(Me(Me.tableCUENTAS_COMERCIALES_DOM.VIA_INTERIORColumn),String)
            End Get
            Set
                Me(Me.tableCUENTAS_COMERCIALES_DOM.VIA_INTERIORColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property ZONA_TIPO() As String
            Get
                Return CType(Me(Me.tableCUENTAS_COMERCIALES_DOM.ZONA_TIPOColumn),String)
            End Get
            Set
                Me(Me.tableCUENTAS_COMERCIALES_DOM.ZONA_TIPOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property ZONA_NOMBRE() As String
            Get
                Return CType(Me(Me.tableCUENTAS_COMERCIALES_DOM.ZONA_NOMBREColumn),String)
            End Get
            Set
                Me(Me.tableCUENTAS_COMERCIALES_DOM.ZONA_NOMBREColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property REFERENCIA() As String
            Get
                Return CType(Me(Me.tableCUENTAS_COMERCIALES_DOM.REFERENCIAColumn),String)
            End Get
            Set
                Me(Me.tableCUENTAS_COMERCIALES_DOM.REFERENCIAColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property PAIS() As String
            Get
                Return CType(Me(Me.tableCUENTAS_COMERCIALES_DOM.PAISColumn),String)
            End Get
            Set
                Me(Me.tableCUENTAS_COMERCIALES_DOM.PAISColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property DEPARTAMENTO() As String
            Get
                Return CType(Me(Me.tableCUENTAS_COMERCIALES_DOM.DEPARTAMENTOColumn),String)
            End Get
            Set
                Me(Me.tableCUENTAS_COMERCIALES_DOM.DEPARTAMENTOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property PROVINCIA() As String
            Get
                Return CType(Me(Me.tableCUENTAS_COMERCIALES_DOM.PROVINCIAColumn),String)
            End Get
            Set
                Me(Me.tableCUENTAS_COMERCIALES_DOM.PROVINCIAColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property UBIGEO() As String
            Get
                Return CType(Me(Me.tableCUENTAS_COMERCIALES_DOM.UBIGEOColumn),String)
            End Get
            Set
                Me(Me.tableCUENTAS_COMERCIALES_DOM.UBIGEOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property CODIGO_POSTAL() As String
            Get
                Return CType(Me(Me.tableCUENTAS_COMERCIALES_DOM.CODIGO_POSTALColumn),String)
            End Get
            Set
                Me(Me.tableCUENTAS_COMERCIALES_DOM.CODIGO_POSTALColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property TELEFONO() As String
            Get
                Return CType(Me(Me.tableCUENTAS_COMERCIALES_DOM.TELEFONOColumn),String)
            End Get
            Set
                Me(Me.tableCUENTAS_COMERCIALES_DOM.TELEFONOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property CELULAR() As String
            Get
                Return CType(Me(Me.tableCUENTAS_COMERCIALES_DOM.CELULARColumn),String)
            End Get
            Set
                Me(Me.tableCUENTAS_COMERCIALES_DOM.CELULARColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property FAX() As String
            Get
                Return CType(Me(Me.tableCUENTAS_COMERCIALES_DOM.FAXColumn),String)
            End Get
            Set
                Me(Me.tableCUENTAS_COMERCIALES_DOM.FAXColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property EMAIL() As String
            Get
                Return CType(Me(Me.tableCUENTAS_COMERCIALES_DOM.EMAILColumn),String)
            End Get
            Set
                Me(Me.tableCUENTAS_COMERCIALES_DOM.EMAILColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property ESTADO() As String
            Get
                Return CType(Me(Me.tableCUENTAS_COMERCIALES_DOM.ESTADOColumn),String)
            End Get
            Set
                Me(Me.tableCUENTAS_COMERCIALES_DOM.ESTADOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property USUARIO_REGISTRO() As String
            Get
                Return CType(Me(Me.tableCUENTAS_COMERCIALES_DOM.USUARIO_REGISTROColumn),String)
            End Get
            Set
                Me(Me.tableCUENTAS_COMERCIALES_DOM.USUARIO_REGISTROColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property FECHA_REGISTRO() As Date
            Get
                Return CType(Me(Me.tableCUENTAS_COMERCIALES_DOM.FECHA_REGISTROColumn),Date)
            End Get
            Set
                Me(Me.tableCUENTAS_COMERCIALES_DOM.FECHA_REGISTROColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property USUARIO_MODIFICA() As String
            Get
                Try 
                    Return CType(Me(Me.tableCUENTAS_COMERCIALES_DOM.USUARIO_MODIFICAColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'USUARIO_MODIFICA' de la tabla 'CUENTAS_COMERCIALES_DOM' e"& _ 
                            "s DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableCUENTAS_COMERCIALES_DOM.USUARIO_MODIFICAColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property FECHA_MODIFICA() As Date
            Get
                Try 
                    Return CType(Me(Me.tableCUENTAS_COMERCIALES_DOM.FECHA_MODIFICAColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'FECHA_MODIFICA' de la tabla 'CUENTAS_COMERCIALES_DOM' es "& _ 
                            "DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableCUENTAS_COMERCIALES_DOM.FECHA_MODIFICAColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsUSUARIO_MODIFICANull() As Boolean
            Return Me.IsNull(Me.tableCUENTAS_COMERCIALES_DOM.USUARIO_MODIFICAColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetUSUARIO_MODIFICANull()
            Me(Me.tableCUENTAS_COMERCIALES_DOM.USUARIO_MODIFICAColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsFECHA_MODIFICANull() As Boolean
            Return Me.IsNull(Me.tableCUENTAS_COMERCIALES_DOM.FECHA_MODIFICAColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetFECHA_MODIFICANull()
            Me(Me.tableCUENTAS_COMERCIALES_DOM.FECHA_MODIFICAColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Public Class CUENTAS_COMERCIALES_DOMRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As CUENTAS_COMERCIALES_DOMRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New(ByVal row As CUENTAS_COMERCIALES_DOMRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Row() As CUENTAS_COMERCIALES_DOMRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
End Class
