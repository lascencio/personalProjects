'------------------------------------------------------------------------------
' <auto-generated>
'     Este código fue generado por una herramienta.
'     Versión de runtime:4.0.30319.42000
'
'     Los cambios en este archivo podrían causar un comportamiento incorrecto y se perderán si
'     se vuelve a generar el código.
' </auto-generated>
'------------------------------------------------------------------------------

Option Strict Off
Option Explicit On



'''<summary>
'''Represents a strongly typed in-memory cache of data.
'''</summary>
<Global.System.Serializable(),  _
 Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
 Global.System.ComponentModel.ToolboxItem(true),  _
 Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema"),  _
 Global.System.Xml.Serialization.XmlRootAttribute("dsComprobantesCliente"),  _
 Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")>  _
Partial Public Class dsComprobantesCliente
    Inherits Global.System.Data.DataSet
    
    Private tableCOMPROBANTES As COMPROBANTESDataTable

    Private tableCOMPROBANTES_DET As COMPROBANTES_DETDataTable

    Private _schemaSerializationMode As Global.System.Data.SchemaSerializationMode = Global.System.Data.SchemaSerializationMode.IncludeSchema

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Public Sub New()
        MyBase.New()
        Me.BeginInit()
        Me.InitClass()
        Dim schemaChangedHandler As Global.System.ComponentModel.CollectionChangeEventHandler = AddressOf Me.SchemaChanged
        AddHandler MyBase.Tables.CollectionChanged, schemaChangedHandler
        AddHandler MyBase.Relations.CollectionChanged, schemaChangedHandler
        Me.EndInit()
    End Sub

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
        MyBase.New(info, context, False)
        If (Me.IsBinarySerialized(info, context) = True) Then
            Me.InitVars(False)
            Dim schemaChangedHandler1 As Global.System.ComponentModel.CollectionChangeEventHandler = AddressOf Me.SchemaChanged
            AddHandler Me.Tables.CollectionChanged, schemaChangedHandler1
            AddHandler Me.Relations.CollectionChanged, schemaChangedHandler1
            Return
        End If
        Dim strSchema As String = CType(info.GetValue("XmlSchema", GetType(String)), String)
        If (Me.DetermineSchemaSerializationMode(info, context) = Global.System.Data.SchemaSerializationMode.IncludeSchema) Then
            Dim ds As Global.System.Data.DataSet = New Global.System.Data.DataSet()
            ds.ReadXmlSchema(New Global.System.Xml.XmlTextReader(New Global.System.IO.StringReader(strSchema)))
            If (Not (ds.Tables("COMPROBANTES")) Is Nothing) Then
                MyBase.Tables.Add(New COMPROBANTESDataTable(ds.Tables("COMPROBANTES")))
            End If
            If (Not (ds.Tables("COMPROBANTES_DET")) Is Nothing) Then
                MyBase.Tables.Add(New COMPROBANTES_DETDataTable(ds.Tables("COMPROBANTES_DET")))
            End If
            Me.DataSetName = ds.DataSetName
            Me.Prefix = ds.Prefix
            Me.Namespace = ds.Namespace
            Me.Locale = ds.Locale
            Me.CaseSensitive = ds.CaseSensitive
            Me.EnforceConstraints = ds.EnforceConstraints
            Me.Merge(ds, False, Global.System.Data.MissingSchemaAction.Add)
            Me.InitVars()
        Else
            Me.ReadXmlSchema(New Global.System.Xml.XmlTextReader(New Global.System.IO.StringReader(strSchema)))
        End If
        Me.GetSerializationData(info, context)
        Dim schemaChangedHandler As Global.System.ComponentModel.CollectionChangeEventHandler = AddressOf Me.SchemaChanged
        AddHandler MyBase.Tables.CollectionChanged, schemaChangedHandler
        AddHandler Me.Relations.CollectionChanged, schemaChangedHandler
    End Sub

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), _
     Global.System.ComponentModel.Browsable(False), _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)> _
    Public ReadOnly Property COMPROBANTES() As COMPROBANTESDataTable
        Get
            Return Me.tableCOMPROBANTES
        End Get
    End Property

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), _
     Global.System.ComponentModel.Browsable(False), _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)> _
    Public ReadOnly Property COMPROBANTES_DET() As COMPROBANTES_DETDataTable
        Get
            Return Me.tableCOMPROBANTES_DET
        End Get
    End Property

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), _
     Global.System.ComponentModel.BrowsableAttribute(True), _
     Global.System.ComponentModel.DesignerSerializationVisibilityAttribute(Global.System.ComponentModel.DesignerSerializationVisibility.Visible)> _
    Public Overrides Property SchemaSerializationMode() As Global.System.Data.SchemaSerializationMode
        Get
            Return Me._schemaSerializationMode
        End Get
        Set(value As Global.System.Data.SchemaSerializationMode)
            Me._schemaSerializationMode = value
        End Set
    End Property

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), _
     Global.System.ComponentModel.DesignerSerializationVisibilityAttribute(Global.System.ComponentModel.DesignerSerializationVisibility.Hidden)> _
    Public Shadows ReadOnly Property Tables() As Global.System.Data.DataTableCollection
        Get
            Return MyBase.Tables
        End Get
    End Property

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), _
     Global.System.ComponentModel.DesignerSerializationVisibilityAttribute(Global.System.ComponentModel.DesignerSerializationVisibility.Hidden)> _
    Public Shadows ReadOnly Property Relations() As Global.System.Data.DataRelationCollection
        Get
            Return MyBase.Relations
        End Get
    End Property

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Protected Overrides Sub InitializeDerivedDataSet()
        Me.BeginInit()
        Me.InitClass()
        Me.EndInit()
    End Sub

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Public Overrides Function Clone() As Global.System.Data.DataSet
        Dim cln As dsComprobantesCliente = CType(MyBase.Clone, dsComprobantesCliente)
        cln.InitVars()
        cln.SchemaSerializationMode = Me.SchemaSerializationMode
        Return cln
    End Function

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Protected Overrides Function ShouldSerializeTables() As Boolean
        Return False
    End Function

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Protected Overrides Function ShouldSerializeRelations() As Boolean
        Return False
    End Function

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Protected Overrides Sub ReadXmlSerializable(ByVal reader As Global.System.Xml.XmlReader)
        If (Me.DetermineSchemaSerializationMode(reader) = Global.System.Data.SchemaSerializationMode.IncludeSchema) Then
            Me.Reset()
            Dim ds As Global.System.Data.DataSet = New Global.System.Data.DataSet()
            ds.ReadXml(reader)
            If (Not (ds.Tables("COMPROBANTES")) Is Nothing) Then
                MyBase.Tables.Add(New COMPROBANTESDataTable(ds.Tables("COMPROBANTES")))
            End If
            If (Not (ds.Tables("COMPROBANTES_DET")) Is Nothing) Then
                MyBase.Tables.Add(New COMPROBANTES_DETDataTable(ds.Tables("COMPROBANTES_DET")))
            End If
            Me.DataSetName = ds.DataSetName
            Me.Prefix = ds.Prefix
            Me.Namespace = ds.Namespace
            Me.Locale = ds.Locale
            Me.CaseSensitive = ds.CaseSensitive
            Me.EnforceConstraints = ds.EnforceConstraints
            Me.Merge(ds, False, Global.System.Data.MissingSchemaAction.Add)
            Me.InitVars()
        Else
            Me.ReadXml(reader)
            Me.InitVars()
        End If
    End Sub

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Protected Overrides Function GetSchemaSerializable() As Global.System.Xml.Schema.XmlSchema
        Dim stream As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
        Me.WriteXmlSchema(New Global.System.Xml.XmlTextWriter(stream, Nothing))
        stream.Position = 0
        Return Global.System.Xml.Schema.XmlSchema.Read(New Global.System.Xml.XmlTextReader(stream), Nothing)
    End Function

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Friend Overloads Sub InitVars()
        Me.InitVars(True)
    End Sub

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Friend Overloads Sub InitVars(ByVal initTable As Boolean)
        Me.tableCOMPROBANTES = CType(MyBase.Tables("COMPROBANTES"), COMPROBANTESDataTable)
        If (initTable = True) Then
            If (Not (Me.tableCOMPROBANTES) Is Nothing) Then
                Me.tableCOMPROBANTES.InitVars()
            End If
        End If
        Me.tableCOMPROBANTES_DET = CType(MyBase.Tables("COMPROBANTES_DET"), COMPROBANTES_DETDataTable)
        If (initTable = True) Then
            If (Not (Me.tableCOMPROBANTES_DET) Is Nothing) Then
                Me.tableCOMPROBANTES_DET.InitVars()
            End If
        End If
    End Sub

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Private Sub InitClass()
        Me.DataSetName = "dsComprobantesCliente"
        Me.Prefix = ""
        Me.Namespace = "http://tempuri.org/dsComprobantesCliente.xsd"
        Me.EnforceConstraints = True
        Me.SchemaSerializationMode = Global.System.Data.SchemaSerializationMode.IncludeSchema
        Me.tableCOMPROBANTES = New COMPROBANTESDataTable()
        MyBase.Tables.Add(Me.tableCOMPROBANTES)
        Me.tableCOMPROBANTES_DET = New COMPROBANTES_DETDataTable()
        MyBase.Tables.Add(Me.tableCOMPROBANTES_DET)
    End Sub

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Private Function ShouldSerializeCOMPROBANTES() As Boolean
        Return False
    End Function

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Private Function ShouldSerializeCOMPROBANTES_DET() As Boolean
        Return False
    End Function

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Private Sub SchemaChanged(ByVal sender As Object, ByVal e As Global.System.ComponentModel.CollectionChangeEventArgs)
        If (e.Action = Global.System.ComponentModel.CollectionChangeAction.Remove) Then
            Me.InitVars()
        End If
    End Sub

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Public Shared Function GetTypedDataSetSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
        Dim ds As dsComprobantesCliente = New dsComprobantesCliente()
        Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
        Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
        Dim any As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
        any.Namespace = ds.Namespace
        sequence.Items.Add(any)
        type.Particle = sequence
        Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
        If xs.Contains(dsSchema.TargetNamespace) Then
            Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
            Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
            Try
                Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                dsSchema.Write(s1)
                Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                Do While schemas.MoveNext
                    schema = CType(schemas.Current, Global.System.Xml.Schema.XmlSchema)
                    s2.SetLength(0)
                    schema.Write(s2)
                    If (s1.Length = s2.Length) Then
                        s1.Position = 0
                        s2.Position = 0

                        Do While ((s1.Position <> s1.Length) _
                                    AndAlso (s1.ReadByte = s2.ReadByte))


                        Loop
                        If (s1.Position = s1.Length) Then
                            Return type
                        End If
                    End If

                Loop
            Finally
                If (Not (s1) Is Nothing) Then
                    s1.Close()
                End If
                If (Not (s2) Is Nothing) Then
                    s2.Close()
                End If
            End Try
        End If
        xs.Add(dsSchema)
        Return type
    End Function

    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Public Delegate Sub COMPROBANTESRowChangeEventHandler(ByVal sender As Object, ByVal e As COMPROBANTESRowChangeEvent)

    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Public Delegate Sub COMPROBANTES_DETRowChangeEventHandler(ByVal sender As Object, ByVal e As COMPROBANTES_DETRowChangeEvent)

    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(), _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")> _
    Partial Public Class COMPROBANTESDataTable
        Inherits Global.System.Data.TypedTableBase(Of COMPROBANTESRow)

        Private columnComprobanteId As Global.System.Data.DataColumn

        Private columnEmpresaId As Global.System.Data.DataColumn

        Private columnSedeId As Global.System.Data.DataColumn

        Private columnTipoEmisionId As Global.System.Data.DataColumn

        Private columnSerieId As Global.System.Data.DataColumn

        Private columnNumero As Global.System.Data.DataColumn

        Private columnFecha As Global.System.Data.DataColumn

        Private columnProveedorClienteId As Global.System.Data.DataColumn

        Private columnMonedaId As Global.System.Data.DataColumn

        Private columnFormaPagoId As Global.System.Data.DataColumn

        Private columnFechaVencimiento As Global.System.Data.DataColumn

        Private columnVendedorId As Global.System.Data.DataColumn

        Private columnEstado As Global.System.Data.DataColumn

        Private columnVentaBruta As Global.System.Data.DataColumn

        Private columnVentaConDescuentos As Global.System.Data.DataColumn

        Private columnValorVenta As Global.System.Data.DataColumn

        Private columnPorcentajeIGV As Global.System.Data.DataColumn

        Private columnVentaNeta As Global.System.Data.DataColumn

        Private columnObservaciones As Global.System.Data.DataColumn

        Private columnAnio As Global.System.Data.DataColumn

        Private columnValorVentaInafecto As Global.System.Data.DataColumn

        Private columnValorVentaAfecto As Global.System.Data.DataColumn

        Private columnMontoIGV As Global.System.Data.DataColumn

        Private columnDocumentoReferenciaId As Global.System.Data.DataColumn

        Private columnFechaProceso As Global.System.Data.DataColumn

        Private columnNombreCliente As Global.System.Data.DataColumn

        Private columnDireccion As Global.System.Data.DataColumn

        Private columnTelefono As Global.System.Data.DataColumn

        Private columnFechaAnulacion As Global.System.Data.DataColumn

        Private columnMotivoAnulacion As Global.System.Data.DataColumn

        Private columnPrecioVenta As Global.System.Data.DataColumn

        Private columnSerieClienteUnico As Global.System.Data.DataColumn

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub New()
            MyBase.New()
            Me.TableName = "COMPROBANTES"
            Me.BeginInit()
            Me.InitClass()
            Me.EndInit()
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New()
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars()
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property ComprobanteIdColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnComprobanteId
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property EmpresaIdColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnEmpresaId
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property SedeIdColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSedeId
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property TipoEmisionIdColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTipoEmisionId
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property SerieIdColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSerieId
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property NumeroColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnNumero
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property FechaColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnFecha
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property ProveedorClienteIdColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnProveedorClienteId
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property MonedaIdColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnMonedaId
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property FormaPagoIdColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnFormaPagoId
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property FechaVencimientoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnFechaVencimiento
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property VendedorIdColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnVendedorId
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property EstadoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnEstado
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property VentaBrutaColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnVentaBruta
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property VentaConDescuentosColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnVentaConDescuentos
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property ValorVentaColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnValorVenta
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property PorcentajeIGVColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPorcentajeIGV
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property VentaNetaColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnVentaNeta
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property ObservacionesColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnObservaciones
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property AnioColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnAnio
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property ValorVentaInafectoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnValorVentaInafecto
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property ValorVentaAfectoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnValorVentaAfecto
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property MontoIGVColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnMontoIGV
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property DocumentoReferenciaIdColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDocumentoReferenciaId
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property FechaProcesoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnFechaProceso
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property NombreClienteColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnNombreCliente
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property DireccionColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDireccion
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property TelefonoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTelefono
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property FechaAnulacionColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnFechaAnulacion
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property MotivoAnulacionColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnMotivoAnulacion
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property PrecioVentaColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPrecioVenta
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property SerieClienteUnicoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSerieClienteUnico
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), _
         Global.System.ComponentModel.Browsable(False)> _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Default Public ReadOnly Property Item(ByVal index As Integer) As COMPROBANTESRow
            Get
                Return CType(Me.Rows(index), COMPROBANTESRow)
            End Get
        End Property

        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Event COMPROBANTESRowChanging As COMPROBANTESRowChangeEventHandler

        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Event COMPROBANTESRowChanged As COMPROBANTESRowChangeEventHandler

        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Event COMPROBANTESRowDeleting As COMPROBANTESRowChangeEventHandler

        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Event COMPROBANTESRowDeleted As COMPROBANTESRowChangeEventHandler

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Overloads Sub AddCOMPROBANTESRow(ByVal row As COMPROBANTESRow)
            Me.Rows.Add(row)
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Overloads Function AddCOMPROBANTESRow( _
                    ByVal EmpresaId As Integer, _
                    ByVal SedeId As Integer, _
                    ByVal TipoEmisionId As Integer, _
                    ByVal SerieId As Integer, _
                    ByVal Numero As String, _
                    ByVal Fecha As Date, _
                    ByVal ProveedorClienteId As Integer, _
                    ByVal MonedaId As Integer, _
                    ByVal FormaPagoId As Integer, _
                    ByVal FechaVencimiento As Date, _
                    ByVal VendedorId As Integer, _
                    ByVal Estado As Integer, _
                    ByVal VentaBruta As Decimal, _
                    ByVal VentaConDescuentos As Decimal, _
                    ByVal ValorVenta As Decimal, _
                    ByVal PorcentajeIGV As Decimal, _
                    ByVal VentaNeta As Decimal, _
                    ByVal Observaciones As String, _
                    ByVal Anio As Integer, _
                    ByVal ValorVentaInafecto As Decimal, _
                    ByVal ValorVentaAfecto As Decimal, _
                    ByVal MontoIGV As Decimal, _
                    ByVal DocumentoReferenciaId As Integer, _
                    ByVal FechaProceso As Date, _
                    ByVal NombreCliente As String, _
                    ByVal Direccion As String, _
                    ByVal Telefono As String, _
                    ByVal FechaAnulacion As Date, _
                    ByVal MotivoAnulacion As String, _
                    ByVal PrecioVenta As Decimal, _
                    ByVal SerieClienteUnico As Integer) As COMPROBANTESRow
            Dim rowCOMPROBANTESRow As COMPROBANTESRow = CType(Me.NewRow, COMPROBANTESRow)
            Dim columnValuesArray() As Object = New Object() {Nothing, EmpresaId, SedeId, TipoEmisionId, SerieId, Numero, Fecha, ProveedorClienteId, MonedaId, FormaPagoId, FechaVencimiento, VendedorId, Estado, VentaBruta, VentaConDescuentos, ValorVenta, PorcentajeIGV, VentaNeta, Observaciones, Anio, ValorVentaInafecto, ValorVentaAfecto, MontoIGV, DocumentoReferenciaId, FechaProceso, NombreCliente, Direccion, Telefono, FechaAnulacion, MotivoAnulacion, PrecioVenta, SerieClienteUnico}
            rowCOMPROBANTESRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowCOMPROBANTESRow)
            Return rowCOMPROBANTESRow
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function FindByComprobanteId(ByVal ComprobanteId As Integer) As COMPROBANTESRow
            Return CType(Me.Rows.Find(New Object() {ComprobanteId}), COMPROBANTESRow)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As COMPROBANTESDataTable = CType(MyBase.Clone, COMPROBANTESDataTable)
            cln.InitVars()
            Return cln
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New COMPROBANTESDataTable()
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Friend Sub InitVars()
            Me.columnComprobanteId = MyBase.Columns("ComprobanteId")
            Me.columnEmpresaId = MyBase.Columns("EmpresaId")
            Me.columnSedeId = MyBase.Columns("SedeId")
            Me.columnTipoEmisionId = MyBase.Columns("TipoEmisionId")
            Me.columnSerieId = MyBase.Columns("SerieId")
            Me.columnNumero = MyBase.Columns("Numero")
            Me.columnFecha = MyBase.Columns("Fecha")
            Me.columnProveedorClienteId = MyBase.Columns("ProveedorClienteId")
            Me.columnMonedaId = MyBase.Columns("MonedaId")
            Me.columnFormaPagoId = MyBase.Columns("FormaPagoId")
            Me.columnFechaVencimiento = MyBase.Columns("FechaVencimiento")
            Me.columnVendedorId = MyBase.Columns("VendedorId")
            Me.columnEstado = MyBase.Columns("Estado")
            Me.columnVentaBruta = MyBase.Columns("VentaBruta")
            Me.columnVentaConDescuentos = MyBase.Columns("VentaConDescuentos")
            Me.columnValorVenta = MyBase.Columns("ValorVenta")
            Me.columnPorcentajeIGV = MyBase.Columns("PorcentajeIGV")
            Me.columnVentaNeta = MyBase.Columns("VentaNeta")
            Me.columnObservaciones = MyBase.Columns("Observaciones")
            Me.columnAnio = MyBase.Columns("Anio")
            Me.columnValorVentaInafecto = MyBase.Columns("ValorVentaInafecto")
            Me.columnValorVentaAfecto = MyBase.Columns("ValorVentaAfecto")
            Me.columnMontoIGV = MyBase.Columns("MontoIGV")
            Me.columnDocumentoReferenciaId = MyBase.Columns("DocumentoReferenciaId")
            Me.columnFechaProceso = MyBase.Columns("FechaProceso")
            Me.columnNombreCliente = MyBase.Columns("NombreCliente")
            Me.columnDireccion = MyBase.Columns("Direccion")
            Me.columnTelefono = MyBase.Columns("Telefono")
            Me.columnFechaAnulacion = MyBase.Columns("FechaAnulacion")
            Me.columnMotivoAnulacion = MyBase.Columns("MotivoAnulacion")
            Me.columnPrecioVenta = MyBase.Columns("PrecioVenta")
            Me.columnSerieClienteUnico = MyBase.Columns("SerieClienteUnico")
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Private Sub InitClass()
            Me.columnComprobanteId = New Global.System.Data.DataColumn("ComprobanteId", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnComprobanteId)
            Me.columnEmpresaId = New Global.System.Data.DataColumn("EmpresaId", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnEmpresaId)
            Me.columnSedeId = New Global.System.Data.DataColumn("SedeId", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSedeId)
            Me.columnTipoEmisionId = New Global.System.Data.DataColumn("TipoEmisionId", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTipoEmisionId)
            Me.columnSerieId = New Global.System.Data.DataColumn("SerieId", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSerieId)
            Me.columnNumero = New Global.System.Data.DataColumn("Numero", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnNumero)
            Me.columnFecha = New Global.System.Data.DataColumn("Fecha", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFecha)
            Me.columnProveedorClienteId = New Global.System.Data.DataColumn("ProveedorClienteId", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnProveedorClienteId)
            Me.columnMonedaId = New Global.System.Data.DataColumn("MonedaId", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMonedaId)
            Me.columnFormaPagoId = New Global.System.Data.DataColumn("FormaPagoId", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFormaPagoId)
            Me.columnFechaVencimiento = New Global.System.Data.DataColumn("FechaVencimiento", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFechaVencimiento)
            Me.columnVendedorId = New Global.System.Data.DataColumn("VendedorId", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnVendedorId)
            Me.columnEstado = New Global.System.Data.DataColumn("Estado", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnEstado)
            Me.columnVentaBruta = New Global.System.Data.DataColumn("VentaBruta", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnVentaBruta)
            Me.columnVentaConDescuentos = New Global.System.Data.DataColumn("VentaConDescuentos", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnVentaConDescuentos)
            Me.columnValorVenta = New Global.System.Data.DataColumn("ValorVenta", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnValorVenta)
            Me.columnPorcentajeIGV = New Global.System.Data.DataColumn("PorcentajeIGV", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPorcentajeIGV)
            Me.columnVentaNeta = New Global.System.Data.DataColumn("VentaNeta", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnVentaNeta)
            Me.columnObservaciones = New Global.System.Data.DataColumn("Observaciones", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnObservaciones)
            Me.columnAnio = New Global.System.Data.DataColumn("Anio", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnAnio)
            Me.columnValorVentaInafecto = New Global.System.Data.DataColumn("ValorVentaInafecto", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnValorVentaInafecto)
            Me.columnValorVentaAfecto = New Global.System.Data.DataColumn("ValorVentaAfecto", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnValorVentaAfecto)
            Me.columnMontoIGV = New Global.System.Data.DataColumn("MontoIGV", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMontoIGV)
            Me.columnDocumentoReferenciaId = New Global.System.Data.DataColumn("DocumentoReferenciaId", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDocumentoReferenciaId)
            Me.columnFechaProceso = New Global.System.Data.DataColumn("FechaProceso", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFechaProceso)
            Me.columnNombreCliente = New Global.System.Data.DataColumn("NombreCliente", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnNombreCliente)
            Me.columnDireccion = New Global.System.Data.DataColumn("Direccion", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDireccion)
            Me.columnTelefono = New Global.System.Data.DataColumn("Telefono", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTelefono)
            Me.columnFechaAnulacion = New Global.System.Data.DataColumn("FechaAnulacion", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFechaAnulacion)
            Me.columnMotivoAnulacion = New Global.System.Data.DataColumn("MotivoAnulacion", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMotivoAnulacion)
            Me.columnPrecioVenta = New Global.System.Data.DataColumn("PrecioVenta", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPrecioVenta)
            Me.columnSerieClienteUnico = New Global.System.Data.DataColumn("SerieClienteUnico", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSerieClienteUnico)
            Me.Constraints.Add(New Global.System.Data.UniqueConstraint("Constraint1", New Global.System.Data.DataColumn() {Me.columnComprobanteId}, True))
            Me.columnComprobanteId.AutoIncrement = True
            Me.columnComprobanteId.AutoIncrementSeed = -1
            Me.columnComprobanteId.AutoIncrementStep = -1
            Me.columnComprobanteId.AllowDBNull = False
            Me.columnComprobanteId.ReadOnly = True
            Me.columnComprobanteId.Unique = True
            Me.columnEmpresaId.AllowDBNull = False
            Me.columnSedeId.AllowDBNull = False
            Me.columnTipoEmisionId.AllowDBNull = False
            Me.columnNumero.AllowDBNull = False
            Me.columnNumero.MaxLength = 50
            Me.columnFecha.AllowDBNull = False
            Me.columnProveedorClienteId.AllowDBNull = False
            Me.columnMonedaId.AllowDBNull = False
            Me.columnFechaVencimiento.AllowDBNull = False
            Me.columnEstado.AllowDBNull = False
            Me.columnVentaBruta.AllowDBNull = False
            Me.columnVentaConDescuentos.AllowDBNull = False
            Me.columnValorVenta.AllowDBNull = False
            Me.columnPorcentajeIGV.AllowDBNull = False
            Me.columnVentaNeta.AllowDBNull = False
            Me.columnObservaciones.MaxLength = 2147483647
            Me.columnValorVentaInafecto.AllowDBNull = False
            Me.columnValorVentaAfecto.AllowDBNull = False
            Me.columnMontoIGV.AllowDBNull = False
            Me.columnFechaProceso.AllowDBNull = False
            Me.columnNombreCliente.AllowDBNull = False
            Me.columnNombreCliente.MaxLength = 100
            Me.columnDireccion.AllowDBNull = False
            Me.columnDireccion.MaxLength = 100
            Me.columnTelefono.AllowDBNull = False
            Me.columnTelefono.MaxLength = 50
            Me.columnMotivoAnulacion.AllowDBNull = False
            Me.columnMotivoAnulacion.MaxLength = 50
            Me.columnSerieClienteUnico.AllowDBNull = False
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function NewCOMPROBANTESRow() As COMPROBANTESRow
            Return CType(Me.NewRow, COMPROBANTESRow)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New COMPROBANTESRow(builder)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(COMPROBANTESRow)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.COMPROBANTESRowChangedEvent) Is Nothing) Then
                RaiseEvent COMPROBANTESRowChanged(Me, New COMPROBANTESRowChangeEvent(CType(e.Row, COMPROBANTESRow), e.Action))
            End If
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.COMPROBANTESRowChangingEvent) Is Nothing) Then
                RaiseEvent COMPROBANTESRowChanging(Me, New COMPROBANTESRowChangeEvent(CType(e.Row, COMPROBANTESRow), e.Action))
            End If
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.COMPROBANTESRowDeletedEvent) Is Nothing) Then
                RaiseEvent COMPROBANTESRowDeleted(Me, New COMPROBANTESRowChangeEvent(CType(e.Row, COMPROBANTESRow), e.Action))
            End If
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.COMPROBANTESRowDeletingEvent) Is Nothing) Then
                RaiseEvent COMPROBANTESRowDeleting(Me, New COMPROBANTESRowChangeEvent(CType(e.Row, COMPROBANTESRow), e.Action))
            End If
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub RemoveCOMPROBANTESRow(ByVal row As COMPROBANTESRow)
            Me.Rows.Remove(row)
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As dsComprobantesCliente = New dsComprobantesCliente()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "COMPROBANTESDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current, Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0

                            Do While ((s1.Position <> s1.Length) _
                                        AndAlso (s1.ReadByte = s2.ReadByte))


                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If

                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close()
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close()
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class

    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(), _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")> _
    Partial Public Class COMPROBANTES_DETDataTable
        Inherits Global.System.Data.TypedTableBase(Of COMPROBANTES_DETRow)

        Private columnArticuloxComprobanteId As Global.System.Data.DataColumn

        Private columnComprobanteId As Global.System.Data.DataColumn

        Private columnArticuloId As Global.System.Data.DataColumn

        Private columnUnidadId As Global.System.Data.DataColumn

        Private columnCantidad As Global.System.Data.DataColumn

        Private columnValorUnitario As Global.System.Data.DataColumn

        Private columnVentaBruta As Global.System.Data.DataColumn

        Private columnPorcentajeDescuento As Global.System.Data.DataColumn

        Private columnVentaConDescuentos As Global.System.Data.DataColumn

        Private columnPorcentajeISC As Global.System.Data.DataColumn

        Private columnValorVenta As Global.System.Data.DataColumn

        Private columnPorcentajeIGV As Global.System.Data.DataColumn

        Private columnPrecioUnitario As Global.System.Data.DataColumn

        Private columnPrecioVenta As Global.System.Data.DataColumn

        Private columnValorVentaUnitario As Global.System.Data.DataColumn

        Private columnAlmacenId As Global.System.Data.DataColumn

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub New()
            MyBase.New()
            Me.TableName = "COMPROBANTES_DET"
            Me.BeginInit()
            Me.InitClass()
            Me.EndInit()
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New()
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars()
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property ArticuloxComprobanteIdColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnArticuloxComprobanteId
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property ComprobanteIdColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnComprobanteId
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property ArticuloIdColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnArticuloId
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property UnidadIdColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnUnidadId
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property CantidadColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCantidad
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property ValorUnitarioColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnValorUnitario
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property VentaBrutaColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnVentaBruta
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property PorcentajeDescuentoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPorcentajeDescuento
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property VentaConDescuentosColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnVentaConDescuentos
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property PorcentajeISCColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPorcentajeISC
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property ValorVentaColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnValorVenta
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property PorcentajeIGVColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPorcentajeIGV
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property PrecioUnitarioColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPrecioUnitario
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property PrecioVentaColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPrecioVenta
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property ValorVentaUnitarioColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnValorVentaUnitario
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property AlmacenIdColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnAlmacenId
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), _
         Global.System.ComponentModel.Browsable(False)> _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Default Public ReadOnly Property Item(ByVal index As Integer) As COMPROBANTES_DETRow
            Get
                Return CType(Me.Rows(index), COMPROBANTES_DETRow)
            End Get
        End Property

        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Event COMPROBANTES_DETRowChanging As COMPROBANTES_DETRowChangeEventHandler

        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Event COMPROBANTES_DETRowChanged As COMPROBANTES_DETRowChangeEventHandler

        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Event COMPROBANTES_DETRowDeleting As COMPROBANTES_DETRowChangeEventHandler

        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Event COMPROBANTES_DETRowDeleted As COMPROBANTES_DETRowChangeEventHandler

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Overloads Sub AddCOMPROBANTES_DETRow(ByVal row As COMPROBANTES_DETRow)
            Me.Rows.Add(row)
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Overloads Function AddCOMPROBANTES_DETRow(ByVal ComprobanteId As Integer, ByVal ArticuloId As Integer, ByVal UnidadId As Integer, ByVal Cantidad As Decimal, ByVal ValorUnitario As Decimal, ByVal VentaBruta As Decimal, ByVal PorcentajeDescuento As Decimal, ByVal VentaConDescuentos As Decimal, ByVal PorcentajeISC As Decimal, ByVal ValorVenta As Decimal, ByVal PorcentajeIGV As Decimal, ByVal PrecioUnitario As Decimal, ByVal PrecioVenta As Decimal, ByVal ValorVentaUnitario As Decimal, ByVal AlmacenId As Integer) As COMPROBANTES_DETRow
            Dim rowCOMPROBANTES_DETRow As COMPROBANTES_DETRow = CType(Me.NewRow, COMPROBANTES_DETRow)
            Dim columnValuesArray() As Object = New Object() {Nothing, ComprobanteId, ArticuloId, UnidadId, Cantidad, ValorUnitario, VentaBruta, PorcentajeDescuento, VentaConDescuentos, PorcentajeISC, ValorVenta, PorcentajeIGV, PrecioUnitario, PrecioVenta, ValorVentaUnitario, AlmacenId}
            rowCOMPROBANTES_DETRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowCOMPROBANTES_DETRow)
            Return rowCOMPROBANTES_DETRow
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function FindByArticuloxComprobanteId(ByVal ArticuloxComprobanteId As Integer) As COMPROBANTES_DETRow
            Return CType(Me.Rows.Find(New Object() {ArticuloxComprobanteId}), COMPROBANTES_DETRow)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As COMPROBANTES_DETDataTable = CType(MyBase.Clone, COMPROBANTES_DETDataTable)
            cln.InitVars()
            Return cln
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New COMPROBANTES_DETDataTable()
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Friend Sub InitVars()
            Me.columnArticuloxComprobanteId = MyBase.Columns("ArticuloxComprobanteId")
            Me.columnComprobanteId = MyBase.Columns("ComprobanteId")
            Me.columnArticuloId = MyBase.Columns("ArticuloId")
            Me.columnUnidadId = MyBase.Columns("UnidadId")
            Me.columnCantidad = MyBase.Columns("Cantidad")
            Me.columnValorUnitario = MyBase.Columns("ValorUnitario")
            Me.columnVentaBruta = MyBase.Columns("VentaBruta")
            Me.columnPorcentajeDescuento = MyBase.Columns("PorcentajeDescuento")
            Me.columnVentaConDescuentos = MyBase.Columns("VentaConDescuentos")
            Me.columnPorcentajeISC = MyBase.Columns("PorcentajeISC")
            Me.columnValorVenta = MyBase.Columns("ValorVenta")
            Me.columnPorcentajeIGV = MyBase.Columns("PorcentajeIGV")
            Me.columnPrecioUnitario = MyBase.Columns("PrecioUnitario")
            Me.columnPrecioVenta = MyBase.Columns("PrecioVenta")
            Me.columnValorVentaUnitario = MyBase.Columns("ValorVentaUnitario")
            Me.columnAlmacenId = MyBase.Columns("AlmacenId")
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Private Sub InitClass()
            Me.columnArticuloxComprobanteId = New Global.System.Data.DataColumn("ArticuloxComprobanteId", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnArticuloxComprobanteId)
            Me.columnComprobanteId = New Global.System.Data.DataColumn("ComprobanteId", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnComprobanteId)
            Me.columnArticuloId = New Global.System.Data.DataColumn("ArticuloId", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnArticuloId)
            Me.columnUnidadId = New Global.System.Data.DataColumn("UnidadId", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnUnidadId)
            Me.columnCantidad = New Global.System.Data.DataColumn("Cantidad", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCantidad)
            Me.columnValorUnitario = New Global.System.Data.DataColumn("ValorUnitario", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnValorUnitario)
            Me.columnVentaBruta = New Global.System.Data.DataColumn("VentaBruta", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnVentaBruta)
            Me.columnPorcentajeDescuento = New Global.System.Data.DataColumn("PorcentajeDescuento", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPorcentajeDescuento)
            Me.columnVentaConDescuentos = New Global.System.Data.DataColumn("VentaConDescuentos", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnVentaConDescuentos)
            Me.columnPorcentajeISC = New Global.System.Data.DataColumn("PorcentajeISC", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPorcentajeISC)
            Me.columnValorVenta = New Global.System.Data.DataColumn("ValorVenta", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnValorVenta)
            Me.columnPorcentajeIGV = New Global.System.Data.DataColumn("PorcentajeIGV", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPorcentajeIGV)
            Me.columnPrecioUnitario = New Global.System.Data.DataColumn("PrecioUnitario", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPrecioUnitario)
            Me.columnPrecioVenta = New Global.System.Data.DataColumn("PrecioVenta", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPrecioVenta)
            Me.columnValorVentaUnitario = New Global.System.Data.DataColumn("ValorVentaUnitario", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnValorVentaUnitario)
            Me.columnAlmacenId = New Global.System.Data.DataColumn("AlmacenId", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnAlmacenId)
            Me.Constraints.Add(New Global.System.Data.UniqueConstraint("Constraint1", New Global.System.Data.DataColumn() {Me.columnArticuloxComprobanteId}, True))
            Me.columnArticuloxComprobanteId.AutoIncrement = True
            Me.columnArticuloxComprobanteId.AutoIncrementSeed = -1
            Me.columnArticuloxComprobanteId.AutoIncrementStep = -1
            Me.columnArticuloxComprobanteId.AllowDBNull = False
            Me.columnArticuloxComprobanteId.ReadOnly = True
            Me.columnArticuloxComprobanteId.Unique = True
            Me.columnComprobanteId.AllowDBNull = False
            Me.columnArticuloId.AllowDBNull = False
            Me.columnUnidadId.AllowDBNull = False
            Me.columnCantidad.AllowDBNull = False
            Me.columnValorUnitario.AllowDBNull = False
            Me.columnVentaBruta.AllowDBNull = False
            Me.columnPorcentajeDescuento.AllowDBNull = False
            Me.columnVentaConDescuentos.AllowDBNull = False
            Me.columnPorcentajeISC.AllowDBNull = False
            Me.columnValorVenta.AllowDBNull = False
            Me.columnPorcentajeIGV.AllowDBNull = False
            Me.columnPrecioUnitario.AllowDBNull = False
            Me.columnPrecioVenta.AllowDBNull = False
            Me.columnValorVentaUnitario.AllowDBNull = False
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function NewCOMPROBANTES_DETRow() As COMPROBANTES_DETRow
            Return CType(Me.NewRow, COMPROBANTES_DETRow)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New COMPROBANTES_DETRow(builder)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(COMPROBANTES_DETRow)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.COMPROBANTES_DETRowChangedEvent) Is Nothing) Then
                RaiseEvent COMPROBANTES_DETRowChanged(Me, New COMPROBANTES_DETRowChangeEvent(CType(e.Row, COMPROBANTES_DETRow), e.Action))
            End If
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.COMPROBANTES_DETRowChangingEvent) Is Nothing) Then
                RaiseEvent COMPROBANTES_DETRowChanging(Me, New COMPROBANTES_DETRowChangeEvent(CType(e.Row, COMPROBANTES_DETRow), e.Action))
            End If
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.COMPROBANTES_DETRowDeletedEvent) Is Nothing) Then
                RaiseEvent COMPROBANTES_DETRowDeleted(Me, New COMPROBANTES_DETRowChangeEvent(CType(e.Row, COMPROBANTES_DETRow), e.Action))
            End If
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.COMPROBANTES_DETRowDeletingEvent) Is Nothing) Then
                RaiseEvent COMPROBANTES_DETRowDeleting(Me, New COMPROBANTES_DETRowChangeEvent(CType(e.Row, COMPROBANTES_DETRow), e.Action))
            End If
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub RemoveCOMPROBANTES_DETRow(ByVal row As COMPROBANTES_DETRow)
            Me.Rows.Remove(row)
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As dsComprobantesCliente = New dsComprobantesCliente()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "COMPROBANTES_DETDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current, Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0

                            Do While ((s1.Position <> s1.Length) _
                                        AndAlso (s1.ReadByte = s2.ReadByte))


                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If

                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close()
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close()
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class

    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class COMPROBANTESRow
        Inherits Global.System.Data.DataRow

        Private tableCOMPROBANTES As COMPROBANTESDataTable

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableCOMPROBANTES = CType(Me.Table, COMPROBANTESDataTable)
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property ComprobanteId() As Integer
            Get
                Return CType(Me(Me.tableCOMPROBANTES.ComprobanteIdColumn), Integer)
            End Get
            Set(value As Integer)
                Me(Me.tableCOMPROBANTES.ComprobanteIdColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property EmpresaId() As Integer
            Get
                Return CType(Me(Me.tableCOMPROBANTES.EmpresaIdColumn), Integer)
            End Get
            Set(value As Integer)
                Me(Me.tableCOMPROBANTES.EmpresaIdColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property SedeId() As Integer
            Get
                Return CType(Me(Me.tableCOMPROBANTES.SedeIdColumn), Integer)
            End Get
            Set(value As Integer)
                Me(Me.tableCOMPROBANTES.SedeIdColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property TipoEmisionId() As Integer
            Get
                Return CType(Me(Me.tableCOMPROBANTES.TipoEmisionIdColumn), Integer)
            End Get
            Set(value As Integer)
                Me(Me.tableCOMPROBANTES.TipoEmisionIdColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property SerieId() As Integer
            Get
                Try
                    Return CType(Me(Me.tableCOMPROBANTES.SerieIdColumn), Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'SerieId' de la tabla 'COMPROBANTES' es DBNull.", e)
                End Try
            End Get
            Set(value As Integer)
                Me(Me.tableCOMPROBANTES.SerieIdColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property Numero() As String
            Get
                Return CType(Me(Me.tableCOMPROBANTES.NumeroColumn), String)
            End Get
            Set(value As String)
                Me(Me.tableCOMPROBANTES.NumeroColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property Fecha() As Date
            Get
                Return CType(Me(Me.tableCOMPROBANTES.FechaColumn), Date)
            End Get
            Set(value As Date)
                Me(Me.tableCOMPROBANTES.FechaColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property ProveedorClienteId() As Integer
            Get
                Return CType(Me(Me.tableCOMPROBANTES.ProveedorClienteIdColumn), Integer)
            End Get
            Set(value As Integer)
                Me(Me.tableCOMPROBANTES.ProveedorClienteIdColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property MonedaId() As Integer
            Get
                Return CType(Me(Me.tableCOMPROBANTES.MonedaIdColumn), Integer)
            End Get
            Set(value As Integer)
                Me(Me.tableCOMPROBANTES.MonedaIdColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property FormaPagoId() As Integer
            Get
                Try
                    Return CType(Me(Me.tableCOMPROBANTES.FormaPagoIdColumn), Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'FormaPagoId' de la tabla 'COMPROBANTES' es DBNull.", e)
                End Try
            End Get
            Set(value As Integer)
                Me(Me.tableCOMPROBANTES.FormaPagoIdColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property FechaVencimiento() As Date
            Get
                Return CType(Me(Me.tableCOMPROBANTES.FechaVencimientoColumn), Date)
            End Get
            Set(value As Date)
                Me(Me.tableCOMPROBANTES.FechaVencimientoColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property VendedorId() As Integer
            Get
                Try
                    Return CType(Me(Me.tableCOMPROBANTES.VendedorIdColumn), Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'VendedorId' de la tabla 'COMPROBANTES' es DBNull.", e)
                End Try
            End Get
            Set(value As Integer)
                Me(Me.tableCOMPROBANTES.VendedorIdColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property Estado() As Integer
            Get
                Return CType(Me(Me.tableCOMPROBANTES.EstadoColumn), Integer)
            End Get
            Set(value As Integer)
                Me(Me.tableCOMPROBANTES.EstadoColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property VentaBruta() As Decimal
            Get
                Return CType(Me(Me.tableCOMPROBANTES.VentaBrutaColumn), Decimal)
            End Get
            Set(value As Decimal)
                Me(Me.tableCOMPROBANTES.VentaBrutaColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property VentaConDescuentos() As Decimal
            Get
                Return CType(Me(Me.tableCOMPROBANTES.VentaConDescuentosColumn), Decimal)
            End Get
            Set(value As Decimal)
                Me(Me.tableCOMPROBANTES.VentaConDescuentosColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property ValorVenta() As Decimal
            Get
                Return CType(Me(Me.tableCOMPROBANTES.ValorVentaColumn), Decimal)
            End Get
            Set(value As Decimal)
                Me(Me.tableCOMPROBANTES.ValorVentaColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property PorcentajeIGV() As Decimal
            Get
                Return CType(Me(Me.tableCOMPROBANTES.PorcentajeIGVColumn), Decimal)
            End Get
            Set(value As Decimal)
                Me(Me.tableCOMPROBANTES.PorcentajeIGVColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property VentaNeta() As Decimal
            Get
                Return CType(Me(Me.tableCOMPROBANTES.VentaNetaColumn), Decimal)
            End Get
            Set(value As Decimal)
                Me(Me.tableCOMPROBANTES.VentaNetaColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property Observaciones() As String
            Get
                Try
                    Return CType(Me(Me.tableCOMPROBANTES.ObservacionesColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'Observaciones' de la tabla 'COMPROBANTES' es DBNull.", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tableCOMPROBANTES.ObservacionesColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property Anio() As Integer
            Get
                Try
                    Return CType(Me(Me.tableCOMPROBANTES.AnioColumn), Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'Anio' de la tabla 'COMPROBANTES' es DBNull.", e)
                End Try
            End Get
            Set(value As Integer)
                Me(Me.tableCOMPROBANTES.AnioColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property ValorVentaInafecto() As Decimal
            Get
                Return CType(Me(Me.tableCOMPROBANTES.ValorVentaInafectoColumn), Decimal)
            End Get
            Set(value As Decimal)
                Me(Me.tableCOMPROBANTES.ValorVentaInafectoColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property ValorVentaAfecto() As Decimal
            Get
                Return CType(Me(Me.tableCOMPROBANTES.ValorVentaAfectoColumn), Decimal)
            End Get
            Set(value As Decimal)
                Me(Me.tableCOMPROBANTES.ValorVentaAfectoColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property MontoIGV() As Decimal
            Get
                Return CType(Me(Me.tableCOMPROBANTES.MontoIGVColumn), Decimal)
            End Get
            Set(value As Decimal)
                Me(Me.tableCOMPROBANTES.MontoIGVColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property DocumentoReferenciaId() As Integer
            Get
                Try
                    Return CType(Me(Me.tableCOMPROBANTES.DocumentoReferenciaIdColumn), Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'DocumentoReferenciaId' de la tabla 'COMPROBANTES' es DBNu" & _
                            "ll.", e)
                End Try
            End Get
            Set(value As Integer)
                Me(Me.tableCOMPROBANTES.DocumentoReferenciaIdColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property FechaProceso() As Date
            Get
                Return CType(Me(Me.tableCOMPROBANTES.FechaProcesoColumn), Date)
            End Get
            Set(value As Date)
                Me(Me.tableCOMPROBANTES.FechaProcesoColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property NombreCliente() As String
            Get
                Return CType(Me(Me.tableCOMPROBANTES.NombreClienteColumn), String)
            End Get
            Set(value As String)
                Me(Me.tableCOMPROBANTES.NombreClienteColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property Direccion() As String
            Get
                Return CType(Me(Me.tableCOMPROBANTES.DireccionColumn), String)
            End Get
            Set(value As String)
                Me(Me.tableCOMPROBANTES.DireccionColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property Telefono() As String
            Get
                Return CType(Me(Me.tableCOMPROBANTES.TelefonoColumn), String)
            End Get
            Set(value As String)
                Me(Me.tableCOMPROBANTES.TelefonoColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property FechaAnulacion() As Date
            Get
                Try
                    Return CType(Me(Me.tableCOMPROBANTES.FechaAnulacionColumn), Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'FechaAnulacion' de la tabla 'COMPROBANTES' es DBNull.", e)
                End Try
            End Get
            Set(value As Date)
                Me(Me.tableCOMPROBANTES.FechaAnulacionColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property MotivoAnulacion() As String
            Get
                Return CType(Me(Me.tableCOMPROBANTES.MotivoAnulacionColumn), String)
            End Get
            Set(value As String)
                Me(Me.tableCOMPROBANTES.MotivoAnulacionColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property PrecioVenta() As Decimal
            Get
                Try
                    Return CType(Me(Me.tableCOMPROBANTES.PrecioVentaColumn), Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'PrecioVenta' de la tabla 'COMPROBANTES' es DBNull.", e)
                End Try
            End Get
            Set(value As Decimal)
                Me(Me.tableCOMPROBANTES.PrecioVentaColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property SerieClienteUnico() As Integer
            Get
                Return CType(Me(Me.tableCOMPROBANTES.SerieClienteUnicoColumn), Integer)
            End Get
            Set(value As Integer)
                Me(Me.tableCOMPROBANTES.SerieClienteUnicoColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsSerieIdNull() As Boolean
            Return Me.IsNull(Me.tableCOMPROBANTES.SerieIdColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetSerieIdNull()
            Me(Me.tableCOMPROBANTES.SerieIdColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsFormaPagoIdNull() As Boolean
            Return Me.IsNull(Me.tableCOMPROBANTES.FormaPagoIdColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetFormaPagoIdNull()
            Me(Me.tableCOMPROBANTES.FormaPagoIdColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsVendedorIdNull() As Boolean
            Return Me.IsNull(Me.tableCOMPROBANTES.VendedorIdColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetVendedorIdNull()
            Me(Me.tableCOMPROBANTES.VendedorIdColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsObservacionesNull() As Boolean
            Return Me.IsNull(Me.tableCOMPROBANTES.ObservacionesColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetObservacionesNull()
            Me(Me.tableCOMPROBANTES.ObservacionesColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsAnioNull() As Boolean
            Return Me.IsNull(Me.tableCOMPROBANTES.AnioColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetAnioNull()
            Me(Me.tableCOMPROBANTES.AnioColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsDocumentoReferenciaIdNull() As Boolean
            Return Me.IsNull(Me.tableCOMPROBANTES.DocumentoReferenciaIdColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetDocumentoReferenciaIdNull()
            Me(Me.tableCOMPROBANTES.DocumentoReferenciaIdColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsFechaAnulacionNull() As Boolean
            Return Me.IsNull(Me.tableCOMPROBANTES.FechaAnulacionColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetFechaAnulacionNull()
            Me(Me.tableCOMPROBANTES.FechaAnulacionColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsPrecioVentaNull() As Boolean
            Return Me.IsNull(Me.tableCOMPROBANTES.PrecioVentaColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetPrecioVentaNull()
            Me(Me.tableCOMPROBANTES.PrecioVentaColumn) = Global.System.Convert.DBNull
        End Sub
    End Class

    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class COMPROBANTES_DETRow
        Inherits Global.System.Data.DataRow

        Private tableCOMPROBANTES_DET As COMPROBANTES_DETDataTable

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableCOMPROBANTES_DET = CType(Me.Table, COMPROBANTES_DETDataTable)
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property ArticuloxComprobanteId() As Integer
            Get
                Return CType(Me(Me.tableCOMPROBANTES_DET.ArticuloxComprobanteIdColumn), Integer)
            End Get
            Set(value As Integer)
                Me(Me.tableCOMPROBANTES_DET.ArticuloxComprobanteIdColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property ComprobanteId() As Integer
            Get
                Return CType(Me(Me.tableCOMPROBANTES_DET.ComprobanteIdColumn), Integer)
            End Get
            Set(value As Integer)
                Me(Me.tableCOMPROBANTES_DET.ComprobanteIdColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property ArticuloId() As Integer
            Get
                Return CType(Me(Me.tableCOMPROBANTES_DET.ArticuloIdColumn), Integer)
            End Get
            Set(value As Integer)
                Me(Me.tableCOMPROBANTES_DET.ArticuloIdColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property UnidadId() As Integer
            Get
                Return CType(Me(Me.tableCOMPROBANTES_DET.UnidadIdColumn), Integer)
            End Get
            Set(value As Integer)
                Me(Me.tableCOMPROBANTES_DET.UnidadIdColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property Cantidad() As Decimal
            Get
                Return CType(Me(Me.tableCOMPROBANTES_DET.CantidadColumn), Decimal)
            End Get
            Set(value As Decimal)
                Me(Me.tableCOMPROBANTES_DET.CantidadColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property ValorUnitario() As Decimal
            Get
                Return CType(Me(Me.tableCOMPROBANTES_DET.ValorUnitarioColumn), Decimal)
            End Get
            Set(value As Decimal)
                Me(Me.tableCOMPROBANTES_DET.ValorUnitarioColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property VentaBruta() As Decimal
            Get
                Return CType(Me(Me.tableCOMPROBANTES_DET.VentaBrutaColumn), Decimal)
            End Get
            Set(value As Decimal)
                Me(Me.tableCOMPROBANTES_DET.VentaBrutaColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property PorcentajeDescuento() As Decimal
            Get
                Return CType(Me(Me.tableCOMPROBANTES_DET.PorcentajeDescuentoColumn), Decimal)
            End Get
            Set(value As Decimal)
                Me(Me.tableCOMPROBANTES_DET.PorcentajeDescuentoColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property VentaConDescuentos() As Decimal
            Get
                Return CType(Me(Me.tableCOMPROBANTES_DET.VentaConDescuentosColumn), Decimal)
            End Get
            Set(value As Decimal)
                Me(Me.tableCOMPROBANTES_DET.VentaConDescuentosColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property PorcentajeISC() As Decimal
            Get
                Return CType(Me(Me.tableCOMPROBANTES_DET.PorcentajeISCColumn), Decimal)
            End Get
            Set(value As Decimal)
                Me(Me.tableCOMPROBANTES_DET.PorcentajeISCColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property ValorVenta() As Decimal
            Get
                Return CType(Me(Me.tableCOMPROBANTES_DET.ValorVentaColumn), Decimal)
            End Get
            Set(value As Decimal)
                Me(Me.tableCOMPROBANTES_DET.ValorVentaColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property PorcentajeIGV() As Decimal
            Get
                Return CType(Me(Me.tableCOMPROBANTES_DET.PorcentajeIGVColumn), Decimal)
            End Get
            Set(value As Decimal)
                Me(Me.tableCOMPROBANTES_DET.PorcentajeIGVColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property PrecioUnitario() As Decimal
            Get
                Return CType(Me(Me.tableCOMPROBANTES_DET.PrecioUnitarioColumn), Decimal)
            End Get
            Set(value As Decimal)
                Me(Me.tableCOMPROBANTES_DET.PrecioUnitarioColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property PrecioVenta() As Decimal
            Get
                Return CType(Me(Me.tableCOMPROBANTES_DET.PrecioVentaColumn), Decimal)
            End Get
            Set(value As Decimal)
                Me(Me.tableCOMPROBANTES_DET.PrecioVentaColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property ValorVentaUnitario() As Decimal
            Get
                Return CType(Me(Me.tableCOMPROBANTES_DET.ValorVentaUnitarioColumn), Decimal)
            End Get
            Set(value As Decimal)
                Me(Me.tableCOMPROBANTES_DET.ValorVentaUnitarioColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property AlmacenId() As Integer
            Get
                Try
                    Return CType(Me(Me.tableCOMPROBANTES_DET.AlmacenIdColumn), Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'AlmacenId' de la tabla 'COMPROBANTES_DET' es DBNull.", e)
                End Try
            End Get
            Set(value As Integer)
                Me(Me.tableCOMPROBANTES_DET.AlmacenIdColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsAlmacenIdNull() As Boolean
            Return Me.IsNull(Me.tableCOMPROBANTES_DET.AlmacenIdColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetAlmacenIdNull()
            Me(Me.tableCOMPROBANTES_DET.AlmacenIdColumn) = Global.System.Convert.DBNull
        End Sub
    End Class

    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Public Class COMPROBANTESRowChangeEvent
        Inherits Global.System.EventArgs

        Private eventRow As COMPROBANTESRow

        Private eventAction As Global.System.Data.DataRowAction

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub New(ByVal row As COMPROBANTESRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New()
            Me.eventRow = row
            Me.eventAction = action
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property Row() As COMPROBANTESRow
            Get
                Return Me.eventRow
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class

    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Public Class COMPROBANTES_DETRowChangeEvent
        Inherits Global.System.EventArgs

        Private eventRow As COMPROBANTES_DETRow

        Private eventAction As Global.System.Data.DataRowAction

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub New(ByVal row As COMPROBANTES_DETRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New()
            Me.eventRow = row
            Me.eventAction = action
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property Row() As COMPROBANTES_DETRow
            Get
                Return Me.eventRow
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
End Class
