'------------------------------------------------------------------------------
' <auto-generated>
'     Este código fue generado por una herramienta.
'     Versión de runtime:4.0.30319.42000
'
'     Los cambios en este archivo podrían causar un comportamiento incorrecto y se perderán si
'     se vuelve a generar el código.
' </auto-generated>
'------------------------------------------------------------------------------

Option Strict Off
Option Explicit On



'''<summary>
'''Represents a strongly typed in-memory cache of data.
'''</summary>
<Global.System.Serializable(), _
 Global.System.ComponentModel.DesignerCategoryAttribute("code"), _
 Global.System.ComponentModel.ToolboxItem(True), _
 Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema"), _
 Global.System.Xml.Serialization.XmlRootAttribute("dsClientes"), _
 Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")> _
Partial Public Class dsClientes
    Inherits Global.System.Data.DataSet

    Private tableCLIENTES As CLIENTESDataTable

    Private tableCLIENTES_LISTA As CLIENTES_LISTADataTable

    Private tableCONSULTAR_DATOS_RUC As CONSULTAR_DATOS_RUCDataTable

    Private tableCONCAR_CLIENTES_OLD As CONCAR_CLIENTES_OLDDataTable

    Private tableCONCAR_CLIENTES As CONCAR_CLIENTESDataTable

    Private tableGESNET_CLIENTES As GESNET_CLIENTESDataTable

    Private tableCLIENTES_COMPROBANTES As CLIENTES_COMPROBANTESDataTable

    Private _schemaSerializationMode As Global.System.Data.SchemaSerializationMode = Global.System.Data.SchemaSerializationMode.IncludeSchema

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Public Sub New()
        MyBase.New()
        Me.BeginInit()
        Me.InitClass()
        Dim schemaChangedHandler As Global.System.ComponentModel.CollectionChangeEventHandler = AddressOf Me.SchemaChanged
        AddHandler MyBase.Tables.CollectionChanged, schemaChangedHandler
        AddHandler MyBase.Relations.CollectionChanged, schemaChangedHandler
        Me.EndInit()
    End Sub

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
        MyBase.New(info, context, False)
        If (Me.IsBinarySerialized(info, context) = True) Then
            Me.InitVars(False)
            Dim schemaChangedHandler1 As Global.System.ComponentModel.CollectionChangeEventHandler = AddressOf Me.SchemaChanged
            AddHandler Me.Tables.CollectionChanged, schemaChangedHandler1
            AddHandler Me.Relations.CollectionChanged, schemaChangedHandler1
            Return
        End If
        Dim strSchema As String = CType(info.GetValue("XmlSchema", GetType(String)), String)
        If (Me.DetermineSchemaSerializationMode(info, context) = Global.System.Data.SchemaSerializationMode.IncludeSchema) Then
            Dim ds As Global.System.Data.DataSet = New Global.System.Data.DataSet()
            ds.ReadXmlSchema(New Global.System.Xml.XmlTextReader(New Global.System.IO.StringReader(strSchema)))
            If (Not (ds.Tables("CLIENTES")) Is Nothing) Then
                MyBase.Tables.Add(New CLIENTESDataTable(ds.Tables("CLIENTES")))
            End If
            If (Not (ds.Tables("CLIENTES_LISTA")) Is Nothing) Then
                MyBase.Tables.Add(New CLIENTES_LISTADataTable(ds.Tables("CLIENTES_LISTA")))
            End If
            If (Not (ds.Tables("CONSULTAR_DATOS_RUC")) Is Nothing) Then
                MyBase.Tables.Add(New CONSULTAR_DATOS_RUCDataTable(ds.Tables("CONSULTAR_DATOS_RUC")))
            End If
            If (Not (ds.Tables("CONCAR_CLIENTES_OLD")) Is Nothing) Then
                MyBase.Tables.Add(New CONCAR_CLIENTES_OLDDataTable(ds.Tables("CONCAR_CLIENTES_OLD")))
            End If
            If (Not (ds.Tables("CONCAR_CLIENTES")) Is Nothing) Then
                MyBase.Tables.Add(New CONCAR_CLIENTESDataTable(ds.Tables("CONCAR_CLIENTES")))
            End If
            If (Not (ds.Tables("GESNET_CLIENTES")) Is Nothing) Then
                MyBase.Tables.Add(New GESNET_CLIENTESDataTable(ds.Tables("GESNET_CLIENTES")))
            End If
            If (Not (ds.Tables("CLIENTES_COMPROBANTES")) Is Nothing) Then
                MyBase.Tables.Add(New CLIENTES_COMPROBANTESDataTable(ds.Tables("CLIENTES_COMPROBANTES")))
            End If
            Me.DataSetName = ds.DataSetName
            Me.Prefix = ds.Prefix
            Me.Namespace = ds.Namespace
            Me.Locale = ds.Locale
            Me.CaseSensitive = ds.CaseSensitive
            Me.EnforceConstraints = ds.EnforceConstraints
            Me.Merge(ds, False, Global.System.Data.MissingSchemaAction.Add)
            Me.InitVars()
        Else
            Me.ReadXmlSchema(New Global.System.Xml.XmlTextReader(New Global.System.IO.StringReader(strSchema)))
        End If
        Me.GetSerializationData(info, context)
        Dim schemaChangedHandler As Global.System.ComponentModel.CollectionChangeEventHandler = AddressOf Me.SchemaChanged
        AddHandler MyBase.Tables.CollectionChanged, schemaChangedHandler
        AddHandler Me.Relations.CollectionChanged, schemaChangedHandler
    End Sub

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), _
     Global.System.ComponentModel.Browsable(False), _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)> _
    Public ReadOnly Property CLIENTES() As CLIENTESDataTable
        Get
            Return Me.tableCLIENTES
        End Get
    End Property

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), _
     Global.System.ComponentModel.Browsable(False), _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)> _
    Public ReadOnly Property CLIENTES_LISTA() As CLIENTES_LISTADataTable
        Get
            Return Me.tableCLIENTES_LISTA
        End Get
    End Property

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), _
     Global.System.ComponentModel.Browsable(False), _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)> _
    Public ReadOnly Property CONSULTAR_DATOS_RUC() As CONSULTAR_DATOS_RUCDataTable
        Get
            Return Me.tableCONSULTAR_DATOS_RUC
        End Get
    End Property

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), _
     Global.System.ComponentModel.Browsable(False), _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)> _
    Public ReadOnly Property CONCAR_CLIENTES_OLD() As CONCAR_CLIENTES_OLDDataTable
        Get
            Return Me.tableCONCAR_CLIENTES_OLD
        End Get
    End Property

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), _
     Global.System.ComponentModel.Browsable(False), _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)> _
    Public ReadOnly Property CONCAR_CLIENTES() As CONCAR_CLIENTESDataTable
        Get
            Return Me.tableCONCAR_CLIENTES
        End Get
    End Property

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), _
     Global.System.ComponentModel.Browsable(False), _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)> _
    Public ReadOnly Property GESNET_CLIENTES() As GESNET_CLIENTESDataTable
        Get
            Return Me.tableGESNET_CLIENTES
        End Get
    End Property

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), _
     Global.System.ComponentModel.Browsable(False), _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)> _
    Public ReadOnly Property CLIENTES_COMPROBANTES() As CLIENTES_COMPROBANTESDataTable
        Get
            Return Me.tableCLIENTES_COMPROBANTES
        End Get
    End Property

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), _
     Global.System.ComponentModel.BrowsableAttribute(True), _
     Global.System.ComponentModel.DesignerSerializationVisibilityAttribute(Global.System.ComponentModel.DesignerSerializationVisibility.Visible)> _
    Public Overrides Property SchemaSerializationMode() As Global.System.Data.SchemaSerializationMode
        Get
            Return Me._schemaSerializationMode
        End Get
        Set(value As Global.System.Data.SchemaSerializationMode)
            Me._schemaSerializationMode = value
        End Set
    End Property

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), _
     Global.System.ComponentModel.DesignerSerializationVisibilityAttribute(Global.System.ComponentModel.DesignerSerializationVisibility.Hidden)> _
    Public Shadows ReadOnly Property Tables() As Global.System.Data.DataTableCollection
        Get
            Return MyBase.Tables
        End Get
    End Property

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), _
     Global.System.ComponentModel.DesignerSerializationVisibilityAttribute(Global.System.ComponentModel.DesignerSerializationVisibility.Hidden)> _
    Public Shadows ReadOnly Property Relations() As Global.System.Data.DataRelationCollection
        Get
            Return MyBase.Relations
        End Get
    End Property

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Protected Overrides Sub InitializeDerivedDataSet()
        Me.BeginInit()
        Me.InitClass()
        Me.EndInit()
    End Sub

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Public Overrides Function Clone() As Global.System.Data.DataSet
        Dim cln As dsClientes = CType(MyBase.Clone, dsClientes)
        cln.InitVars()
        cln.SchemaSerializationMode = Me.SchemaSerializationMode
        Return cln
    End Function

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Protected Overrides Function ShouldSerializeTables() As Boolean
        Return False
    End Function

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Protected Overrides Function ShouldSerializeRelations() As Boolean
        Return False
    End Function

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Protected Overrides Sub ReadXmlSerializable(ByVal reader As Global.System.Xml.XmlReader)
        If (Me.DetermineSchemaSerializationMode(reader) = Global.System.Data.SchemaSerializationMode.IncludeSchema) Then
            Me.Reset()
            Dim ds As Global.System.Data.DataSet = New Global.System.Data.DataSet()
            ds.ReadXml(reader)
            If (Not (ds.Tables("CLIENTES")) Is Nothing) Then
                MyBase.Tables.Add(New CLIENTESDataTable(ds.Tables("CLIENTES")))
            End If
            If (Not (ds.Tables("CLIENTES_LISTA")) Is Nothing) Then
                MyBase.Tables.Add(New CLIENTES_LISTADataTable(ds.Tables("CLIENTES_LISTA")))
            End If
            If (Not (ds.Tables("CONSULTAR_DATOS_RUC")) Is Nothing) Then
                MyBase.Tables.Add(New CONSULTAR_DATOS_RUCDataTable(ds.Tables("CONSULTAR_DATOS_RUC")))
            End If
            If (Not (ds.Tables("CONCAR_CLIENTES_OLD")) Is Nothing) Then
                MyBase.Tables.Add(New CONCAR_CLIENTES_OLDDataTable(ds.Tables("CONCAR_CLIENTES_OLD")))
            End If
            If (Not (ds.Tables("CONCAR_CLIENTES")) Is Nothing) Then
                MyBase.Tables.Add(New CONCAR_CLIENTESDataTable(ds.Tables("CONCAR_CLIENTES")))
            End If
            If (Not (ds.Tables("GESNET_CLIENTES")) Is Nothing) Then
                MyBase.Tables.Add(New GESNET_CLIENTESDataTable(ds.Tables("GESNET_CLIENTES")))
            End If
            If (Not (ds.Tables("CLIENTES_COMPROBANTES")) Is Nothing) Then
                MyBase.Tables.Add(New CLIENTES_COMPROBANTESDataTable(ds.Tables("CLIENTES_COMPROBANTES")))
            End If
            Me.DataSetName = ds.DataSetName
            Me.Prefix = ds.Prefix
            Me.Namespace = ds.Namespace
            Me.Locale = ds.Locale
            Me.CaseSensitive = ds.CaseSensitive
            Me.EnforceConstraints = ds.EnforceConstraints
            Me.Merge(ds, False, Global.System.Data.MissingSchemaAction.Add)
            Me.InitVars()
        Else
            Me.ReadXml(reader)
            Me.InitVars()
        End If
    End Sub

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Protected Overrides Function GetSchemaSerializable() As Global.System.Xml.Schema.XmlSchema
        Dim stream As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
        Me.WriteXmlSchema(New Global.System.Xml.XmlTextWriter(stream, Nothing))
        stream.Position = 0
        Return Global.System.Xml.Schema.XmlSchema.Read(New Global.System.Xml.XmlTextReader(stream), Nothing)
    End Function

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Friend Overloads Sub InitVars()
        Me.InitVars(True)
    End Sub

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Friend Overloads Sub InitVars(ByVal initTable As Boolean)
        Me.tableCLIENTES = CType(MyBase.Tables("CLIENTES"), CLIENTESDataTable)
        If (initTable = True) Then
            If (Not (Me.tableCLIENTES) Is Nothing) Then
                Me.tableCLIENTES.InitVars()
            End If
        End If
        Me.tableCLIENTES_LISTA = CType(MyBase.Tables("CLIENTES_LISTA"), CLIENTES_LISTADataTable)
        If (initTable = True) Then
            If (Not (Me.tableCLIENTES_LISTA) Is Nothing) Then
                Me.tableCLIENTES_LISTA.InitVars()
            End If
        End If
        Me.tableCONSULTAR_DATOS_RUC = CType(MyBase.Tables("CONSULTAR_DATOS_RUC"), CONSULTAR_DATOS_RUCDataTable)
        If (initTable = True) Then
            If (Not (Me.tableCONSULTAR_DATOS_RUC) Is Nothing) Then
                Me.tableCONSULTAR_DATOS_RUC.InitVars()
            End If
        End If
        Me.tableCONCAR_CLIENTES_OLD = CType(MyBase.Tables("CONCAR_CLIENTES_OLD"), CONCAR_CLIENTES_OLDDataTable)
        If (initTable = True) Then
            If (Not (Me.tableCONCAR_CLIENTES_OLD) Is Nothing) Then
                Me.tableCONCAR_CLIENTES_OLD.InitVars()
            End If
        End If
        Me.tableCONCAR_CLIENTES = CType(MyBase.Tables("CONCAR_CLIENTES"), CONCAR_CLIENTESDataTable)
        If (initTable = True) Then
            If (Not (Me.tableCONCAR_CLIENTES) Is Nothing) Then
                Me.tableCONCAR_CLIENTES.InitVars()
            End If
        End If
        Me.tableGESNET_CLIENTES = CType(MyBase.Tables("GESNET_CLIENTES"), GESNET_CLIENTESDataTable)
        If (initTable = True) Then
            If (Not (Me.tableGESNET_CLIENTES) Is Nothing) Then
                Me.tableGESNET_CLIENTES.InitVars()
            End If
        End If
        Me.tableCLIENTES_COMPROBANTES = CType(MyBase.Tables("CLIENTES_COMPROBANTES"), CLIENTES_COMPROBANTESDataTable)
        If (initTable = True) Then
            If (Not (Me.tableCLIENTES_COMPROBANTES) Is Nothing) Then
                Me.tableCLIENTES_COMPROBANTES.InitVars()
            End If
        End If
    End Sub

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Private Sub InitClass()
        Me.DataSetName = "dsClientes"
        Me.Prefix = ""
        Me.Namespace = "http://tempuri.org/dsClientes.xsd"
        Me.EnforceConstraints = True
        Me.SchemaSerializationMode = Global.System.Data.SchemaSerializationMode.IncludeSchema
        Me.tableCLIENTES = New CLIENTESDataTable()
        MyBase.Tables.Add(Me.tableCLIENTES)
        Me.tableCLIENTES_LISTA = New CLIENTES_LISTADataTable()
        MyBase.Tables.Add(Me.tableCLIENTES_LISTA)
        Me.tableCONSULTAR_DATOS_RUC = New CONSULTAR_DATOS_RUCDataTable()
        MyBase.Tables.Add(Me.tableCONSULTAR_DATOS_RUC)
        Me.tableCONCAR_CLIENTES_OLD = New CONCAR_CLIENTES_OLDDataTable()
        MyBase.Tables.Add(Me.tableCONCAR_CLIENTES_OLD)
        Me.tableCONCAR_CLIENTES = New CONCAR_CLIENTESDataTable()
        MyBase.Tables.Add(Me.tableCONCAR_CLIENTES)
        Me.tableGESNET_CLIENTES = New GESNET_CLIENTESDataTable()
        MyBase.Tables.Add(Me.tableGESNET_CLIENTES)
        Me.tableCLIENTES_COMPROBANTES = New CLIENTES_COMPROBANTESDataTable()
        MyBase.Tables.Add(Me.tableCLIENTES_COMPROBANTES)
    End Sub

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Private Function ShouldSerializeCLIENTES() As Boolean
        Return False
    End Function

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Private Function ShouldSerializeCLIENTES_LISTA() As Boolean
        Return False
    End Function

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Private Function ShouldSerializeCONSULTAR_DATOS_RUC() As Boolean
        Return False
    End Function

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Private Function ShouldSerializeCONCAR_CLIENTES_OLD() As Boolean
        Return False
    End Function

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Private Function ShouldSerializeCONCAR_CLIENTES() As Boolean
        Return False
    End Function

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Private Function ShouldSerializeGESNET_CLIENTES() As Boolean
        Return False
    End Function

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Private Function ShouldSerializeCLIENTES_COMPROBANTES() As Boolean
        Return False
    End Function

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Private Sub SchemaChanged(ByVal sender As Object, ByVal e As Global.System.ComponentModel.CollectionChangeEventArgs)
        If (e.Action = Global.System.ComponentModel.CollectionChangeAction.Remove) Then
            Me.InitVars()
        End If
    End Sub

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Public Shared Function GetTypedDataSetSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
        Dim ds As dsClientes = New dsClientes()
        Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
        Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
        Dim any As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
        any.Namespace = ds.Namespace
        sequence.Items.Add(any)
        type.Particle = sequence
        Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
        If xs.Contains(dsSchema.TargetNamespace) Then
            Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
            Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
            Try
                Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                dsSchema.Write(s1)
                Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                Do While schemas.MoveNext
                    schema = CType(schemas.Current, Global.System.Xml.Schema.XmlSchema)
                    s2.SetLength(0)
                    schema.Write(s2)
                    If (s1.Length = s2.Length) Then
                        s1.Position = 0
                        s2.Position = 0

                        Do While ((s1.Position <> s1.Length) _
                                    AndAlso (s1.ReadByte = s2.ReadByte))


                        Loop
                        If (s1.Position = s1.Length) Then
                            Return type
                        End If
                    End If

                Loop
            Finally
                If (Not (s1) Is Nothing) Then
                    s1.Close()
                End If
                If (Not (s2) Is Nothing) Then
                    s2.Close()
                End If
            End Try
        End If
        xs.Add(dsSchema)
        Return type
    End Function

    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Public Delegate Sub CLIENTESRowChangeEventHandler(ByVal sender As Object, ByVal e As CLIENTESRowChangeEvent)

    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Public Delegate Sub CLIENTES_LISTARowChangeEventHandler(ByVal sender As Object, ByVal e As CLIENTES_LISTARowChangeEvent)

    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Public Delegate Sub CONSULTAR_DATOS_RUCRowChangeEventHandler(ByVal sender As Object, ByVal e As CONSULTAR_DATOS_RUCRowChangeEvent)

    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Public Delegate Sub CONCAR_CLIENTES_OLDRowChangeEventHandler(ByVal sender As Object, ByVal e As CONCAR_CLIENTES_OLDRowChangeEvent)

    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Public Delegate Sub CONCAR_CLIENTESRowChangeEventHandler(ByVal sender As Object, ByVal e As CONCAR_CLIENTESRowChangeEvent)

    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Public Delegate Sub GESNET_CLIENTESRowChangeEventHandler(ByVal sender As Object, ByVal e As GESNET_CLIENTESRowChangeEvent)

    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Public Delegate Sub CLIENTES_COMPROBANTESRowChangeEventHandler(ByVal sender As Object, ByVal e As CLIENTES_COMPROBANTESRowChangeEvent)

    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(), _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")> _
    Partial Public Class CLIENTESDataTable
        Inherits Global.System.Data.TypedTableBase(Of CLIENTESRow)

        Private columnEMPRESA As Global.System.Data.DataColumn

        Private columnCUENTA_COMERCIAL As Global.System.Data.DataColumn

        Private columnRAZON_SOCIAL As Global.System.Data.DataColumn

        Private columnPREFIJO As Global.System.Data.DataColumn

        Private columnDOMICILIO As Global.System.Data.DataColumn

        Private columnCODIGO_POSTAL As Global.System.Data.DataColumn

        Private columnTELEFONO As Global.System.Data.DataColumn

        Private columnCELULAR As Global.System.Data.DataColumn

        Private columnEMAIL_CONTACTO As Global.System.Data.DataColumn

        Private columnEMAIL_FACTURACION As Global.System.Data.DataColumn

        Private columnPAGINA_WEB As Global.System.Data.DataColumn

        Private columnCONTACTO_VENTA As Global.System.Data.DataColumn

        Private columnCONTACTO_COMPRA As Global.System.Data.DataColumn

        Private columnTIPO_MONEDA As Global.System.Data.DataColumn

        Private columnINDICA_NO_DOMICILIADO As Global.System.Data.DataColumn

        Private columnCONDICION_PAGO As Global.System.Data.DataColumn

        Private columnTIPO_PAGO As Global.System.Data.DataColumn

        Private columnEXIGE_ORDEN_COMPRA As Global.System.Data.DataColumn

        Private columnEXIGE_ORDEN_PAGO As Global.System.Data.DataColumn

        Private columnEXIGE_ACTA_CONFORMIDAD As Global.System.Data.DataColumn

        Private columnUSUARIO_WEB As Global.System.Data.DataColumn

        Private columnCLAVE_WEB As Global.System.Data.DataColumn

        Private columnCOMENTARIO As Global.System.Data.DataColumn

        Private columnESTADO As Global.System.Data.DataColumn

        Private columnUSUARIO_REGISTRO As Global.System.Data.DataColumn

        Private columnFECHA_REGISTRO As Global.System.Data.DataColumn

        Private columnUSUARIO_MODIFICA As Global.System.Data.DataColumn

        Private columnFECHA_MODIFICA As Global.System.Data.DataColumn

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub New()
            MyBase.New()
            Me.TableName = "CLIENTES"
            Me.BeginInit()
            Me.InitClass()
            Me.EndInit()
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New()
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars()
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property EMPRESAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnEMPRESA
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property CUENTA_COMERCIALColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCUENTA_COMERCIAL
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property RAZON_SOCIALColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnRAZON_SOCIAL
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property PREFIJOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPREFIJO
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property DOMICILIOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDOMICILIO
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property CODIGO_POSTALColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCODIGO_POSTAL
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property TELEFONOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTELEFONO
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property CELULARColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCELULAR
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property EMAIL_CONTACTOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnEMAIL_CONTACTO
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property EMAIL_FACTURACIONColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnEMAIL_FACTURACION
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property PAGINA_WEBColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPAGINA_WEB
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property CONTACTO_VENTAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCONTACTO_VENTA
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property CONTACTO_COMPRAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCONTACTO_COMPRA
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property TIPO_MONEDAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTIPO_MONEDA
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property INDICA_NO_DOMICILIADOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnINDICA_NO_DOMICILIADO
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property CONDICION_PAGOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCONDICION_PAGO
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property TIPO_PAGOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTIPO_PAGO
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property EXIGE_ORDEN_COMPRAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnEXIGE_ORDEN_COMPRA
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property EXIGE_ORDEN_PAGOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnEXIGE_ORDEN_PAGO
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property EXIGE_ACTA_CONFORMIDADColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnEXIGE_ACTA_CONFORMIDAD
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property USUARIO_WEBColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnUSUARIO_WEB
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property CLAVE_WEBColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCLAVE_WEB
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property COMENTARIOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCOMENTARIO
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property ESTADOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnESTADO
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property USUARIO_REGISTROColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnUSUARIO_REGISTRO
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property FECHA_REGISTROColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnFECHA_REGISTRO
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property USUARIO_MODIFICAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnUSUARIO_MODIFICA
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property FECHA_MODIFICAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnFECHA_MODIFICA
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), _
         Global.System.ComponentModel.Browsable(False)> _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Default Public ReadOnly Property Item(ByVal index As Integer) As CLIENTESRow
            Get
                Return CType(Me.Rows(index), CLIENTESRow)
            End Get
        End Property

        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Event CLIENTESRowChanging As CLIENTESRowChangeEventHandler

        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Event CLIENTESRowChanged As CLIENTESRowChangeEventHandler

        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Event CLIENTESRowDeleting As CLIENTESRowChangeEventHandler

        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Event CLIENTESRowDeleted As CLIENTESRowChangeEventHandler

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Overloads Sub AddCLIENTESRow(ByVal row As CLIENTESRow)
            Me.Rows.Add(row)
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Overloads Function AddCLIENTESRow( _
                    ByVal EMPRESA As String, _
                    ByVal CUENTA_COMERCIAL As String, _
                    ByVal RAZON_SOCIAL As String, _
                    ByVal PREFIJO As String, _
                    ByVal DOMICILIO As String, _
                    ByVal CODIGO_POSTAL As String, _
                    ByVal TELEFONO As String, _
                    ByVal CELULAR As String, _
                    ByVal EMAIL_CONTACTO As String, _
                    ByVal EMAIL_FACTURACION As String, _
                    ByVal PAGINA_WEB As String, _
                    ByVal CONTACTO_VENTA As String, _
                    ByVal CONTACTO_COMPRA As String, _
                    ByVal TIPO_MONEDA As String, _
                    ByVal INDICA_NO_DOMICILIADO As String, _
                    ByVal CONDICION_PAGO As String, _
                    ByVal TIPO_PAGO As String, _
                    ByVal EXIGE_ORDEN_COMPRA As String, _
                    ByVal EXIGE_ORDEN_PAGO As String, _
                    ByVal EXIGE_ACTA_CONFORMIDAD As String, _
                    ByVal USUARIO_WEB As String, _
                    ByVal CLAVE_WEB As String, _
                    ByVal COMENTARIO As String, _
                    ByVal ESTADO As String, _
                    ByVal USUARIO_REGISTRO As String, _
                    ByVal FECHA_REGISTRO As Date, _
                    ByVal USUARIO_MODIFICA As String, _
                    ByVal FECHA_MODIFICA As Date) As CLIENTESRow
            Dim rowCLIENTESRow As CLIENTESRow = CType(Me.NewRow, CLIENTESRow)
            Dim columnValuesArray() As Object = New Object() {EMPRESA, CUENTA_COMERCIAL, RAZON_SOCIAL, PREFIJO, DOMICILIO, CODIGO_POSTAL, TELEFONO, CELULAR, EMAIL_CONTACTO, EMAIL_FACTURACION, PAGINA_WEB, CONTACTO_VENTA, CONTACTO_COMPRA, TIPO_MONEDA, INDICA_NO_DOMICILIADO, CONDICION_PAGO, TIPO_PAGO, EXIGE_ORDEN_COMPRA, EXIGE_ORDEN_PAGO, EXIGE_ACTA_CONFORMIDAD, USUARIO_WEB, CLAVE_WEB, COMENTARIO, ESTADO, USUARIO_REGISTRO, FECHA_REGISTRO, USUARIO_MODIFICA, FECHA_MODIFICA}
            rowCLIENTESRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowCLIENTESRow)
            Return rowCLIENTESRow
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function FindByEMPRESACUENTA_COMERCIAL(ByVal EMPRESA As String, ByVal CUENTA_COMERCIAL As String) As CLIENTESRow
            Return CType(Me.Rows.Find(New Object() {EMPRESA, CUENTA_COMERCIAL}), CLIENTESRow)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As CLIENTESDataTable = CType(MyBase.Clone, CLIENTESDataTable)
            cln.InitVars()
            Return cln
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New CLIENTESDataTable()
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Friend Sub InitVars()
            Me.columnEMPRESA = MyBase.Columns("EMPRESA")
            Me.columnCUENTA_COMERCIAL = MyBase.Columns("CUENTA_COMERCIAL")
            Me.columnRAZON_SOCIAL = MyBase.Columns("RAZON_SOCIAL")
            Me.columnPREFIJO = MyBase.Columns("PREFIJO")
            Me.columnDOMICILIO = MyBase.Columns("DOMICILIO")
            Me.columnCODIGO_POSTAL = MyBase.Columns("CODIGO_POSTAL")
            Me.columnTELEFONO = MyBase.Columns("TELEFONO")
            Me.columnCELULAR = MyBase.Columns("CELULAR")
            Me.columnEMAIL_CONTACTO = MyBase.Columns("EMAIL_CONTACTO")
            Me.columnEMAIL_FACTURACION = MyBase.Columns("EMAIL_FACTURACION")
            Me.columnPAGINA_WEB = MyBase.Columns("PAGINA_WEB")
            Me.columnCONTACTO_VENTA = MyBase.Columns("CONTACTO_VENTA")
            Me.columnCONTACTO_COMPRA = MyBase.Columns("CONTACTO_COMPRA")
            Me.columnTIPO_MONEDA = MyBase.Columns("TIPO_MONEDA")
            Me.columnINDICA_NO_DOMICILIADO = MyBase.Columns("INDICA_NO_DOMICILIADO")
            Me.columnCONDICION_PAGO = MyBase.Columns("CONDICION_PAGO")
            Me.columnTIPO_PAGO = MyBase.Columns("TIPO_PAGO")
            Me.columnEXIGE_ORDEN_COMPRA = MyBase.Columns("EXIGE_ORDEN_COMPRA")
            Me.columnEXIGE_ORDEN_PAGO = MyBase.Columns("EXIGE_ORDEN_PAGO")
            Me.columnEXIGE_ACTA_CONFORMIDAD = MyBase.Columns("EXIGE_ACTA_CONFORMIDAD")
            Me.columnUSUARIO_WEB = MyBase.Columns("USUARIO_WEB")
            Me.columnCLAVE_WEB = MyBase.Columns("CLAVE_WEB")
            Me.columnCOMENTARIO = MyBase.Columns("COMENTARIO")
            Me.columnESTADO = MyBase.Columns("ESTADO")
            Me.columnUSUARIO_REGISTRO = MyBase.Columns("USUARIO_REGISTRO")
            Me.columnFECHA_REGISTRO = MyBase.Columns("FECHA_REGISTRO")
            Me.columnUSUARIO_MODIFICA = MyBase.Columns("USUARIO_MODIFICA")
            Me.columnFECHA_MODIFICA = MyBase.Columns("FECHA_MODIFICA")
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Private Sub InitClass()
            Me.columnEMPRESA = New Global.System.Data.DataColumn("EMPRESA", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnEMPRESA)
            Me.columnCUENTA_COMERCIAL = New Global.System.Data.DataColumn("CUENTA_COMERCIAL", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCUENTA_COMERCIAL)
            Me.columnRAZON_SOCIAL = New Global.System.Data.DataColumn("RAZON_SOCIAL", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRAZON_SOCIAL)
            Me.columnPREFIJO = New Global.System.Data.DataColumn("PREFIJO", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPREFIJO)
            Me.columnDOMICILIO = New Global.System.Data.DataColumn("DOMICILIO", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDOMICILIO)
            Me.columnCODIGO_POSTAL = New Global.System.Data.DataColumn("CODIGO_POSTAL", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCODIGO_POSTAL)
            Me.columnTELEFONO = New Global.System.Data.DataColumn("TELEFONO", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTELEFONO)
            Me.columnCELULAR = New Global.System.Data.DataColumn("CELULAR", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCELULAR)
            Me.columnEMAIL_CONTACTO = New Global.System.Data.DataColumn("EMAIL_CONTACTO", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnEMAIL_CONTACTO)
            Me.columnEMAIL_FACTURACION = New Global.System.Data.DataColumn("EMAIL_FACTURACION", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnEMAIL_FACTURACION)
            Me.columnPAGINA_WEB = New Global.System.Data.DataColumn("PAGINA_WEB", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPAGINA_WEB)
            Me.columnCONTACTO_VENTA = New Global.System.Data.DataColumn("CONTACTO_VENTA", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCONTACTO_VENTA)
            Me.columnCONTACTO_COMPRA = New Global.System.Data.DataColumn("CONTACTO_COMPRA", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCONTACTO_COMPRA)
            Me.columnTIPO_MONEDA = New Global.System.Data.DataColumn("TIPO_MONEDA", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTIPO_MONEDA)
            Me.columnINDICA_NO_DOMICILIADO = New Global.System.Data.DataColumn("INDICA_NO_DOMICILIADO", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnINDICA_NO_DOMICILIADO)
            Me.columnCONDICION_PAGO = New Global.System.Data.DataColumn("CONDICION_PAGO", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCONDICION_PAGO)
            Me.columnTIPO_PAGO = New Global.System.Data.DataColumn("TIPO_PAGO", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTIPO_PAGO)
            Me.columnEXIGE_ORDEN_COMPRA = New Global.System.Data.DataColumn("EXIGE_ORDEN_COMPRA", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnEXIGE_ORDEN_COMPRA)
            Me.columnEXIGE_ORDEN_PAGO = New Global.System.Data.DataColumn("EXIGE_ORDEN_PAGO", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnEXIGE_ORDEN_PAGO)
            Me.columnEXIGE_ACTA_CONFORMIDAD = New Global.System.Data.DataColumn("EXIGE_ACTA_CONFORMIDAD", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnEXIGE_ACTA_CONFORMIDAD)
            Me.columnUSUARIO_WEB = New Global.System.Data.DataColumn("USUARIO_WEB", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnUSUARIO_WEB)
            Me.columnCLAVE_WEB = New Global.System.Data.DataColumn("CLAVE_WEB", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCLAVE_WEB)
            Me.columnCOMENTARIO = New Global.System.Data.DataColumn("COMENTARIO", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCOMENTARIO)
            Me.columnESTADO = New Global.System.Data.DataColumn("ESTADO", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnESTADO)
            Me.columnUSUARIO_REGISTRO = New Global.System.Data.DataColumn("USUARIO_REGISTRO", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnUSUARIO_REGISTRO)
            Me.columnFECHA_REGISTRO = New Global.System.Data.DataColumn("FECHA_REGISTRO", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFECHA_REGISTRO)
            Me.columnUSUARIO_MODIFICA = New Global.System.Data.DataColumn("USUARIO_MODIFICA", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnUSUARIO_MODIFICA)
            Me.columnFECHA_MODIFICA = New Global.System.Data.DataColumn("FECHA_MODIFICA", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFECHA_MODIFICA)
            Me.Constraints.Add(New Global.System.Data.UniqueConstraint("Constraint1", New Global.System.Data.DataColumn() {Me.columnEMPRESA, Me.columnCUENTA_COMERCIAL}, True))
            Me.columnEMPRESA.AllowDBNull = False
            Me.columnEMPRESA.MaxLength = 3
            Me.columnCUENTA_COMERCIAL.AllowDBNull = False
            Me.columnCUENTA_COMERCIAL.MaxLength = 18
            Me.columnRAZON_SOCIAL.AllowDBNull = False
            Me.columnRAZON_SOCIAL.MaxLength = 100
            Me.columnPREFIJO.AllowDBNull = False
            Me.columnPREFIJO.MaxLength = 5
            Me.columnDOMICILIO.AllowDBNull = False
            Me.columnDOMICILIO.MaxLength = 150
            Me.columnCODIGO_POSTAL.AllowDBNull = False
            Me.columnCODIGO_POSTAL.MaxLength = 10
            Me.columnTELEFONO.AllowDBNull = False
            Me.columnTELEFONO.MaxLength = 20
            Me.columnCELULAR.AllowDBNull = False
            Me.columnCELULAR.MaxLength = 20
            Me.columnEMAIL_CONTACTO.AllowDBNull = False
            Me.columnEMAIL_CONTACTO.MaxLength = 70
            Me.columnEMAIL_FACTURACION.AllowDBNull = False
            Me.columnEMAIL_FACTURACION.MaxLength = 70
            Me.columnPAGINA_WEB.AllowDBNull = False
            Me.columnPAGINA_WEB.MaxLength = 70
            Me.columnCONTACTO_VENTA.AllowDBNull = False
            Me.columnCONTACTO_VENTA.MaxLength = 100
            Me.columnCONTACTO_COMPRA.AllowDBNull = False
            Me.columnCONTACTO_COMPRA.MaxLength = 100
            Me.columnTIPO_MONEDA.AllowDBNull = False
            Me.columnTIPO_MONEDA.MaxLength = 1
            Me.columnINDICA_NO_DOMICILIADO.AllowDBNull = False
            Me.columnINDICA_NO_DOMICILIADO.MaxLength = 2
            Me.columnCONDICION_PAGO.AllowDBNull = False
            Me.columnCONDICION_PAGO.MaxLength = 2
            Me.columnTIPO_PAGO.AllowDBNull = False
            Me.columnTIPO_PAGO.MaxLength = 3
            Me.columnEXIGE_ORDEN_COMPRA.AllowDBNull = False
            Me.columnEXIGE_ORDEN_COMPRA.MaxLength = 2
            Me.columnEXIGE_ORDEN_PAGO.AllowDBNull = False
            Me.columnEXIGE_ORDEN_PAGO.MaxLength = 2
            Me.columnEXIGE_ACTA_CONFORMIDAD.AllowDBNull = False
            Me.columnEXIGE_ACTA_CONFORMIDAD.MaxLength = 2
            Me.columnUSUARIO_WEB.AllowDBNull = False
            Me.columnUSUARIO_WEB.MaxLength = 70
            Me.columnCLAVE_WEB.AllowDBNull = False
            Me.columnCLAVE_WEB.MaxLength = 15
            Me.columnCOMENTARIO.AllowDBNull = False
            Me.columnCOMENTARIO.MaxLength = 150
            Me.columnESTADO.MaxLength = 1
            Me.columnUSUARIO_REGISTRO.AllowDBNull = False
            Me.columnUSUARIO_REGISTRO.MaxLength = 20
            Me.columnFECHA_REGISTRO.AllowDBNull = False
            Me.columnUSUARIO_MODIFICA.MaxLength = 20
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function NewCLIENTESRow() As CLIENTESRow
            Return CType(Me.NewRow, CLIENTESRow)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New CLIENTESRow(builder)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(CLIENTESRow)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.CLIENTESRowChangedEvent) Is Nothing) Then
                RaiseEvent CLIENTESRowChanged(Me, New CLIENTESRowChangeEvent(CType(e.Row, CLIENTESRow), e.Action))
            End If
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.CLIENTESRowChangingEvent) Is Nothing) Then
                RaiseEvent CLIENTESRowChanging(Me, New CLIENTESRowChangeEvent(CType(e.Row, CLIENTESRow), e.Action))
            End If
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.CLIENTESRowDeletedEvent) Is Nothing) Then
                RaiseEvent CLIENTESRowDeleted(Me, New CLIENTESRowChangeEvent(CType(e.Row, CLIENTESRow), e.Action))
            End If
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.CLIENTESRowDeletingEvent) Is Nothing) Then
                RaiseEvent CLIENTESRowDeleting(Me, New CLIENTESRowChangeEvent(CType(e.Row, CLIENTESRow), e.Action))
            End If
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub RemoveCLIENTESRow(ByVal row As CLIENTESRow)
            Me.Rows.Remove(row)
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As dsClientes = New dsClientes()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "CLIENTESDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current, Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0

                            Do While ((s1.Position <> s1.Length) _
                                        AndAlso (s1.ReadByte = s2.ReadByte))


                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If

                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close()
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close()
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class

    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(), _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")> _
    Partial Public Class CLIENTES_LISTADataTable
        Inherits Global.System.Data.TypedTableBase(Of CLIENTES_LISTARow)

        Private columnCUENTA_COMERCIAL As Global.System.Data.DataColumn

        Private columnRAZON_SOCIAL As Global.System.Data.DataColumn

        Private columnPREFIJO As Global.System.Data.DataColumn

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub New()
            MyBase.New()
            Me.TableName = "CLIENTES_LISTA"
            Me.BeginInit()
            Me.InitClass()
            Me.EndInit()
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New()
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars()
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property CUENTA_COMERCIALColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCUENTA_COMERCIAL
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property RAZON_SOCIALColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnRAZON_SOCIAL
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property PREFIJOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPREFIJO
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), _
         Global.System.ComponentModel.Browsable(False)> _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Default Public ReadOnly Property Item(ByVal index As Integer) As CLIENTES_LISTARow
            Get
                Return CType(Me.Rows(index), CLIENTES_LISTARow)
            End Get
        End Property

        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Event CLIENTES_LISTARowChanging As CLIENTES_LISTARowChangeEventHandler

        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Event CLIENTES_LISTARowChanged As CLIENTES_LISTARowChangeEventHandler

        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Event CLIENTES_LISTARowDeleting As CLIENTES_LISTARowChangeEventHandler

        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Event CLIENTES_LISTARowDeleted As CLIENTES_LISTARowChangeEventHandler

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Overloads Sub AddCLIENTES_LISTARow(ByVal row As CLIENTES_LISTARow)
            Me.Rows.Add(row)
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Overloads Function AddCLIENTES_LISTARow(ByVal CUENTA_COMERCIAL As String, ByVal RAZON_SOCIAL As String, ByVal PREFIJO As String) As CLIENTES_LISTARow
            Dim rowCLIENTES_LISTARow As CLIENTES_LISTARow = CType(Me.NewRow, CLIENTES_LISTARow)
            Dim columnValuesArray() As Object = New Object() {CUENTA_COMERCIAL, RAZON_SOCIAL, PREFIJO}
            rowCLIENTES_LISTARow.ItemArray = columnValuesArray
            Me.Rows.Add(rowCLIENTES_LISTARow)
            Return rowCLIENTES_LISTARow
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function FindByCUENTA_COMERCIAL(ByVal CUENTA_COMERCIAL As String) As CLIENTES_LISTARow
            Return CType(Me.Rows.Find(New Object() {CUENTA_COMERCIAL}), CLIENTES_LISTARow)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As CLIENTES_LISTADataTable = CType(MyBase.Clone, CLIENTES_LISTADataTable)
            cln.InitVars()
            Return cln
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New CLIENTES_LISTADataTable()
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Friend Sub InitVars()
            Me.columnCUENTA_COMERCIAL = MyBase.Columns("CUENTA_COMERCIAL")
            Me.columnRAZON_SOCIAL = MyBase.Columns("RAZON_SOCIAL")
            Me.columnPREFIJO = MyBase.Columns("PREFIJO")
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Private Sub InitClass()
            Me.columnCUENTA_COMERCIAL = New Global.System.Data.DataColumn("CUENTA_COMERCIAL", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCUENTA_COMERCIAL)
            Me.columnRAZON_SOCIAL = New Global.System.Data.DataColumn("RAZON_SOCIAL", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRAZON_SOCIAL)
            Me.columnPREFIJO = New Global.System.Data.DataColumn("PREFIJO", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPREFIJO)
            Me.Constraints.Add(New Global.System.Data.UniqueConstraint("Constraint1", New Global.System.Data.DataColumn() {Me.columnCUENTA_COMERCIAL}, True))
            Me.columnCUENTA_COMERCIAL.AllowDBNull = False
            Me.columnCUENTA_COMERCIAL.Unique = True
            Me.columnCUENTA_COMERCIAL.MaxLength = 18
            Me.columnRAZON_SOCIAL.AllowDBNull = False
            Me.columnRAZON_SOCIAL.MaxLength = 100
            Me.columnPREFIJO.MaxLength = 5
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function NewCLIENTES_LISTARow() As CLIENTES_LISTARow
            Return CType(Me.NewRow, CLIENTES_LISTARow)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New CLIENTES_LISTARow(builder)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(CLIENTES_LISTARow)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.CLIENTES_LISTARowChangedEvent) Is Nothing) Then
                RaiseEvent CLIENTES_LISTARowChanged(Me, New CLIENTES_LISTARowChangeEvent(CType(e.Row, CLIENTES_LISTARow), e.Action))
            End If
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.CLIENTES_LISTARowChangingEvent) Is Nothing) Then
                RaiseEvent CLIENTES_LISTARowChanging(Me, New CLIENTES_LISTARowChangeEvent(CType(e.Row, CLIENTES_LISTARow), e.Action))
            End If
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.CLIENTES_LISTARowDeletedEvent) Is Nothing) Then
                RaiseEvent CLIENTES_LISTARowDeleted(Me, New CLIENTES_LISTARowChangeEvent(CType(e.Row, CLIENTES_LISTARow), e.Action))
            End If
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.CLIENTES_LISTARowDeletingEvent) Is Nothing) Then
                RaiseEvent CLIENTES_LISTARowDeleting(Me, New CLIENTES_LISTARowChangeEvent(CType(e.Row, CLIENTES_LISTARow), e.Action))
            End If
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub RemoveCLIENTES_LISTARow(ByVal row As CLIENTES_LISTARow)
            Me.Rows.Remove(row)
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As dsClientes = New dsClientes()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "CLIENTES_LISTADataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current, Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0

                            Do While ((s1.Position <> s1.Length) _
                                        AndAlso (s1.ReadByte = s2.ReadByte))


                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If

                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close()
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close()
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class

    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(), _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")> _
    Partial Public Class CONSULTAR_DATOS_RUCDataTable
        Inherits Global.System.Data.TypedTableBase(Of CONSULTAR_DATOS_RUCRow)

        Private columnRUC As Global.System.Data.DataColumn

        Private columnRAZON_SOCIAL As Global.System.Data.DataColumn

        Private columnESTADO As Global.System.Data.DataColumn

        Private columnCONDICION_DOMICILIO As Global.System.Data.DataColumn

        Private columnDOMICILIO_FISCAL As Global.System.Data.DataColumn

        Private columnDISTRITO As Global.System.Data.DataColumn

        Private columnPROVINCIA As Global.System.Data.DataColumn

        Private columnREGION As Global.System.Data.DataColumn

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub New()
            MyBase.New()
            Me.TableName = "CONSULTAR_DATOS_RUC"
            Me.BeginInit()
            Me.InitClass()
            Me.EndInit()
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New()
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars()
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property RUCColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnRUC
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property RAZON_SOCIALColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnRAZON_SOCIAL
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property ESTADOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnESTADO
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property CONDICION_DOMICILIOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCONDICION_DOMICILIO
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property DOMICILIO_FISCALColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDOMICILIO_FISCAL
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property DISTRITOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDISTRITO
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property PROVINCIAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPROVINCIA
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property REGIONColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnREGION
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), _
         Global.System.ComponentModel.Browsable(False)> _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Default Public ReadOnly Property Item(ByVal index As Integer) As CONSULTAR_DATOS_RUCRow
            Get
                Return CType(Me.Rows(index), CONSULTAR_DATOS_RUCRow)
            End Get
        End Property

        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Event CONSULTAR_DATOS_RUCRowChanging As CONSULTAR_DATOS_RUCRowChangeEventHandler

        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Event CONSULTAR_DATOS_RUCRowChanged As CONSULTAR_DATOS_RUCRowChangeEventHandler

        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Event CONSULTAR_DATOS_RUCRowDeleting As CONSULTAR_DATOS_RUCRowChangeEventHandler

        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Event CONSULTAR_DATOS_RUCRowDeleted As CONSULTAR_DATOS_RUCRowChangeEventHandler

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Overloads Sub AddCONSULTAR_DATOS_RUCRow(ByVal row As CONSULTAR_DATOS_RUCRow)
            Me.Rows.Add(row)
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Overloads Function AddCONSULTAR_DATOS_RUCRow(ByVal RUC As String, ByVal RAZON_SOCIAL As String, ByVal ESTADO As String, ByVal CONDICION_DOMICILIO As String, ByVal DOMICILIO_FISCAL As String, ByVal DISTRITO As String, ByVal PROVINCIA As String, ByVal _REGION As String) As CONSULTAR_DATOS_RUCRow
            Dim rowCONSULTAR_DATOS_RUCRow As CONSULTAR_DATOS_RUCRow = CType(Me.NewRow, CONSULTAR_DATOS_RUCRow)
            Dim columnValuesArray() As Object = New Object() {RUC, RAZON_SOCIAL, ESTADO, CONDICION_DOMICILIO, DOMICILIO_FISCAL, DISTRITO, PROVINCIA, _REGION}
            rowCONSULTAR_DATOS_RUCRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowCONSULTAR_DATOS_RUCRow)
            Return rowCONSULTAR_DATOS_RUCRow
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function FindByRUC(ByVal RUC As String) As CONSULTAR_DATOS_RUCRow
            Return CType(Me.Rows.Find(New Object() {RUC}), CONSULTAR_DATOS_RUCRow)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As CONSULTAR_DATOS_RUCDataTable = CType(MyBase.Clone, CONSULTAR_DATOS_RUCDataTable)
            cln.InitVars()
            Return cln
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New CONSULTAR_DATOS_RUCDataTable()
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Friend Sub InitVars()
            Me.columnRUC = MyBase.Columns("RUC")
            Me.columnRAZON_SOCIAL = MyBase.Columns("RAZON_SOCIAL")
            Me.columnESTADO = MyBase.Columns("ESTADO")
            Me.columnCONDICION_DOMICILIO = MyBase.Columns("CONDICION_DOMICILIO")
            Me.columnDOMICILIO_FISCAL = MyBase.Columns("DOMICILIO_FISCAL")
            Me.columnDISTRITO = MyBase.Columns("DISTRITO")
            Me.columnPROVINCIA = MyBase.Columns("PROVINCIA")
            Me.columnREGION = MyBase.Columns("REGION")
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Private Sub InitClass()
            Me.columnRUC = New Global.System.Data.DataColumn("RUC", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRUC)
            Me.columnRAZON_SOCIAL = New Global.System.Data.DataColumn("RAZON_SOCIAL", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRAZON_SOCIAL)
            Me.columnESTADO = New Global.System.Data.DataColumn("ESTADO", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnESTADO)
            Me.columnCONDICION_DOMICILIO = New Global.System.Data.DataColumn("CONDICION_DOMICILIO", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCONDICION_DOMICILIO)
            Me.columnDOMICILIO_FISCAL = New Global.System.Data.DataColumn("DOMICILIO_FISCAL", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDOMICILIO_FISCAL)
            Me.columnDISTRITO = New Global.System.Data.DataColumn("DISTRITO", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDISTRITO)
            Me.columnPROVINCIA = New Global.System.Data.DataColumn("PROVINCIA", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPROVINCIA)
            Me.columnREGION = New Global.System.Data.DataColumn("REGION", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            Me.columnREGION.ExtendedProperties.Add("Generator_ColumnPropNameInTable", "REGIONColumn")
            Me.columnREGION.ExtendedProperties.Add("Generator_ColumnVarNameInTable", "columnREGION")
            Me.columnREGION.ExtendedProperties.Add("Generator_UserColumnName", "REGION")
            MyBase.Columns.Add(Me.columnREGION)
            Me.Constraints.Add(New Global.System.Data.UniqueConstraint("Constraint1", New Global.System.Data.DataColumn() {Me.columnRUC}, True))
            Me.columnRUC.AllowDBNull = False
            Me.columnRUC.Unique = True
            Me.columnRUC.MaxLength = 11
            Me.columnRAZON_SOCIAL.AllowDBNull = False
            Me.columnRAZON_SOCIAL.MaxLength = 100
            Me.columnESTADO.AllowDBNull = False
            Me.columnESTADO.MaxLength = 24
            Me.columnCONDICION_DOMICILIO.AllowDBNull = False
            Me.columnCONDICION_DOMICILIO.MaxLength = 22
            Me.columnDOMICILIO_FISCAL.ReadOnly = True
            Me.columnDOMICILIO_FISCAL.MaxLength = 183
            Me.columnDISTRITO.AllowDBNull = False
            Me.columnDISTRITO.MaxLength = 250
            Me.columnPROVINCIA.AllowDBNull = False
            Me.columnPROVINCIA.MaxLength = 250
            Me.columnREGION.AllowDBNull = False
            Me.columnREGION.MaxLength = 250
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function NewCONSULTAR_DATOS_RUCRow() As CONSULTAR_DATOS_RUCRow
            Return CType(Me.NewRow, CONSULTAR_DATOS_RUCRow)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New CONSULTAR_DATOS_RUCRow(builder)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(CONSULTAR_DATOS_RUCRow)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.CONSULTAR_DATOS_RUCRowChangedEvent) Is Nothing) Then
                RaiseEvent CONSULTAR_DATOS_RUCRowChanged(Me, New CONSULTAR_DATOS_RUCRowChangeEvent(CType(e.Row, CONSULTAR_DATOS_RUCRow), e.Action))
            End If
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.CONSULTAR_DATOS_RUCRowChangingEvent) Is Nothing) Then
                RaiseEvent CONSULTAR_DATOS_RUCRowChanging(Me, New CONSULTAR_DATOS_RUCRowChangeEvent(CType(e.Row, CONSULTAR_DATOS_RUCRow), e.Action))
            End If
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.CONSULTAR_DATOS_RUCRowDeletedEvent) Is Nothing) Then
                RaiseEvent CONSULTAR_DATOS_RUCRowDeleted(Me, New CONSULTAR_DATOS_RUCRowChangeEvent(CType(e.Row, CONSULTAR_DATOS_RUCRow), e.Action))
            End If
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.CONSULTAR_DATOS_RUCRowDeletingEvent) Is Nothing) Then
                RaiseEvent CONSULTAR_DATOS_RUCRowDeleting(Me, New CONSULTAR_DATOS_RUCRowChangeEvent(CType(e.Row, CONSULTAR_DATOS_RUCRow), e.Action))
            End If
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub RemoveCONSULTAR_DATOS_RUCRow(ByVal row As CONSULTAR_DATOS_RUCRow)
            Me.Rows.Remove(row)
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As dsClientes = New dsClientes()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "CONSULTAR_DATOS_RUCDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current, Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0

                            Do While ((s1.Position <> s1.Length) _
                                        AndAlso (s1.ReadByte = s2.ReadByte))


                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If

                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close()
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close()
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class

    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(), _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")> _
    Partial Public Class CONCAR_CLIENTES_OLDDataTable
        Inherits Global.System.Data.TypedTableBase(Of CONCAR_CLIENTES_OLDRow)

        Private columnAVANEXO As Global.System.Data.DataColumn

        Private columnACODANE As Global.System.Data.DataColumn

        Private columnADESANE As Global.System.Data.DataColumn

        Private columnAREFANE As Global.System.Data.DataColumn

        Private columnARUC As Global.System.Data.DataColumn

        Private columnACODMON As Global.System.Data.DataColumn

        Private columnAESTADO As Global.System.Data.DataColumn

        Private columnATIPTRA As Global.System.Data.DataColumn

        Private columnAPATERNO As Global.System.Data.DataColumn

        Private columnAMATERNO As Global.System.Data.DataColumn

        Private columnANOMBRE As Global.System.Data.DataColumn

        Private columnAFORMSUS As Global.System.Data.DataColumn

        Private columnATELEFO As Global.System.Data.DataColumn

        Private columnAPROVIN As Global.System.Data.DataColumn

        Private columnADEPART As Global.System.Data.DataColumn

        Private columnAPAIS As Global.System.Data.DataColumn

        Private columnAEMAIL As Global.System.Data.DataColumn

        Private columnAHOST As Global.System.Data.DataColumn

        Private columnADOCIDE As Global.System.Data.DataColumn

        Private columnANUMIDE As Global.System.Data.DataColumn

        Private columnAVRETE As Global.System.Data.DataColumn

        Private columnAPORRE As Global.System.Data.DataColumn

        Private columnATARIFA As Global.System.Data.DataColumn

        Private columnACIASEG As Global.System.Data.DataColumn

        Private columnUSUARIO As Global.System.Data.DataColumn

        Private columnMAQUINA As Global.System.Data.DataColumn

        Private columnCHEQUEO As Global.System.Data.DataColumn

        Private columnAG_SIXT As Global.System.Data.DataColumn

        Private columnCC_SIXT As Global.System.Data.DataColumn

        Private columnKD_SIXT As Global.System.Data.DataColumn

        Private columnLINK_SIXT As Global.System.Data.DataColumn

        Private columnFLAG_SIXT As Global.System.Data.DataColumn

        Private columnCONTACTO As Global.System.Data.DataColumn

        Private columnEMAIL As Global.System.Data.DataColumn

        Private columnTELEFONO1 As Global.System.Data.DataColumn

        Private columnTELEFONO2 As Global.System.Data.DataColumn

        Private columnNRO_TARJ_CRED As Global.System.Data.DataColumn

        Private columnVCN_TARJ_CRED As Global.System.Data.DataColumn

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub New()
            MyBase.New()
            Me.TableName = "CONCAR_CLIENTES_OLD"
            Me.BeginInit()
            Me.InitClass()
            Me.EndInit()
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New()
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars()
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property AVANEXOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnAVANEXO
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property ACODANEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnACODANE
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property ADESANEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnADESANE
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property AREFANEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnAREFANE
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property ARUCColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnARUC
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property ACODMONColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnACODMON
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property AESTADOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnAESTADO
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property ATIPTRAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnATIPTRA
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property APATERNOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnAPATERNO
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property AMATERNOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnAMATERNO
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property ANOMBREColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnANOMBRE
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property AFORMSUSColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnAFORMSUS
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property ATELEFOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnATELEFO
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property APROVINColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnAPROVIN
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property ADEPARTColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnADEPART
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property APAISColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnAPAIS
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property AEMAILColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnAEMAIL
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property AHOSTColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnAHOST
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property ADOCIDEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnADOCIDE
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property ANUMIDEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnANUMIDE
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property AVRETEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnAVRETE
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property APORREColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnAPORRE
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property ATARIFAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnATARIFA
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property ACIASEGColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnACIASEG
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property USUARIOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnUSUARIO
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property MAQUINAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnMAQUINA
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property CHEQUEOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCHEQUEO
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property AG_SIXTColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnAG_SIXT
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property CC_SIXTColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCC_SIXT
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property KD_SIXTColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnKD_SIXT
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property LINK_SIXTColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnLINK_SIXT
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property FLAG_SIXTColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnFLAG_SIXT
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property CONTACTOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCONTACTO
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property EMAILColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnEMAIL
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property TELEFONO1Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnTELEFONO1
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property TELEFONO2Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnTELEFONO2
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property NRO_TARJ_CREDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnNRO_TARJ_CRED
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property VCN_TARJ_CREDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnVCN_TARJ_CRED
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), _
         Global.System.ComponentModel.Browsable(False)> _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Default Public ReadOnly Property Item(ByVal index As Integer) As CONCAR_CLIENTES_OLDRow
            Get
                Return CType(Me.Rows(index), CONCAR_CLIENTES_OLDRow)
            End Get
        End Property

        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Event CONCAR_CLIENTES_OLDRowChanging As CONCAR_CLIENTES_OLDRowChangeEventHandler

        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Event CONCAR_CLIENTES_OLDRowChanged As CONCAR_CLIENTES_OLDRowChangeEventHandler

        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Event CONCAR_CLIENTES_OLDRowDeleting As CONCAR_CLIENTES_OLDRowChangeEventHandler

        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Event CONCAR_CLIENTES_OLDRowDeleted As CONCAR_CLIENTES_OLDRowChangeEventHandler

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Overloads Sub AddCONCAR_CLIENTES_OLDRow(ByVal row As CONCAR_CLIENTES_OLDRow)
            Me.Rows.Add(row)
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Overloads Function AddCONCAR_CLIENTES_OLDRow( _
                    ByVal AVANEXO As String, _
                    ByVal ACODANE As String, _
                    ByVal ADESANE As String, _
                    ByVal AREFANE As String, _
                    ByVal ARUC As String, _
                    ByVal ACODMON As String, _
                    ByVal AESTADO As String, _
                    ByVal ATIPTRA As String, _
                    ByVal APATERNO As String, _
                    ByVal AMATERNO As String, _
                    ByVal ANOMBRE As String, _
                    ByVal AFORMSUS As String, _
                    ByVal ATELEFO As String, _
                    ByVal APROVIN As String, _
                    ByVal ADEPART As String, _
                    ByVal APAIS As String, _
                    ByVal AEMAIL As String, _
                    ByVal AHOST As String, _
                    ByVal ADOCIDE As String, _
                    ByVal ANUMIDE As String, _
                    ByVal AVRETE As String, _
                    ByVal APORRE As Decimal, _
                    ByVal ATARIFA As Decimal, _
                    ByVal ACIASEG As String, _
                    ByVal USUARIO As String, _
                    ByVal MAQUINA As String, _
                    ByVal CHEQUEO As String, _
                    ByVal AG_SIXT As String, _
                    ByVal CC_SIXT As String, _
                    ByVal KD_SIXT As String, _
                    ByVal LINK_SIXT As String, _
                    ByVal FLAG_SIXT As String, _
                    ByVal CONTACTO As String, _
                    ByVal EMAIL As String, _
                    ByVal TELEFONO1 As String, _
                    ByVal TELEFONO2 As String, _
                    ByVal NRO_TARJ_CRED As String, _
                    ByVal VCN_TARJ_CRED As String) As CONCAR_CLIENTES_OLDRow
            Dim rowCONCAR_CLIENTES_OLDRow As CONCAR_CLIENTES_OLDRow = CType(Me.NewRow, CONCAR_CLIENTES_OLDRow)
            Dim columnValuesArray() As Object = New Object() {AVANEXO, ACODANE, ADESANE, AREFANE, ARUC, ACODMON, AESTADO, ATIPTRA, APATERNO, AMATERNO, ANOMBRE, AFORMSUS, ATELEFO, APROVIN, ADEPART, APAIS, AEMAIL, AHOST, ADOCIDE, ANUMIDE, AVRETE, APORRE, ATARIFA, ACIASEG, USUARIO, MAQUINA, CHEQUEO, AG_SIXT, CC_SIXT, KD_SIXT, LINK_SIXT, FLAG_SIXT, CONTACTO, EMAIL, TELEFONO1, TELEFONO2, NRO_TARJ_CRED, VCN_TARJ_CRED}
            rowCONCAR_CLIENTES_OLDRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowCONCAR_CLIENTES_OLDRow)
            Return rowCONCAR_CLIENTES_OLDRow
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function FindByAVANEXOACODANE(ByVal AVANEXO As String, ByVal ACODANE As String) As CONCAR_CLIENTES_OLDRow
            Return CType(Me.Rows.Find(New Object() {AVANEXO, ACODANE}), CONCAR_CLIENTES_OLDRow)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As CONCAR_CLIENTES_OLDDataTable = CType(MyBase.Clone, CONCAR_CLIENTES_OLDDataTable)
            cln.InitVars()
            Return cln
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New CONCAR_CLIENTES_OLDDataTable()
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Friend Sub InitVars()
            Me.columnAVANEXO = MyBase.Columns("AVANEXO")
            Me.columnACODANE = MyBase.Columns("ACODANE")
            Me.columnADESANE = MyBase.Columns("ADESANE")
            Me.columnAREFANE = MyBase.Columns("AREFANE")
            Me.columnARUC = MyBase.Columns("ARUC")
            Me.columnACODMON = MyBase.Columns("ACODMON")
            Me.columnAESTADO = MyBase.Columns("AESTADO")
            Me.columnATIPTRA = MyBase.Columns("ATIPTRA")
            Me.columnAPATERNO = MyBase.Columns("APATERNO")
            Me.columnAMATERNO = MyBase.Columns("AMATERNO")
            Me.columnANOMBRE = MyBase.Columns("ANOMBRE")
            Me.columnAFORMSUS = MyBase.Columns("AFORMSUS")
            Me.columnATELEFO = MyBase.Columns("ATELEFO")
            Me.columnAPROVIN = MyBase.Columns("APROVIN")
            Me.columnADEPART = MyBase.Columns("ADEPART")
            Me.columnAPAIS = MyBase.Columns("APAIS")
            Me.columnAEMAIL = MyBase.Columns("AEMAIL")
            Me.columnAHOST = MyBase.Columns("AHOST")
            Me.columnADOCIDE = MyBase.Columns("ADOCIDE")
            Me.columnANUMIDE = MyBase.Columns("ANUMIDE")
            Me.columnAVRETE = MyBase.Columns("AVRETE")
            Me.columnAPORRE = MyBase.Columns("APORRE")
            Me.columnATARIFA = MyBase.Columns("ATARIFA")
            Me.columnACIASEG = MyBase.Columns("ACIASEG")
            Me.columnUSUARIO = MyBase.Columns("USUARIO")
            Me.columnMAQUINA = MyBase.Columns("MAQUINA")
            Me.columnCHEQUEO = MyBase.Columns("CHEQUEO")
            Me.columnAG_SIXT = MyBase.Columns("AG_SIXT")
            Me.columnCC_SIXT = MyBase.Columns("CC_SIXT")
            Me.columnKD_SIXT = MyBase.Columns("KD_SIXT")
            Me.columnLINK_SIXT = MyBase.Columns("LINK_SIXT")
            Me.columnFLAG_SIXT = MyBase.Columns("FLAG_SIXT")
            Me.columnCONTACTO = MyBase.Columns("CONTACTO")
            Me.columnEMAIL = MyBase.Columns("EMAIL")
            Me.columnTELEFONO1 = MyBase.Columns("TELEFONO1")
            Me.columnTELEFONO2 = MyBase.Columns("TELEFONO2")
            Me.columnNRO_TARJ_CRED = MyBase.Columns("NRO_TARJ_CRED")
            Me.columnVCN_TARJ_CRED = MyBase.Columns("VCN_TARJ_CRED")
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Private Sub InitClass()
            Me.columnAVANEXO = New Global.System.Data.DataColumn("AVANEXO", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnAVANEXO)
            Me.columnACODANE = New Global.System.Data.DataColumn("ACODANE", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnACODANE)
            Me.columnADESANE = New Global.System.Data.DataColumn("ADESANE", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnADESANE)
            Me.columnAREFANE = New Global.System.Data.DataColumn("AREFANE", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnAREFANE)
            Me.columnARUC = New Global.System.Data.DataColumn("ARUC", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnARUC)
            Me.columnACODMON = New Global.System.Data.DataColumn("ACODMON", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnACODMON)
            Me.columnAESTADO = New Global.System.Data.DataColumn("AESTADO", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnAESTADO)
            Me.columnATIPTRA = New Global.System.Data.DataColumn("ATIPTRA", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnATIPTRA)
            Me.columnAPATERNO = New Global.System.Data.DataColumn("APATERNO", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnAPATERNO)
            Me.columnAMATERNO = New Global.System.Data.DataColumn("AMATERNO", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnAMATERNO)
            Me.columnANOMBRE = New Global.System.Data.DataColumn("ANOMBRE", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnANOMBRE)
            Me.columnAFORMSUS = New Global.System.Data.DataColumn("AFORMSUS", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnAFORMSUS)
            Me.columnATELEFO = New Global.System.Data.DataColumn("ATELEFO", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnATELEFO)
            Me.columnAPROVIN = New Global.System.Data.DataColumn("APROVIN", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnAPROVIN)
            Me.columnADEPART = New Global.System.Data.DataColumn("ADEPART", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnADEPART)
            Me.columnAPAIS = New Global.System.Data.DataColumn("APAIS", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnAPAIS)
            Me.columnAEMAIL = New Global.System.Data.DataColumn("AEMAIL", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnAEMAIL)
            Me.columnAHOST = New Global.System.Data.DataColumn("AHOST", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnAHOST)
            Me.columnADOCIDE = New Global.System.Data.DataColumn("ADOCIDE", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnADOCIDE)
            Me.columnANUMIDE = New Global.System.Data.DataColumn("ANUMIDE", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnANUMIDE)
            Me.columnAVRETE = New Global.System.Data.DataColumn("AVRETE", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnAVRETE)
            Me.columnAPORRE = New Global.System.Data.DataColumn("APORRE", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnAPORRE)
            Me.columnATARIFA = New Global.System.Data.DataColumn("ATARIFA", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnATARIFA)
            Me.columnACIASEG = New Global.System.Data.DataColumn("ACIASEG", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnACIASEG)
            Me.columnUSUARIO = New Global.System.Data.DataColumn("USUARIO", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnUSUARIO)
            Me.columnMAQUINA = New Global.System.Data.DataColumn("MAQUINA", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMAQUINA)
            Me.columnCHEQUEO = New Global.System.Data.DataColumn("CHEQUEO", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCHEQUEO)
            Me.columnAG_SIXT = New Global.System.Data.DataColumn("AG_SIXT", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnAG_SIXT)
            Me.columnCC_SIXT = New Global.System.Data.DataColumn("CC_SIXT", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCC_SIXT)
            Me.columnKD_SIXT = New Global.System.Data.DataColumn("KD_SIXT", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnKD_SIXT)
            Me.columnLINK_SIXT = New Global.System.Data.DataColumn("LINK_SIXT", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnLINK_SIXT)
            Me.columnFLAG_SIXT = New Global.System.Data.DataColumn("FLAG_SIXT", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFLAG_SIXT)
            Me.columnCONTACTO = New Global.System.Data.DataColumn("CONTACTO", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCONTACTO)
            Me.columnEMAIL = New Global.System.Data.DataColumn("EMAIL", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnEMAIL)
            Me.columnTELEFONO1 = New Global.System.Data.DataColumn("TELEFONO1", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTELEFONO1)
            Me.columnTELEFONO2 = New Global.System.Data.DataColumn("TELEFONO2", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTELEFONO2)
            Me.columnNRO_TARJ_CRED = New Global.System.Data.DataColumn("NRO_TARJ_CRED", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnNRO_TARJ_CRED)
            Me.columnVCN_TARJ_CRED = New Global.System.Data.DataColumn("VCN_TARJ_CRED", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnVCN_TARJ_CRED)
            Me.Constraints.Add(New Global.System.Data.UniqueConstraint("Constraint1", New Global.System.Data.DataColumn() {Me.columnAVANEXO, Me.columnACODANE}, True))
            Me.columnAVANEXO.AllowDBNull = False
            Me.columnAVANEXO.MaxLength = 1
            Me.columnACODANE.AllowDBNull = False
            Me.columnACODANE.MaxLength = 18
            Me.columnADESANE.AllowDBNull = False
            Me.columnADESANE.MaxLength = 40
            Me.columnAREFANE.AllowDBNull = False
            Me.columnAREFANE.MaxLength = 50
            Me.columnARUC.AllowDBNull = False
            Me.columnARUC.MaxLength = 18
            Me.columnACODMON.AllowDBNull = False
            Me.columnACODMON.MaxLength = 2
            Me.columnAESTADO.AllowDBNull = False
            Me.columnAESTADO.MaxLength = 1
            Me.columnATIPTRA.AllowDBNull = False
            Me.columnATIPTRA.MaxLength = 1
            Me.columnAPATERNO.AllowDBNull = False
            Me.columnAPATERNO.MaxLength = 20
            Me.columnAMATERNO.AllowDBNull = False
            Me.columnAMATERNO.MaxLength = 20
            Me.columnANOMBRE.AllowDBNull = False
            Me.columnANOMBRE.MaxLength = 20
            Me.columnAFORMSUS.AllowDBNull = False
            Me.columnAFORMSUS.MaxLength = 8
            Me.columnATELEFO.AllowDBNull = False
            Me.columnATELEFO.MaxLength = 30
            Me.columnAPROVIN.AllowDBNull = False
            Me.columnAPROVIN.MaxLength = 30
            Me.columnADEPART.AllowDBNull = False
            Me.columnADEPART.MaxLength = 30
            Me.columnAPAIS.AllowDBNull = False
            Me.columnAPAIS.MaxLength = 30
            Me.columnAEMAIL.AllowDBNull = False
            Me.columnAEMAIL.MaxLength = 80
            Me.columnAHOST.AllowDBNull = False
            Me.columnAHOST.MaxLength = 80
            Me.columnADOCIDE.AllowDBNull = False
            Me.columnADOCIDE.MaxLength = 2
            Me.columnANUMIDE.AllowDBNull = False
            Me.columnANUMIDE.MaxLength = 15
            Me.columnAVRETE.AllowDBNull = False
            Me.columnAVRETE.MaxLength = 1
            Me.columnAPORRE.AllowDBNull = False
            Me.columnACIASEG.MaxLength = 1
            Me.columnUSUARIO.MaxLength = 20
            Me.columnMAQUINA.MaxLength = 20
            Me.columnCHEQUEO.MaxLength = 1
            Me.columnAG_SIXT.MaxLength = 20
            Me.columnCC_SIXT.MaxLength = 20
            Me.columnKD_SIXT.MaxLength = 20
            Me.columnLINK_SIXT.MaxLength = 100
            Me.columnFLAG_SIXT.MaxLength = 1
            Me.columnCONTACTO.MaxLength = 50
            Me.columnEMAIL.MaxLength = 50
            Me.columnTELEFONO1.MaxLength = 12
            Me.columnTELEFONO2.MaxLength = 12
            Me.columnNRO_TARJ_CRED.MaxLength = 20
            Me.columnVCN_TARJ_CRED.MaxLength = 5
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function NewCONCAR_CLIENTES_OLDRow() As CONCAR_CLIENTES_OLDRow
            Return CType(Me.NewRow, CONCAR_CLIENTES_OLDRow)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New CONCAR_CLIENTES_OLDRow(builder)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(CONCAR_CLIENTES_OLDRow)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.CONCAR_CLIENTES_OLDRowChangedEvent) Is Nothing) Then
                RaiseEvent CONCAR_CLIENTES_OLDRowChanged(Me, New CONCAR_CLIENTES_OLDRowChangeEvent(CType(e.Row, CONCAR_CLIENTES_OLDRow), e.Action))
            End If
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.CONCAR_CLIENTES_OLDRowChangingEvent) Is Nothing) Then
                RaiseEvent CONCAR_CLIENTES_OLDRowChanging(Me, New CONCAR_CLIENTES_OLDRowChangeEvent(CType(e.Row, CONCAR_CLIENTES_OLDRow), e.Action))
            End If
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.CONCAR_CLIENTES_OLDRowDeletedEvent) Is Nothing) Then
                RaiseEvent CONCAR_CLIENTES_OLDRowDeleted(Me, New CONCAR_CLIENTES_OLDRowChangeEvent(CType(e.Row, CONCAR_CLIENTES_OLDRow), e.Action))
            End If
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.CONCAR_CLIENTES_OLDRowDeletingEvent) Is Nothing) Then
                RaiseEvent CONCAR_CLIENTES_OLDRowDeleting(Me, New CONCAR_CLIENTES_OLDRowChangeEvent(CType(e.Row, CONCAR_CLIENTES_OLDRow), e.Action))
            End If
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub RemoveCONCAR_CLIENTES_OLDRow(ByVal row As CONCAR_CLIENTES_OLDRow)
            Me.Rows.Remove(row)
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As dsClientes = New dsClientes()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "CONCAR_CLIENTES_OLDDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current, Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0

                            Do While ((s1.Position <> s1.Length) _
                                        AndAlso (s1.ReadByte = s2.ReadByte))


                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If

                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close()
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close()
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class

    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(), _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")> _
    Partial Public Class CONCAR_CLIENTESDataTable
        Inherits Global.System.Data.TypedTableBase(Of CONCAR_CLIENTESRow)

        Private columnAVANEXO As Global.System.Data.DataColumn

        Private columnACODANE As Global.System.Data.DataColumn

        Private columnADESANE As Global.System.Data.DataColumn

        Private columnAREFANE As Global.System.Data.DataColumn

        Private columnARUC_ As Global.System.Data.DataColumn

        Private columnACODMON As Global.System.Data.DataColumn

        Private columnAESTADO As Global.System.Data.DataColumn

        Private columnATIPTRA As Global.System.Data.DataColumn

        Private columnAPATERNO As Global.System.Data.DataColumn

        Private columnAMATERNO As Global.System.Data.DataColumn

        Private columnANOMBRE As Global.System.Data.DataColumn

        Private columnAFORMSUS As Global.System.Data.DataColumn

        Private columnATELEFO As Global.System.Data.DataColumn

        Private columnAPROVIN As Global.System.Data.DataColumn

        Private columnADEPART As Global.System.Data.DataColumn

        Private columnAPAIS As Global.System.Data.DataColumn

        Private columnAEMAIL As Global.System.Data.DataColumn

        Private columnAHOST As Global.System.Data.DataColumn

        Private columnADOCIDE As Global.System.Data.DataColumn

        Private columnANUMIDE As Global.System.Data.DataColumn

        Private columnAVRETE As Global.System.Data.DataColumn

        Private columnAPORRE As Global.System.Data.DataColumn

        Private columnATARIFA As Global.System.Data.DataColumn

        Private columnACIASEG As Global.System.Data.DataColumn

        Private columnUSUARIO As Global.System.Data.DataColumn

        Private columnMAQUINA As Global.System.Data.DataColumn

        Private columnCHEQUEO As Global.System.Data.DataColumn

        Private columnAG_SIXT As Global.System.Data.DataColumn

        Private columnCC_SIXT As Global.System.Data.DataColumn

        Private columnKD_SIXT As Global.System.Data.DataColumn

        Private columnLINK_SIXT As Global.System.Data.DataColumn

        Private columnFLAG_SIXT As Global.System.Data.DataColumn

        Private columnCONTACTO As Global.System.Data.DataColumn

        Private columnEMAIL As Global.System.Data.DataColumn

        Private columnTELEFONO1 As Global.System.Data.DataColumn

        Private columnTELEFONO2 As Global.System.Data.DataColumn

        Private columnNRO_TARJ_CRED As Global.System.Data.DataColumn

        Private columnVCN_TARJ_CRED As Global.System.Data.DataColumn

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub New()
            MyBase.New()
            Me.TableName = "CONCAR_CLIENTES"
            Me.BeginInit()
            Me.InitClass()
            Me.EndInit()
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New()
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars()
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property AVANEXOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnAVANEXO
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property ACODANEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnACODANE
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property ADESANEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnADESANE
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property AREFANEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnAREFANE
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property ARUC_Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnARUC_
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property ACODMONColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnACODMON
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property AESTADOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnAESTADO
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property ATIPTRAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnATIPTRA
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property APATERNOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnAPATERNO
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property AMATERNOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnAMATERNO
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property ANOMBREColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnANOMBRE
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property AFORMSUSColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnAFORMSUS
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property ATELEFOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnATELEFO
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property APROVINColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnAPROVIN
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property ADEPARTColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnADEPART
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property APAISColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnAPAIS
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property AEMAILColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnAEMAIL
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property AHOSTColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnAHOST
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property ADOCIDEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnADOCIDE
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property ANUMIDEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnANUMIDE
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property AVRETEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnAVRETE
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property APORREColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnAPORRE
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property ATARIFAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnATARIFA
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property ACIASEGColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnACIASEG
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property USUARIOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnUSUARIO
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property MAQUINAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnMAQUINA
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property CHEQUEOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCHEQUEO
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property AG_SIXTColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnAG_SIXT
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property CC_SIXTColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCC_SIXT
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property KD_SIXTColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnKD_SIXT
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property LINK_SIXTColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnLINK_SIXT
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property FLAG_SIXTColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnFLAG_SIXT
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property CONTACTOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCONTACTO
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property EMAILColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnEMAIL
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property TELEFONO1Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnTELEFONO1
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property TELEFONO2Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnTELEFONO2
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property NRO_TARJ_CREDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnNRO_TARJ_CRED
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property VCN_TARJ_CREDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnVCN_TARJ_CRED
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), _
         Global.System.ComponentModel.Browsable(False)> _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Default Public ReadOnly Property Item(ByVal index As Integer) As CONCAR_CLIENTESRow
            Get
                Return CType(Me.Rows(index), CONCAR_CLIENTESRow)
            End Get
        End Property

        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Event CONCAR_CLIENTESRowChanging As CONCAR_CLIENTESRowChangeEventHandler

        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Event CONCAR_CLIENTESRowChanged As CONCAR_CLIENTESRowChangeEventHandler

        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Event CONCAR_CLIENTESRowDeleting As CONCAR_CLIENTESRowChangeEventHandler

        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Event CONCAR_CLIENTESRowDeleted As CONCAR_CLIENTESRowChangeEventHandler

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Overloads Sub AddCONCAR_CLIENTESRow(ByVal row As CONCAR_CLIENTESRow)
            Me.Rows.Add(row)
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Overloads Function AddCONCAR_CLIENTESRow( _
                    ByVal AVANEXO As String, _
                    ByVal ACODANE As String, _
                    ByVal ADESANE As String, _
                    ByVal AREFANE As String, _
                    ByVal ARUC_ As String, _
                    ByVal ACODMON As String, _
                    ByVal AESTADO As String, _
                    ByVal ATIPTRA As String, _
                    ByVal APATERNO As String, _
                    ByVal AMATERNO As String, _
                    ByVal ANOMBRE As String, _
                    ByVal AFORMSUS As String, _
                    ByVal ATELEFO As String, _
                    ByVal APROVIN As String, _
                    ByVal ADEPART As String, _
                    ByVal APAIS As String, _
                    ByVal AEMAIL As String, _
                    ByVal AHOST As String, _
                    ByVal ADOCIDE As String, _
                    ByVal ANUMIDE As String, _
                    ByVal AVRETE As String, _
                    ByVal APORRE As Decimal, _
                    ByVal ATARIFA As Decimal, _
                    ByVal ACIASEG As String, _
                    ByVal USUARIO As String, _
                    ByVal MAQUINA As String, _
                    ByVal CHEQUEO As String, _
                    ByVal AG_SIXT As String, _
                    ByVal CC_SIXT As String, _
                    ByVal KD_SIXT As String, _
                    ByVal LINK_SIXT As String, _
                    ByVal FLAG_SIXT As String, _
                    ByVal CONTACTO As String, _
                    ByVal EMAIL As String, _
                    ByVal TELEFONO1 As String, _
                    ByVal TELEFONO2 As String, _
                    ByVal NRO_TARJ_CRED As String, _
                    ByVal VCN_TARJ_CRED As String) As CONCAR_CLIENTESRow
            Dim rowCONCAR_CLIENTESRow As CONCAR_CLIENTESRow = CType(Me.NewRow, CONCAR_CLIENTESRow)
            Dim columnValuesArray() As Object = New Object() {AVANEXO, ACODANE, ADESANE, AREFANE, ARUC_, ACODMON, AESTADO, ATIPTRA, APATERNO, AMATERNO, ANOMBRE, AFORMSUS, ATELEFO, APROVIN, ADEPART, APAIS, AEMAIL, AHOST, ADOCIDE, ANUMIDE, AVRETE, APORRE, ATARIFA, ACIASEG, USUARIO, MAQUINA, CHEQUEO, AG_SIXT, CC_SIXT, KD_SIXT, LINK_SIXT, FLAG_SIXT, CONTACTO, EMAIL, TELEFONO1, TELEFONO2, NRO_TARJ_CRED, VCN_TARJ_CRED}
            rowCONCAR_CLIENTESRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowCONCAR_CLIENTESRow)
            Return rowCONCAR_CLIENTESRow
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function FindByAVANEXOACODANE(ByVal AVANEXO As String, ByVal ACODANE As String) As CONCAR_CLIENTESRow
            Return CType(Me.Rows.Find(New Object() {AVANEXO, ACODANE}), CONCAR_CLIENTESRow)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As CONCAR_CLIENTESDataTable = CType(MyBase.Clone, CONCAR_CLIENTESDataTable)
            cln.InitVars()
            Return cln
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New CONCAR_CLIENTESDataTable()
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Friend Sub InitVars()
            Me.columnAVANEXO = MyBase.Columns("AVANEXO")
            Me.columnACODANE = MyBase.Columns("ACODANE")
            Me.columnADESANE = MyBase.Columns("ADESANE")
            Me.columnAREFANE = MyBase.Columns("AREFANE")
            Me.columnARUC_ = MyBase.Columns("ARUC ")
            Me.columnACODMON = MyBase.Columns("ACODMON")
            Me.columnAESTADO = MyBase.Columns("AESTADO")
            Me.columnATIPTRA = MyBase.Columns("ATIPTRA")
            Me.columnAPATERNO = MyBase.Columns("APATERNO")
            Me.columnAMATERNO = MyBase.Columns("AMATERNO")
            Me.columnANOMBRE = MyBase.Columns("ANOMBRE")
            Me.columnAFORMSUS = MyBase.Columns("AFORMSUS")
            Me.columnATELEFO = MyBase.Columns("ATELEFO")
            Me.columnAPROVIN = MyBase.Columns("APROVIN")
            Me.columnADEPART = MyBase.Columns("ADEPART")
            Me.columnAPAIS = MyBase.Columns("APAIS")
            Me.columnAEMAIL = MyBase.Columns("AEMAIL")
            Me.columnAHOST = MyBase.Columns("AHOST")
            Me.columnADOCIDE = MyBase.Columns("ADOCIDE")
            Me.columnANUMIDE = MyBase.Columns("ANUMIDE")
            Me.columnAVRETE = MyBase.Columns("AVRETE")
            Me.columnAPORRE = MyBase.Columns("APORRE")
            Me.columnATARIFA = MyBase.Columns("ATARIFA")
            Me.columnACIASEG = MyBase.Columns("ACIASEG")
            Me.columnUSUARIO = MyBase.Columns("USUARIO")
            Me.columnMAQUINA = MyBase.Columns("MAQUINA")
            Me.columnCHEQUEO = MyBase.Columns("CHEQUEO")
            Me.columnAG_SIXT = MyBase.Columns("AG_SIXT")
            Me.columnCC_SIXT = MyBase.Columns("CC_SIXT")
            Me.columnKD_SIXT = MyBase.Columns("KD_SIXT")
            Me.columnLINK_SIXT = MyBase.Columns("LINK_SIXT")
            Me.columnFLAG_SIXT = MyBase.Columns("FLAG_SIXT")
            Me.columnCONTACTO = MyBase.Columns("CONTACTO")
            Me.columnEMAIL = MyBase.Columns("EMAIL")
            Me.columnTELEFONO1 = MyBase.Columns("TELEFONO1")
            Me.columnTELEFONO2 = MyBase.Columns("TELEFONO2")
            Me.columnNRO_TARJ_CRED = MyBase.Columns("NRO_TARJ_CRED")
            Me.columnVCN_TARJ_CRED = MyBase.Columns("VCN_TARJ_CRED")
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Private Sub InitClass()
            Me.columnAVANEXO = New Global.System.Data.DataColumn("AVANEXO", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnAVANEXO)
            Me.columnACODANE = New Global.System.Data.DataColumn("ACODANE", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnACODANE)
            Me.columnADESANE = New Global.System.Data.DataColumn("ADESANE", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnADESANE)
            Me.columnAREFANE = New Global.System.Data.DataColumn("AREFANE", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnAREFANE)
            Me.columnARUC_ = New Global.System.Data.DataColumn("ARUC ", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnARUC_)
            Me.columnACODMON = New Global.System.Data.DataColumn("ACODMON", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnACODMON)
            Me.columnAESTADO = New Global.System.Data.DataColumn("AESTADO", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnAESTADO)
            Me.columnATIPTRA = New Global.System.Data.DataColumn("ATIPTRA", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnATIPTRA)
            Me.columnAPATERNO = New Global.System.Data.DataColumn("APATERNO", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnAPATERNO)
            Me.columnAMATERNO = New Global.System.Data.DataColumn("AMATERNO", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnAMATERNO)
            Me.columnANOMBRE = New Global.System.Data.DataColumn("ANOMBRE", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnANOMBRE)
            Me.columnAFORMSUS = New Global.System.Data.DataColumn("AFORMSUS", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnAFORMSUS)
            Me.columnATELEFO = New Global.System.Data.DataColumn("ATELEFO", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnATELEFO)
            Me.columnAPROVIN = New Global.System.Data.DataColumn("APROVIN", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnAPROVIN)
            Me.columnADEPART = New Global.System.Data.DataColumn("ADEPART", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnADEPART)
            Me.columnAPAIS = New Global.System.Data.DataColumn("APAIS", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnAPAIS)
            Me.columnAEMAIL = New Global.System.Data.DataColumn("AEMAIL", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnAEMAIL)
            Me.columnAHOST = New Global.System.Data.DataColumn("AHOST", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnAHOST)
            Me.columnADOCIDE = New Global.System.Data.DataColumn("ADOCIDE", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnADOCIDE)
            Me.columnANUMIDE = New Global.System.Data.DataColumn("ANUMIDE", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnANUMIDE)
            Me.columnAVRETE = New Global.System.Data.DataColumn("AVRETE", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnAVRETE)
            Me.columnAPORRE = New Global.System.Data.DataColumn("APORRE", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnAPORRE)
            Me.columnATARIFA = New Global.System.Data.DataColumn("ATARIFA", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnATARIFA)
            Me.columnACIASEG = New Global.System.Data.DataColumn("ACIASEG", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnACIASEG)
            Me.columnUSUARIO = New Global.System.Data.DataColumn("USUARIO", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnUSUARIO)
            Me.columnMAQUINA = New Global.System.Data.DataColumn("MAQUINA", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMAQUINA)
            Me.columnCHEQUEO = New Global.System.Data.DataColumn("CHEQUEO", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCHEQUEO)
            Me.columnAG_SIXT = New Global.System.Data.DataColumn("AG_SIXT", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnAG_SIXT)
            Me.columnCC_SIXT = New Global.System.Data.DataColumn("CC_SIXT", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCC_SIXT)
            Me.columnKD_SIXT = New Global.System.Data.DataColumn("KD_SIXT", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnKD_SIXT)
            Me.columnLINK_SIXT = New Global.System.Data.DataColumn("LINK_SIXT", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnLINK_SIXT)
            Me.columnFLAG_SIXT = New Global.System.Data.DataColumn("FLAG_SIXT", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFLAG_SIXT)
            Me.columnCONTACTO = New Global.System.Data.DataColumn("CONTACTO", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCONTACTO)
            Me.columnEMAIL = New Global.System.Data.DataColumn("EMAIL", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnEMAIL)
            Me.columnTELEFONO1 = New Global.System.Data.DataColumn("TELEFONO1", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTELEFONO1)
            Me.columnTELEFONO2 = New Global.System.Data.DataColumn("TELEFONO2", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTELEFONO2)
            Me.columnNRO_TARJ_CRED = New Global.System.Data.DataColumn("NRO_TARJ_CRED", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnNRO_TARJ_CRED)
            Me.columnVCN_TARJ_CRED = New Global.System.Data.DataColumn("VCN_TARJ_CRED", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnVCN_TARJ_CRED)
            Me.Constraints.Add(New Global.System.Data.UniqueConstraint("Constraint1", New Global.System.Data.DataColumn() {Me.columnAVANEXO, Me.columnACODANE}, True))
            Me.columnAVANEXO.AllowDBNull = False
            Me.columnAVANEXO.MaxLength = 1
            Me.columnACODANE.AllowDBNull = False
            Me.columnACODANE.MaxLength = 18
            Me.columnADESANE.AllowDBNull = False
            Me.columnADESANE.MaxLength = 40
            Me.columnAREFANE.AllowDBNull = False
            Me.columnAREFANE.MaxLength = 50
            Me.columnARUC_.AllowDBNull = False
            Me.columnARUC_.MaxLength = 18
            Me.columnACODMON.AllowDBNull = False
            Me.columnACODMON.MaxLength = 2
            Me.columnAESTADO.AllowDBNull = False
            Me.columnAESTADO.MaxLength = 1
            Me.columnATIPTRA.AllowDBNull = False
            Me.columnATIPTRA.MaxLength = 1
            Me.columnAPATERNO.AllowDBNull = False
            Me.columnAPATERNO.MaxLength = 20
            Me.columnAMATERNO.AllowDBNull = False
            Me.columnAMATERNO.MaxLength = 20
            Me.columnANOMBRE.AllowDBNull = False
            Me.columnANOMBRE.MaxLength = 20
            Me.columnAFORMSUS.AllowDBNull = False
            Me.columnAFORMSUS.MaxLength = 8
            Me.columnATELEFO.AllowDBNull = False
            Me.columnATELEFO.MaxLength = 30
            Me.columnAPROVIN.AllowDBNull = False
            Me.columnAPROVIN.MaxLength = 30
            Me.columnADEPART.AllowDBNull = False
            Me.columnADEPART.MaxLength = 30
            Me.columnAPAIS.AllowDBNull = False
            Me.columnAPAIS.MaxLength = 30
            Me.columnAEMAIL.AllowDBNull = False
            Me.columnAEMAIL.MaxLength = 80
            Me.columnAHOST.AllowDBNull = False
            Me.columnAHOST.MaxLength = 80
            Me.columnADOCIDE.AllowDBNull = False
            Me.columnADOCIDE.MaxLength = 2
            Me.columnANUMIDE.AllowDBNull = False
            Me.columnANUMIDE.MaxLength = 15
            Me.columnAVRETE.AllowDBNull = False
            Me.columnAVRETE.MaxLength = 1
            Me.columnAPORRE.AllowDBNull = False
            Me.columnACIASEG.MaxLength = 1
            Me.columnUSUARIO.MaxLength = 20
            Me.columnMAQUINA.MaxLength = 20
            Me.columnCHEQUEO.MaxLength = 1
            Me.columnAG_SIXT.MaxLength = 20
            Me.columnCC_SIXT.MaxLength = 20
            Me.columnKD_SIXT.MaxLength = 20
            Me.columnLINK_SIXT.MaxLength = 100
            Me.columnFLAG_SIXT.MaxLength = 1
            Me.columnCONTACTO.MaxLength = 50
            Me.columnEMAIL.MaxLength = 50
            Me.columnTELEFONO1.MaxLength = 12
            Me.columnTELEFONO2.MaxLength = 12
            Me.columnNRO_TARJ_CRED.MaxLength = 20
            Me.columnVCN_TARJ_CRED.MaxLength = 5
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function NewCONCAR_CLIENTESRow() As CONCAR_CLIENTESRow
            Return CType(Me.NewRow, CONCAR_CLIENTESRow)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New CONCAR_CLIENTESRow(builder)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(CONCAR_CLIENTESRow)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.CONCAR_CLIENTESRowChangedEvent) Is Nothing) Then
                RaiseEvent CONCAR_CLIENTESRowChanged(Me, New CONCAR_CLIENTESRowChangeEvent(CType(e.Row, CONCAR_CLIENTESRow), e.Action))
            End If
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.CONCAR_CLIENTESRowChangingEvent) Is Nothing) Then
                RaiseEvent CONCAR_CLIENTESRowChanging(Me, New CONCAR_CLIENTESRowChangeEvent(CType(e.Row, CONCAR_CLIENTESRow), e.Action))
            End If
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.CONCAR_CLIENTESRowDeletedEvent) Is Nothing) Then
                RaiseEvent CONCAR_CLIENTESRowDeleted(Me, New CONCAR_CLIENTESRowChangeEvent(CType(e.Row, CONCAR_CLIENTESRow), e.Action))
            End If
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.CONCAR_CLIENTESRowDeletingEvent) Is Nothing) Then
                RaiseEvent CONCAR_CLIENTESRowDeleting(Me, New CONCAR_CLIENTESRowChangeEvent(CType(e.Row, CONCAR_CLIENTESRow), e.Action))
            End If
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub RemoveCONCAR_CLIENTESRow(ByVal row As CONCAR_CLIENTESRow)
            Me.Rows.Remove(row)
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As dsClientes = New dsClientes()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "CONCAR_CLIENTESDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current, Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0

                            Do While ((s1.Position <> s1.Length) _
                                        AndAlso (s1.ReadByte = s2.ReadByte))


                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If

                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close()
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close()
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class

    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(), _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")> _
    Partial Public Class GESNET_CLIENTESDataTable
        Inherits Global.System.Data.TypedTableBase(Of GESNET_CLIENTESRow)

        Private columnGestorId As Global.System.Data.DataColumn

        Private columnEmpresaId As Global.System.Data.DataColumn

        Private columnCodigo As Global.System.Data.DataColumn

        Private columnGestor As Global.System.Data.DataColumn

        Private columnAlias As Global.System.Data.DataColumn

        Private columnContacto As Global.System.Data.DataColumn

        Private columnFax As Global.System.Data.DataColumn

        Private columnEmail As Global.System.Data.DataColumn

        Private columnDistritoId As Global.System.Data.DataColumn

        Private columnProvinciaId As Global.System.Data.DataColumn

        Private columnDepartamentoId As Global.System.Data.DataColumn

        Private columnNombre1 As Global.System.Data.DataColumn

        Private columnNombre2 As Global.System.Data.DataColumn

        Private columnApellido1 As Global.System.Data.DataColumn

        Private columnApellido2 As Global.System.Data.DataColumn

        Private columnTipoDocumentoIdentidadId As Global.System.Data.DataColumn

        Private columnDocumentoIdentidad As Global.System.Data.DataColumn

        Private columnRUC As Global.System.Data.DataColumn

        Private columnPersoneria As Global.System.Data.DataColumn

        Private columnDireccion As Global.System.Data.DataColumn

        Private columnDireccionViaId As Global.System.Data.DataColumn

        Private columnDireccionNombreVia As Global.System.Data.DataColumn

        Private columnDireccionNumero As Global.System.Data.DataColumn

        Private columnDireccionInterior As Global.System.Data.DataColumn

        Private columnDireccionZonaId As Global.System.Data.DataColumn

        Private columnDireccionNombreZona As Global.System.Data.DataColumn

        Private columnDireccionReferencia As Global.System.Data.DataColumn

        Private columnNacionalidadId As Global.System.Data.DataColumn

        Private columnFechaRegistro As Global.System.Data.DataColumn

        Private columnCorporacionId As Global.System.Data.DataColumn

        Private columnTipoRelacionId As Global.System.Data.DataColumn

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub New()
            MyBase.New()
            Me.TableName = "GESNET_CLIENTES"
            Me.BeginInit()
            Me.InitClass()
            Me.EndInit()
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New()
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars()
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property GestorIdColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnGestorId
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property EmpresaIdColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnEmpresaId
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property CodigoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCodigo
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property GestorColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnGestor
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property AliasColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnAlias
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property ContactoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnContacto
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property FaxColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnFax
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property EmailColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnEmail
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property DistritoIdColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDistritoId
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property ProvinciaIdColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnProvinciaId
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property DepartamentoIdColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDepartamentoId
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property Nombre1Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnNombre1
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property Nombre2Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnNombre2
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property Apellido1Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnApellido1
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property Apellido2Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnApellido2
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property TipoDocumentoIdentidadIdColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTipoDocumentoIdentidadId
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property DocumentoIdentidadColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDocumentoIdentidad
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property RUCColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnRUC
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property PersoneriaColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPersoneria
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property DireccionColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDireccion
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property DireccionViaIdColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDireccionViaId
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property DireccionNombreViaColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDireccionNombreVia
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property DireccionNumeroColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDireccionNumero
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property DireccionInteriorColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDireccionInterior
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property DireccionZonaIdColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDireccionZonaId
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property DireccionNombreZonaColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDireccionNombreZona
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property DireccionReferenciaColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDireccionReferencia
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property NacionalidadIdColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnNacionalidadId
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property FechaRegistroColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnFechaRegistro
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property CorporacionIdColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCorporacionId
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property TipoRelacionIdColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTipoRelacionId
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), _
         Global.System.ComponentModel.Browsable(False)> _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Default Public ReadOnly Property Item(ByVal index As Integer) As GESNET_CLIENTESRow
            Get
                Return CType(Me.Rows(index), GESNET_CLIENTESRow)
            End Get
        End Property

        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Event GESNET_CLIENTESRowChanging As GESNET_CLIENTESRowChangeEventHandler

        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Event GESNET_CLIENTESRowChanged As GESNET_CLIENTESRowChangeEventHandler

        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Event GESNET_CLIENTESRowDeleting As GESNET_CLIENTESRowChangeEventHandler

        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Event GESNET_CLIENTESRowDeleted As GESNET_CLIENTESRowChangeEventHandler

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Overloads Sub AddGESNET_CLIENTESRow(ByVal row As GESNET_CLIENTESRow)
            Me.Rows.Add(row)
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Overloads Function AddGESNET_CLIENTESRow( _
                    ByVal EmpresaId As Integer, _
                    ByVal Codigo As String, _
                    ByVal Gestor As String, _
                    ByVal _Alias As String, _
                    ByVal Contacto As String, _
                    ByVal Fax As String, _
                    ByVal Email As String, _
                    ByVal DistritoId As Integer, _
                    ByVal ProvinciaId As Integer, _
                    ByVal DepartamentoId As Integer, _
                    ByVal Nombre1 As String, _
                    ByVal Nombre2 As String, _
                    ByVal Apellido1 As String, _
                    ByVal Apellido2 As String, _
                    ByVal TipoDocumentoIdentidadId As Integer, _
                    ByVal DocumentoIdentidad As String, _
                    ByVal RUC As String, _
                    ByVal Personeria As Integer, _
                    ByVal Direccion As String, _
                    ByVal DireccionViaId As Integer, _
                    ByVal DireccionNombreVia As String, _
                    ByVal DireccionNumero As String, _
                    ByVal DireccionInterior As String, _
                    ByVal DireccionZonaId As Integer, _
                    ByVal DireccionNombreZona As String, _
                    ByVal DireccionReferencia As String, _
                    ByVal NacionalidadId As Integer, _
                    ByVal FechaRegistro As Date, _
                    ByVal CorporacionId As Integer, _
                    ByVal TipoRelacionId As Integer) As GESNET_CLIENTESRow
            Dim rowGESNET_CLIENTESRow As GESNET_CLIENTESRow = CType(Me.NewRow, GESNET_CLIENTESRow)
            Dim columnValuesArray() As Object = New Object() {Nothing, EmpresaId, Codigo, Gestor, _Alias, Contacto, Fax, Email, DistritoId, ProvinciaId, DepartamentoId, Nombre1, Nombre2, Apellido1, Apellido2, TipoDocumentoIdentidadId, DocumentoIdentidad, RUC, Personeria, Direccion, DireccionViaId, DireccionNombreVia, DireccionNumero, DireccionInterior, DireccionZonaId, DireccionNombreZona, DireccionReferencia, NacionalidadId, FechaRegistro, CorporacionId, TipoRelacionId}
            rowGESNET_CLIENTESRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowGESNET_CLIENTESRow)
            Return rowGESNET_CLIENTESRow
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function FindByGestorId(ByVal GestorId As Integer) As GESNET_CLIENTESRow
            Return CType(Me.Rows.Find(New Object() {GestorId}), GESNET_CLIENTESRow)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As GESNET_CLIENTESDataTable = CType(MyBase.Clone, GESNET_CLIENTESDataTable)
            cln.InitVars()
            Return cln
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New GESNET_CLIENTESDataTable()
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Friend Sub InitVars()
            Me.columnGestorId = MyBase.Columns("GestorId")
            Me.columnEmpresaId = MyBase.Columns("EmpresaId")
            Me.columnCodigo = MyBase.Columns("Codigo")
            Me.columnGestor = MyBase.Columns("Gestor")
            Me.columnAlias = MyBase.Columns("Alias")
            Me.columnContacto = MyBase.Columns("Contacto")
            Me.columnFax = MyBase.Columns("Fax")
            Me.columnEmail = MyBase.Columns("Email")
            Me.columnDistritoId = MyBase.Columns("DistritoId")
            Me.columnProvinciaId = MyBase.Columns("ProvinciaId")
            Me.columnDepartamentoId = MyBase.Columns("DepartamentoId")
            Me.columnNombre1 = MyBase.Columns("Nombre1")
            Me.columnNombre2 = MyBase.Columns("Nombre2")
            Me.columnApellido1 = MyBase.Columns("Apellido1")
            Me.columnApellido2 = MyBase.Columns("Apellido2")
            Me.columnTipoDocumentoIdentidadId = MyBase.Columns("TipoDocumentoIdentidadId")
            Me.columnDocumentoIdentidad = MyBase.Columns("DocumentoIdentidad")
            Me.columnRUC = MyBase.Columns("RUC")
            Me.columnPersoneria = MyBase.Columns("Personeria")
            Me.columnDireccion = MyBase.Columns("Direccion")
            Me.columnDireccionViaId = MyBase.Columns("DireccionViaId")
            Me.columnDireccionNombreVia = MyBase.Columns("DireccionNombreVia")
            Me.columnDireccionNumero = MyBase.Columns("DireccionNumero")
            Me.columnDireccionInterior = MyBase.Columns("DireccionInterior")
            Me.columnDireccionZonaId = MyBase.Columns("DireccionZonaId")
            Me.columnDireccionNombreZona = MyBase.Columns("DireccionNombreZona")
            Me.columnDireccionReferencia = MyBase.Columns("DireccionReferencia")
            Me.columnNacionalidadId = MyBase.Columns("NacionalidadId")
            Me.columnFechaRegistro = MyBase.Columns("FechaRegistro")
            Me.columnCorporacionId = MyBase.Columns("CorporacionId")
            Me.columnTipoRelacionId = MyBase.Columns("TipoRelacionId")
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Private Sub InitClass()
            Me.columnGestorId = New Global.System.Data.DataColumn("GestorId", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnGestorId)
            Me.columnEmpresaId = New Global.System.Data.DataColumn("EmpresaId", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnEmpresaId)
            Me.columnCodigo = New Global.System.Data.DataColumn("Codigo", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCodigo)
            Me.columnGestor = New Global.System.Data.DataColumn("Gestor", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnGestor)
            Me.columnAlias = New Global.System.Data.DataColumn("Alias", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            Me.columnAlias.ExtendedProperties.Add("Generator_ColumnPropNameInTable", "AliasColumn")
            Me.columnAlias.ExtendedProperties.Add("Generator_ColumnVarNameInTable", "columnAlias")
            Me.columnAlias.ExtendedProperties.Add("Generator_UserColumnName", "Alias")
            MyBase.Columns.Add(Me.columnAlias)
            Me.columnContacto = New Global.System.Data.DataColumn("Contacto", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnContacto)
            Me.columnFax = New Global.System.Data.DataColumn("Fax", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFax)
            Me.columnEmail = New Global.System.Data.DataColumn("Email", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnEmail)
            Me.columnDistritoId = New Global.System.Data.DataColumn("DistritoId", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDistritoId)
            Me.columnProvinciaId = New Global.System.Data.DataColumn("ProvinciaId", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnProvinciaId)
            Me.columnDepartamentoId = New Global.System.Data.DataColumn("DepartamentoId", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDepartamentoId)
            Me.columnNombre1 = New Global.System.Data.DataColumn("Nombre1", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnNombre1)
            Me.columnNombre2 = New Global.System.Data.DataColumn("Nombre2", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnNombre2)
            Me.columnApellido1 = New Global.System.Data.DataColumn("Apellido1", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnApellido1)
            Me.columnApellido2 = New Global.System.Data.DataColumn("Apellido2", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnApellido2)
            Me.columnTipoDocumentoIdentidadId = New Global.System.Data.DataColumn("TipoDocumentoIdentidadId", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTipoDocumentoIdentidadId)
            Me.columnDocumentoIdentidad = New Global.System.Data.DataColumn("DocumentoIdentidad", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDocumentoIdentidad)
            Me.columnRUC = New Global.System.Data.DataColumn("RUC", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRUC)
            Me.columnPersoneria = New Global.System.Data.DataColumn("Personeria", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPersoneria)
            Me.columnDireccion = New Global.System.Data.DataColumn("Direccion", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDireccion)
            Me.columnDireccionViaId = New Global.System.Data.DataColumn("DireccionViaId", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDireccionViaId)
            Me.columnDireccionNombreVia = New Global.System.Data.DataColumn("DireccionNombreVia", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDireccionNombreVia)
            Me.columnDireccionNumero = New Global.System.Data.DataColumn("DireccionNumero", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDireccionNumero)
            Me.columnDireccionInterior = New Global.System.Data.DataColumn("DireccionInterior", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDireccionInterior)
            Me.columnDireccionZonaId = New Global.System.Data.DataColumn("DireccionZonaId", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDireccionZonaId)
            Me.columnDireccionNombreZona = New Global.System.Data.DataColumn("DireccionNombreZona", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDireccionNombreZona)
            Me.columnDireccionReferencia = New Global.System.Data.DataColumn("DireccionReferencia", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDireccionReferencia)
            Me.columnNacionalidadId = New Global.System.Data.DataColumn("NacionalidadId", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnNacionalidadId)
            Me.columnFechaRegistro = New Global.System.Data.DataColumn("FechaRegistro", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFechaRegistro)
            Me.columnCorporacionId = New Global.System.Data.DataColumn("CorporacionId", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCorporacionId)
            Me.columnTipoRelacionId = New Global.System.Data.DataColumn("TipoRelacionId", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTipoRelacionId)
            Me.Constraints.Add(New Global.System.Data.UniqueConstraint("Constraint1", New Global.System.Data.DataColumn() {Me.columnGestorId}, True))
            Me.columnGestorId.AutoIncrement = True
            Me.columnGestorId.AutoIncrementSeed = -1
            Me.columnGestorId.AutoIncrementStep = -1
            Me.columnGestorId.AllowDBNull = False
            Me.columnGestorId.ReadOnly = True
            Me.columnGestorId.Unique = True
            Me.columnEmpresaId.AllowDBNull = False
            Me.columnCodigo.AllowDBNull = False
            Me.columnCodigo.MaxLength = 15
            Me.columnGestor.AllowDBNull = False
            Me.columnGestor.MaxLength = 100
            Me.columnAlias.MaxLength = 50
            Me.columnContacto.MaxLength = 50
            Me.columnFax.MaxLength = 50
            Me.columnEmail.MaxLength = 50
            Me.columnNombre1.MaxLength = 50
            Me.columnNombre2.MaxLength = 50
            Me.columnApellido1.MaxLength = 50
            Me.columnApellido2.MaxLength = 50
            Me.columnDocumentoIdentidad.MaxLength = 15
            Me.columnRUC.MaxLength = 15
            Me.columnPersoneria.AllowDBNull = False
            Me.columnDireccion.MaxLength = 100
            Me.columnDireccionNombreVia.MaxLength = 25
            Me.columnDireccionNumero.MaxLength = 15
            Me.columnDireccionInterior.MaxLength = 15
            Me.columnDireccionNombreZona.MaxLength = 25
            Me.columnDireccionReferencia.MaxLength = 100
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function NewGESNET_CLIENTESRow() As GESNET_CLIENTESRow
            Return CType(Me.NewRow, GESNET_CLIENTESRow)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New GESNET_CLIENTESRow(builder)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(GESNET_CLIENTESRow)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.GESNET_CLIENTESRowChangedEvent) Is Nothing) Then
                RaiseEvent GESNET_CLIENTESRowChanged(Me, New GESNET_CLIENTESRowChangeEvent(CType(e.Row, GESNET_CLIENTESRow), e.Action))
            End If
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.GESNET_CLIENTESRowChangingEvent) Is Nothing) Then
                RaiseEvent GESNET_CLIENTESRowChanging(Me, New GESNET_CLIENTESRowChangeEvent(CType(e.Row, GESNET_CLIENTESRow), e.Action))
            End If
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.GESNET_CLIENTESRowDeletedEvent) Is Nothing) Then
                RaiseEvent GESNET_CLIENTESRowDeleted(Me, New GESNET_CLIENTESRowChangeEvent(CType(e.Row, GESNET_CLIENTESRow), e.Action))
            End If
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.GESNET_CLIENTESRowDeletingEvent) Is Nothing) Then
                RaiseEvent GESNET_CLIENTESRowDeleting(Me, New GESNET_CLIENTESRowChangeEvent(CType(e.Row, GESNET_CLIENTESRow), e.Action))
            End If
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub RemoveGESNET_CLIENTESRow(ByVal row As GESNET_CLIENTESRow)
            Me.Rows.Remove(row)
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As dsClientes = New dsClientes()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "GESNET_CLIENTESDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current, Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0

                            Do While ((s1.Position <> s1.Length) _
                                        AndAlso (s1.ReadByte = s2.ReadByte))


                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If

                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close()
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close()
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class

    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(), _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")> _
    Partial Public Class CLIENTES_COMPROBANTESDataTable
        Inherits Global.System.Data.TypedTableBase(Of CLIENTES_COMPROBANTESRow)

        Private columnCUENTA_COMERCIAL As Global.System.Data.DataColumn

        Private columnRAZON_SOCIAL As Global.System.Data.DataColumn

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub New()
            MyBase.New()
            Me.TableName = "CLIENTES_COMPROBANTES"
            Me.BeginInit()
            Me.InitClass()
            Me.EndInit()
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New()
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars()
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property CUENTA_COMERCIALColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCUENTA_COMERCIAL
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property RAZON_SOCIALColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnRAZON_SOCIAL
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), _
         Global.System.ComponentModel.Browsable(False)> _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Default Public ReadOnly Property Item(ByVal index As Integer) As CLIENTES_COMPROBANTESRow
            Get
                Return CType(Me.Rows(index), CLIENTES_COMPROBANTESRow)
            End Get
        End Property

        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Event CLIENTES_COMPROBANTESRowChanging As CLIENTES_COMPROBANTESRowChangeEventHandler

        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Event CLIENTES_COMPROBANTESRowChanged As CLIENTES_COMPROBANTESRowChangeEventHandler

        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Event CLIENTES_COMPROBANTESRowDeleting As CLIENTES_COMPROBANTESRowChangeEventHandler

        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Event CLIENTES_COMPROBANTESRowDeleted As CLIENTES_COMPROBANTESRowChangeEventHandler

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Overloads Sub AddCLIENTES_COMPROBANTESRow(ByVal row As CLIENTES_COMPROBANTESRow)
            Me.Rows.Add(row)
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Overloads Function AddCLIENTES_COMPROBANTESRow(ByVal CUENTA_COMERCIAL As String, ByVal RAZON_SOCIAL As String) As CLIENTES_COMPROBANTESRow
            Dim rowCLIENTES_COMPROBANTESRow As CLIENTES_COMPROBANTESRow = CType(Me.NewRow, CLIENTES_COMPROBANTESRow)
            Dim columnValuesArray() As Object = New Object() {CUENTA_COMERCIAL, RAZON_SOCIAL}
            rowCLIENTES_COMPROBANTESRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowCLIENTES_COMPROBANTESRow)
            Return rowCLIENTES_COMPROBANTESRow
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As CLIENTES_COMPROBANTESDataTable = CType(MyBase.Clone, CLIENTES_COMPROBANTESDataTable)
            cln.InitVars()
            Return cln
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New CLIENTES_COMPROBANTESDataTable()
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Friend Sub InitVars()
            Me.columnCUENTA_COMERCIAL = MyBase.Columns("CUENTA_COMERCIAL")
            Me.columnRAZON_SOCIAL = MyBase.Columns("RAZON_SOCIAL")
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Private Sub InitClass()
            Me.columnCUENTA_COMERCIAL = New Global.System.Data.DataColumn("CUENTA_COMERCIAL", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCUENTA_COMERCIAL)
            Me.columnRAZON_SOCIAL = New Global.System.Data.DataColumn("RAZON_SOCIAL", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRAZON_SOCIAL)
            Me.columnCUENTA_COMERCIAL.AllowDBNull = False
            Me.columnCUENTA_COMERCIAL.MaxLength = 18
            Me.columnRAZON_SOCIAL.AllowDBNull = False
            Me.columnRAZON_SOCIAL.MaxLength = 100
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function NewCLIENTES_COMPROBANTESRow() As CLIENTES_COMPROBANTESRow
            Return CType(Me.NewRow, CLIENTES_COMPROBANTESRow)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New CLIENTES_COMPROBANTESRow(builder)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(CLIENTES_COMPROBANTESRow)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.CLIENTES_COMPROBANTESRowChangedEvent) Is Nothing) Then
                RaiseEvent CLIENTES_COMPROBANTESRowChanged(Me, New CLIENTES_COMPROBANTESRowChangeEvent(CType(e.Row, CLIENTES_COMPROBANTESRow), e.Action))
            End If
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.CLIENTES_COMPROBANTESRowChangingEvent) Is Nothing) Then
                RaiseEvent CLIENTES_COMPROBANTESRowChanging(Me, New CLIENTES_COMPROBANTESRowChangeEvent(CType(e.Row, CLIENTES_COMPROBANTESRow), e.Action))
            End If
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.CLIENTES_COMPROBANTESRowDeletedEvent) Is Nothing) Then
                RaiseEvent CLIENTES_COMPROBANTESRowDeleted(Me, New CLIENTES_COMPROBANTESRowChangeEvent(CType(e.Row, CLIENTES_COMPROBANTESRow), e.Action))
            End If
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.CLIENTES_COMPROBANTESRowDeletingEvent) Is Nothing) Then
                RaiseEvent CLIENTES_COMPROBANTESRowDeleting(Me, New CLIENTES_COMPROBANTESRowChangeEvent(CType(e.Row, CLIENTES_COMPROBANTESRow), e.Action))
            End If
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub RemoveCLIENTES_COMPROBANTESRow(ByVal row As CLIENTES_COMPROBANTESRow)
            Me.Rows.Remove(row)
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As dsClientes = New dsClientes()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "CLIENTES_COMPROBANTESDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current, Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0

                            Do While ((s1.Position <> s1.Length) _
                                        AndAlso (s1.ReadByte = s2.ReadByte))


                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If

                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close()
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close()
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class

    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class CLIENTESRow
        Inherits Global.System.Data.DataRow

        Private tableCLIENTES As CLIENTESDataTable

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableCLIENTES = CType(Me.Table, CLIENTESDataTable)
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property EMPRESA() As String
            Get
                Return CType(Me(Me.tableCLIENTES.EMPRESAColumn), String)
            End Get
            Set(value As String)
                Me(Me.tableCLIENTES.EMPRESAColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property CUENTA_COMERCIAL() As String
            Get
                Return CType(Me(Me.tableCLIENTES.CUENTA_COMERCIALColumn), String)
            End Get
            Set(value As String)
                Me(Me.tableCLIENTES.CUENTA_COMERCIALColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property RAZON_SOCIAL() As String
            Get
                Return CType(Me(Me.tableCLIENTES.RAZON_SOCIALColumn), String)
            End Get
            Set(value As String)
                Me(Me.tableCLIENTES.RAZON_SOCIALColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property PREFIJO() As String
            Get
                Return CType(Me(Me.tableCLIENTES.PREFIJOColumn), String)
            End Get
            Set(value As String)
                Me(Me.tableCLIENTES.PREFIJOColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property DOMICILIO() As String
            Get
                Return CType(Me(Me.tableCLIENTES.DOMICILIOColumn), String)
            End Get
            Set(value As String)
                Me(Me.tableCLIENTES.DOMICILIOColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property CODIGO_POSTAL() As String
            Get
                Return CType(Me(Me.tableCLIENTES.CODIGO_POSTALColumn), String)
            End Get
            Set(value As String)
                Me(Me.tableCLIENTES.CODIGO_POSTALColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property TELEFONO() As String
            Get
                Return CType(Me(Me.tableCLIENTES.TELEFONOColumn), String)
            End Get
            Set(value As String)
                Me(Me.tableCLIENTES.TELEFONOColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property CELULAR() As String
            Get
                Return CType(Me(Me.tableCLIENTES.CELULARColumn), String)
            End Get
            Set(value As String)
                Me(Me.tableCLIENTES.CELULARColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property EMAIL_CONTACTO() As String
            Get
                Return CType(Me(Me.tableCLIENTES.EMAIL_CONTACTOColumn), String)
            End Get
            Set(value As String)
                Me(Me.tableCLIENTES.EMAIL_CONTACTOColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property EMAIL_FACTURACION() As String
            Get
                Return CType(Me(Me.tableCLIENTES.EMAIL_FACTURACIONColumn), String)
            End Get
            Set(value As String)
                Me(Me.tableCLIENTES.EMAIL_FACTURACIONColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property PAGINA_WEB() As String
            Get
                Return CType(Me(Me.tableCLIENTES.PAGINA_WEBColumn), String)
            End Get
            Set(value As String)
                Me(Me.tableCLIENTES.PAGINA_WEBColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property CONTACTO_VENTA() As String
            Get
                Return CType(Me(Me.tableCLIENTES.CONTACTO_VENTAColumn), String)
            End Get
            Set(value As String)
                Me(Me.tableCLIENTES.CONTACTO_VENTAColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property CONTACTO_COMPRA() As String
            Get
                Return CType(Me(Me.tableCLIENTES.CONTACTO_COMPRAColumn), String)
            End Get
            Set(value As String)
                Me(Me.tableCLIENTES.CONTACTO_COMPRAColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property TIPO_MONEDA() As String
            Get
                Return CType(Me(Me.tableCLIENTES.TIPO_MONEDAColumn), String)
            End Get
            Set(value As String)
                Me(Me.tableCLIENTES.TIPO_MONEDAColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property INDICA_NO_DOMICILIADO() As String
            Get
                Return CType(Me(Me.tableCLIENTES.INDICA_NO_DOMICILIADOColumn), String)
            End Get
            Set(value As String)
                Me(Me.tableCLIENTES.INDICA_NO_DOMICILIADOColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property CONDICION_PAGO() As String
            Get
                Return CType(Me(Me.tableCLIENTES.CONDICION_PAGOColumn), String)
            End Get
            Set(value As String)
                Me(Me.tableCLIENTES.CONDICION_PAGOColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property TIPO_PAGO() As String
            Get
                Return CType(Me(Me.tableCLIENTES.TIPO_PAGOColumn), String)
            End Get
            Set(value As String)
                Me(Me.tableCLIENTES.TIPO_PAGOColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property EXIGE_ORDEN_COMPRA() As String
            Get
                Return CType(Me(Me.tableCLIENTES.EXIGE_ORDEN_COMPRAColumn), String)
            End Get
            Set(value As String)
                Me(Me.tableCLIENTES.EXIGE_ORDEN_COMPRAColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property EXIGE_ORDEN_PAGO() As String
            Get
                Return CType(Me(Me.tableCLIENTES.EXIGE_ORDEN_PAGOColumn), String)
            End Get
            Set(value As String)
                Me(Me.tableCLIENTES.EXIGE_ORDEN_PAGOColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property EXIGE_ACTA_CONFORMIDAD() As String
            Get
                Return CType(Me(Me.tableCLIENTES.EXIGE_ACTA_CONFORMIDADColumn), String)
            End Get
            Set(value As String)
                Me(Me.tableCLIENTES.EXIGE_ACTA_CONFORMIDADColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property USUARIO_WEB() As String
            Get
                Return CType(Me(Me.tableCLIENTES.USUARIO_WEBColumn), String)
            End Get
            Set(value As String)
                Me(Me.tableCLIENTES.USUARIO_WEBColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property CLAVE_WEB() As String
            Get
                Return CType(Me(Me.tableCLIENTES.CLAVE_WEBColumn), String)
            End Get
            Set(value As String)
                Me(Me.tableCLIENTES.CLAVE_WEBColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property COMENTARIO() As String
            Get
                Return CType(Me(Me.tableCLIENTES.COMENTARIOColumn), String)
            End Get
            Set(value As String)
                Me(Me.tableCLIENTES.COMENTARIOColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property ESTADO() As String
            Get
                Try
                    Return CType(Me(Me.tableCLIENTES.ESTADOColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'ESTADO' de la tabla 'CLIENTES' es DBNull.", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tableCLIENTES.ESTADOColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property USUARIO_REGISTRO() As String
            Get
                Return CType(Me(Me.tableCLIENTES.USUARIO_REGISTROColumn), String)
            End Get
            Set(value As String)
                Me(Me.tableCLIENTES.USUARIO_REGISTROColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property FECHA_REGISTRO() As Date
            Get
                Return CType(Me(Me.tableCLIENTES.FECHA_REGISTROColumn), Date)
            End Get
            Set(value As Date)
                Me(Me.tableCLIENTES.FECHA_REGISTROColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property USUARIO_MODIFICA() As String
            Get
                Try
                    Return CType(Me(Me.tableCLIENTES.USUARIO_MODIFICAColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'USUARIO_MODIFICA' de la tabla 'CLIENTES' es DBNull.", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tableCLIENTES.USUARIO_MODIFICAColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property FECHA_MODIFICA() As Date
            Get
                Try
                    Return CType(Me(Me.tableCLIENTES.FECHA_MODIFICAColumn), Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'FECHA_MODIFICA' de la tabla 'CLIENTES' es DBNull.", e)
                End Try
            End Get
            Set(value As Date)
                Me(Me.tableCLIENTES.FECHA_MODIFICAColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsESTADONull() As Boolean
            Return Me.IsNull(Me.tableCLIENTES.ESTADOColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetESTADONull()
            Me(Me.tableCLIENTES.ESTADOColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsUSUARIO_MODIFICANull() As Boolean
            Return Me.IsNull(Me.tableCLIENTES.USUARIO_MODIFICAColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetUSUARIO_MODIFICANull()
            Me(Me.tableCLIENTES.USUARIO_MODIFICAColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsFECHA_MODIFICANull() As Boolean
            Return Me.IsNull(Me.tableCLIENTES.FECHA_MODIFICAColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetFECHA_MODIFICANull()
            Me(Me.tableCLIENTES.FECHA_MODIFICAColumn) = Global.System.Convert.DBNull
        End Sub
    End Class

    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class CLIENTES_LISTARow
        Inherits Global.System.Data.DataRow

        Private tableCLIENTES_LISTA As CLIENTES_LISTADataTable

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableCLIENTES_LISTA = CType(Me.Table, CLIENTES_LISTADataTable)
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property CUENTA_COMERCIAL() As String
            Get
                Return CType(Me(Me.tableCLIENTES_LISTA.CUENTA_COMERCIALColumn), String)
            End Get
            Set(value As String)
                Me(Me.tableCLIENTES_LISTA.CUENTA_COMERCIALColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property RAZON_SOCIAL() As String
            Get
                Return CType(Me(Me.tableCLIENTES_LISTA.RAZON_SOCIALColumn), String)
            End Get
            Set(value As String)
                Me(Me.tableCLIENTES_LISTA.RAZON_SOCIALColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property PREFIJO() As String
            Get
                Try
                    Return CType(Me(Me.tableCLIENTES_LISTA.PREFIJOColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'PREFIJO' de la tabla 'CLIENTES_LISTA' es DBNull.", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tableCLIENTES_LISTA.PREFIJOColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsPREFIJONull() As Boolean
            Return Me.IsNull(Me.tableCLIENTES_LISTA.PREFIJOColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetPREFIJONull()
            Me(Me.tableCLIENTES_LISTA.PREFIJOColumn) = Global.System.Convert.DBNull
        End Sub
    End Class

    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class CONSULTAR_DATOS_RUCRow
        Inherits Global.System.Data.DataRow

        Private tableCONSULTAR_DATOS_RUC As CONSULTAR_DATOS_RUCDataTable

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableCONSULTAR_DATOS_RUC = CType(Me.Table, CONSULTAR_DATOS_RUCDataTable)
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property RUC() As String
            Get
                Return CType(Me(Me.tableCONSULTAR_DATOS_RUC.RUCColumn), String)
            End Get
            Set(value As String)
                Me(Me.tableCONSULTAR_DATOS_RUC.RUCColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property RAZON_SOCIAL() As String
            Get
                Return CType(Me(Me.tableCONSULTAR_DATOS_RUC.RAZON_SOCIALColumn), String)
            End Get
            Set(value As String)
                Me(Me.tableCONSULTAR_DATOS_RUC.RAZON_SOCIALColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property ESTADO() As String
            Get
                Return CType(Me(Me.tableCONSULTAR_DATOS_RUC.ESTADOColumn), String)
            End Get
            Set(value As String)
                Me(Me.tableCONSULTAR_DATOS_RUC.ESTADOColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property CONDICION_DOMICILIO() As String
            Get
                Return CType(Me(Me.tableCONSULTAR_DATOS_RUC.CONDICION_DOMICILIOColumn), String)
            End Get
            Set(value As String)
                Me(Me.tableCONSULTAR_DATOS_RUC.CONDICION_DOMICILIOColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property DOMICILIO_FISCAL() As String
            Get
                Try
                    Return CType(Me(Me.tableCONSULTAR_DATOS_RUC.DOMICILIO_FISCALColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'DOMICILIO_FISCAL' de la tabla 'CONSULTAR_DATOS_RUC' es DB" & _
                            "Null.", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tableCONSULTAR_DATOS_RUC.DOMICILIO_FISCALColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property DISTRITO() As String
            Get
                Return CType(Me(Me.tableCONSULTAR_DATOS_RUC.DISTRITOColumn), String)
            End Get
            Set(value As String)
                Me(Me.tableCONSULTAR_DATOS_RUC.DISTRITOColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property PROVINCIA() As String
            Get
                Return CType(Me(Me.tableCONSULTAR_DATOS_RUC.PROVINCIAColumn), String)
            End Get
            Set(value As String)
                Me(Me.tableCONSULTAR_DATOS_RUC.PROVINCIAColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property _REGION() As String
            Get
                Return CType(Me(Me.tableCONSULTAR_DATOS_RUC.REGIONColumn), String)
            End Get
            Set(value As String)
                Me(Me.tableCONSULTAR_DATOS_RUC.REGIONColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsDOMICILIO_FISCALNull() As Boolean
            Return Me.IsNull(Me.tableCONSULTAR_DATOS_RUC.DOMICILIO_FISCALColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetDOMICILIO_FISCALNull()
            Me(Me.tableCONSULTAR_DATOS_RUC.DOMICILIO_FISCALColumn) = Global.System.Convert.DBNull
        End Sub
    End Class

    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class CONCAR_CLIENTES_OLDRow
        Inherits Global.System.Data.DataRow

        Private tableCONCAR_CLIENTES_OLD As CONCAR_CLIENTES_OLDDataTable

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableCONCAR_CLIENTES_OLD = CType(Me.Table, CONCAR_CLIENTES_OLDDataTable)
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property AVANEXO() As String
            Get
                Return CType(Me(Me.tableCONCAR_CLIENTES_OLD.AVANEXOColumn), String)
            End Get
            Set(value As String)
                Me(Me.tableCONCAR_CLIENTES_OLD.AVANEXOColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property ACODANE() As String
            Get
                Return CType(Me(Me.tableCONCAR_CLIENTES_OLD.ACODANEColumn), String)
            End Get
            Set(value As String)
                Me(Me.tableCONCAR_CLIENTES_OLD.ACODANEColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property ADESANE() As String
            Get
                Return CType(Me(Me.tableCONCAR_CLIENTES_OLD.ADESANEColumn), String)
            End Get
            Set(value As String)
                Me(Me.tableCONCAR_CLIENTES_OLD.ADESANEColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property AREFANE() As String
            Get
                Return CType(Me(Me.tableCONCAR_CLIENTES_OLD.AREFANEColumn), String)
            End Get
            Set(value As String)
                Me(Me.tableCONCAR_CLIENTES_OLD.AREFANEColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property ARUC() As String
            Get
                Return CType(Me(Me.tableCONCAR_CLIENTES_OLD.ARUCColumn), String)
            End Get
            Set(value As String)
                Me(Me.tableCONCAR_CLIENTES_OLD.ARUCColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property ACODMON() As String
            Get
                Return CType(Me(Me.tableCONCAR_CLIENTES_OLD.ACODMONColumn), String)
            End Get
            Set(value As String)
                Me(Me.tableCONCAR_CLIENTES_OLD.ACODMONColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property AESTADO() As String
            Get
                Return CType(Me(Me.tableCONCAR_CLIENTES_OLD.AESTADOColumn), String)
            End Get
            Set(value As String)
                Me(Me.tableCONCAR_CLIENTES_OLD.AESTADOColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property ATIPTRA() As String
            Get
                Return CType(Me(Me.tableCONCAR_CLIENTES_OLD.ATIPTRAColumn), String)
            End Get
            Set(value As String)
                Me(Me.tableCONCAR_CLIENTES_OLD.ATIPTRAColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property APATERNO() As String
            Get
                Return CType(Me(Me.tableCONCAR_CLIENTES_OLD.APATERNOColumn), String)
            End Get
            Set(value As String)
                Me(Me.tableCONCAR_CLIENTES_OLD.APATERNOColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property AMATERNO() As String
            Get
                Return CType(Me(Me.tableCONCAR_CLIENTES_OLD.AMATERNOColumn), String)
            End Get
            Set(value As String)
                Me(Me.tableCONCAR_CLIENTES_OLD.AMATERNOColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property ANOMBRE() As String
            Get
                Return CType(Me(Me.tableCONCAR_CLIENTES_OLD.ANOMBREColumn), String)
            End Get
            Set(value As String)
                Me(Me.tableCONCAR_CLIENTES_OLD.ANOMBREColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property AFORMSUS() As String
            Get
                Return CType(Me(Me.tableCONCAR_CLIENTES_OLD.AFORMSUSColumn), String)
            End Get
            Set(value As String)
                Me(Me.tableCONCAR_CLIENTES_OLD.AFORMSUSColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property ATELEFO() As String
            Get
                Return CType(Me(Me.tableCONCAR_CLIENTES_OLD.ATELEFOColumn), String)
            End Get
            Set(value As String)
                Me(Me.tableCONCAR_CLIENTES_OLD.ATELEFOColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property APROVIN() As String
            Get
                Return CType(Me(Me.tableCONCAR_CLIENTES_OLD.APROVINColumn), String)
            End Get
            Set(value As String)
                Me(Me.tableCONCAR_CLIENTES_OLD.APROVINColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property ADEPART() As String
            Get
                Return CType(Me(Me.tableCONCAR_CLIENTES_OLD.ADEPARTColumn), String)
            End Get
            Set(value As String)
                Me(Me.tableCONCAR_CLIENTES_OLD.ADEPARTColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property APAIS() As String
            Get
                Return CType(Me(Me.tableCONCAR_CLIENTES_OLD.APAISColumn), String)
            End Get
            Set(value As String)
                Me(Me.tableCONCAR_CLIENTES_OLD.APAISColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property AEMAIL() As String
            Get
                Return CType(Me(Me.tableCONCAR_CLIENTES_OLD.AEMAILColumn), String)
            End Get
            Set(value As String)
                Me(Me.tableCONCAR_CLIENTES_OLD.AEMAILColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property AHOST() As String
            Get
                Return CType(Me(Me.tableCONCAR_CLIENTES_OLD.AHOSTColumn), String)
            End Get
            Set(value As String)
                Me(Me.tableCONCAR_CLIENTES_OLD.AHOSTColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property ADOCIDE() As String
            Get
                Return CType(Me(Me.tableCONCAR_CLIENTES_OLD.ADOCIDEColumn), String)
            End Get
            Set(value As String)
                Me(Me.tableCONCAR_CLIENTES_OLD.ADOCIDEColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property ANUMIDE() As String
            Get
                Return CType(Me(Me.tableCONCAR_CLIENTES_OLD.ANUMIDEColumn), String)
            End Get
            Set(value As String)
                Me(Me.tableCONCAR_CLIENTES_OLD.ANUMIDEColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property AVRETE() As String
            Get
                Return CType(Me(Me.tableCONCAR_CLIENTES_OLD.AVRETEColumn), String)
            End Get
            Set(value As String)
                Me(Me.tableCONCAR_CLIENTES_OLD.AVRETEColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property APORRE() As Decimal
            Get
                Return CType(Me(Me.tableCONCAR_CLIENTES_OLD.APORREColumn), Decimal)
            End Get
            Set(value As Decimal)
                Me(Me.tableCONCAR_CLIENTES_OLD.APORREColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property ATARIFA() As Decimal
            Get
                Try
                    Return CType(Me(Me.tableCONCAR_CLIENTES_OLD.ATARIFAColumn), Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'ATARIFA' de la tabla 'CONCAR_CLIENTES_OLD' es DBNull.", e)
                End Try
            End Get
            Set(value As Decimal)
                Me(Me.tableCONCAR_CLIENTES_OLD.ATARIFAColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property ACIASEG() As String
            Get
                Try
                    Return CType(Me(Me.tableCONCAR_CLIENTES_OLD.ACIASEGColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'ACIASEG' de la tabla 'CONCAR_CLIENTES_OLD' es DBNull.", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tableCONCAR_CLIENTES_OLD.ACIASEGColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property USUARIO() As String
            Get
                Try
                    Return CType(Me(Me.tableCONCAR_CLIENTES_OLD.USUARIOColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'USUARIO' de la tabla 'CONCAR_CLIENTES_OLD' es DBNull.", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tableCONCAR_CLIENTES_OLD.USUARIOColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property MAQUINA() As String
            Get
                Try
                    Return CType(Me(Me.tableCONCAR_CLIENTES_OLD.MAQUINAColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'MAQUINA' de la tabla 'CONCAR_CLIENTES_OLD' es DBNull.", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tableCONCAR_CLIENTES_OLD.MAQUINAColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property CHEQUEO() As String
            Get
                Try
                    Return CType(Me(Me.tableCONCAR_CLIENTES_OLD.CHEQUEOColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'CHEQUEO' de la tabla 'CONCAR_CLIENTES_OLD' es DBNull.", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tableCONCAR_CLIENTES_OLD.CHEQUEOColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property AG_SIXT() As String
            Get
                Try
                    Return CType(Me(Me.tableCONCAR_CLIENTES_OLD.AG_SIXTColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'AG_SIXT' de la tabla 'CONCAR_CLIENTES_OLD' es DBNull.", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tableCONCAR_CLIENTES_OLD.AG_SIXTColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property CC_SIXT() As String
            Get
                Try
                    Return CType(Me(Me.tableCONCAR_CLIENTES_OLD.CC_SIXTColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'CC_SIXT' de la tabla 'CONCAR_CLIENTES_OLD' es DBNull.", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tableCONCAR_CLIENTES_OLD.CC_SIXTColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property KD_SIXT() As String
            Get
                Try
                    Return CType(Me(Me.tableCONCAR_CLIENTES_OLD.KD_SIXTColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'KD_SIXT' de la tabla 'CONCAR_CLIENTES_OLD' es DBNull.", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tableCONCAR_CLIENTES_OLD.KD_SIXTColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property LINK_SIXT() As String
            Get
                Try
                    Return CType(Me(Me.tableCONCAR_CLIENTES_OLD.LINK_SIXTColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'LINK_SIXT' de la tabla 'CONCAR_CLIENTES_OLD' es DBNull.", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tableCONCAR_CLIENTES_OLD.LINK_SIXTColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property FLAG_SIXT() As String
            Get
                Try
                    Return CType(Me(Me.tableCONCAR_CLIENTES_OLD.FLAG_SIXTColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'FLAG_SIXT' de la tabla 'CONCAR_CLIENTES_OLD' es DBNull.", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tableCONCAR_CLIENTES_OLD.FLAG_SIXTColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property CONTACTO() As String
            Get
                Try
                    Return CType(Me(Me.tableCONCAR_CLIENTES_OLD.CONTACTOColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'CONTACTO' de la tabla 'CONCAR_CLIENTES_OLD' es DBNull.", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tableCONCAR_CLIENTES_OLD.CONTACTOColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property EMAIL() As String
            Get
                Try
                    Return CType(Me(Me.tableCONCAR_CLIENTES_OLD.EMAILColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'EMAIL' de la tabla 'CONCAR_CLIENTES_OLD' es DBNull.", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tableCONCAR_CLIENTES_OLD.EMAILColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property TELEFONO1() As String
            Get
                Try
                    Return CType(Me(Me.tableCONCAR_CLIENTES_OLD.TELEFONO1Column), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'TELEFONO1' de la tabla 'CONCAR_CLIENTES_OLD' es DBNull.", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tableCONCAR_CLIENTES_OLD.TELEFONO1Column) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property TELEFONO2() As String
            Get
                Try
                    Return CType(Me(Me.tableCONCAR_CLIENTES_OLD.TELEFONO2Column), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'TELEFONO2' de la tabla 'CONCAR_CLIENTES_OLD' es DBNull.", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tableCONCAR_CLIENTES_OLD.TELEFONO2Column) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property NRO_TARJ_CRED() As String
            Get
                Try
                    Return CType(Me(Me.tableCONCAR_CLIENTES_OLD.NRO_TARJ_CREDColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'NRO_TARJ_CRED' de la tabla 'CONCAR_CLIENTES_OLD' es DBNul" & _
                            "l.", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tableCONCAR_CLIENTES_OLD.NRO_TARJ_CREDColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property VCN_TARJ_CRED() As String
            Get
                Try
                    Return CType(Me(Me.tableCONCAR_CLIENTES_OLD.VCN_TARJ_CREDColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'VCN_TARJ_CRED' de la tabla 'CONCAR_CLIENTES_OLD' es DBNul" & _
                            "l.", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tableCONCAR_CLIENTES_OLD.VCN_TARJ_CREDColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsATARIFANull() As Boolean
            Return Me.IsNull(Me.tableCONCAR_CLIENTES_OLD.ATARIFAColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetATARIFANull()
            Me(Me.tableCONCAR_CLIENTES_OLD.ATARIFAColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsACIASEGNull() As Boolean
            Return Me.IsNull(Me.tableCONCAR_CLIENTES_OLD.ACIASEGColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetACIASEGNull()
            Me(Me.tableCONCAR_CLIENTES_OLD.ACIASEGColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsUSUARIONull() As Boolean
            Return Me.IsNull(Me.tableCONCAR_CLIENTES_OLD.USUARIOColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetUSUARIONull()
            Me(Me.tableCONCAR_CLIENTES_OLD.USUARIOColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsMAQUINANull() As Boolean
            Return Me.IsNull(Me.tableCONCAR_CLIENTES_OLD.MAQUINAColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetMAQUINANull()
            Me(Me.tableCONCAR_CLIENTES_OLD.MAQUINAColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsCHEQUEONull() As Boolean
            Return Me.IsNull(Me.tableCONCAR_CLIENTES_OLD.CHEQUEOColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetCHEQUEONull()
            Me(Me.tableCONCAR_CLIENTES_OLD.CHEQUEOColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsAG_SIXTNull() As Boolean
            Return Me.IsNull(Me.tableCONCAR_CLIENTES_OLD.AG_SIXTColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetAG_SIXTNull()
            Me(Me.tableCONCAR_CLIENTES_OLD.AG_SIXTColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsCC_SIXTNull() As Boolean
            Return Me.IsNull(Me.tableCONCAR_CLIENTES_OLD.CC_SIXTColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetCC_SIXTNull()
            Me(Me.tableCONCAR_CLIENTES_OLD.CC_SIXTColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsKD_SIXTNull() As Boolean
            Return Me.IsNull(Me.tableCONCAR_CLIENTES_OLD.KD_SIXTColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetKD_SIXTNull()
            Me(Me.tableCONCAR_CLIENTES_OLD.KD_SIXTColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsLINK_SIXTNull() As Boolean
            Return Me.IsNull(Me.tableCONCAR_CLIENTES_OLD.LINK_SIXTColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetLINK_SIXTNull()
            Me(Me.tableCONCAR_CLIENTES_OLD.LINK_SIXTColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsFLAG_SIXTNull() As Boolean
            Return Me.IsNull(Me.tableCONCAR_CLIENTES_OLD.FLAG_SIXTColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetFLAG_SIXTNull()
            Me(Me.tableCONCAR_CLIENTES_OLD.FLAG_SIXTColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsCONTACTONull() As Boolean
            Return Me.IsNull(Me.tableCONCAR_CLIENTES_OLD.CONTACTOColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetCONTACTONull()
            Me(Me.tableCONCAR_CLIENTES_OLD.CONTACTOColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsEMAILNull() As Boolean
            Return Me.IsNull(Me.tableCONCAR_CLIENTES_OLD.EMAILColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetEMAILNull()
            Me(Me.tableCONCAR_CLIENTES_OLD.EMAILColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsTELEFONO1Null() As Boolean
            Return Me.IsNull(Me.tableCONCAR_CLIENTES_OLD.TELEFONO1Column)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetTELEFONO1Null()
            Me(Me.tableCONCAR_CLIENTES_OLD.TELEFONO1Column) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsTELEFONO2Null() As Boolean
            Return Me.IsNull(Me.tableCONCAR_CLIENTES_OLD.TELEFONO2Column)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetTELEFONO2Null()
            Me(Me.tableCONCAR_CLIENTES_OLD.TELEFONO2Column) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsNRO_TARJ_CREDNull() As Boolean
            Return Me.IsNull(Me.tableCONCAR_CLIENTES_OLD.NRO_TARJ_CREDColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetNRO_TARJ_CREDNull()
            Me(Me.tableCONCAR_CLIENTES_OLD.NRO_TARJ_CREDColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsVCN_TARJ_CREDNull() As Boolean
            Return Me.IsNull(Me.tableCONCAR_CLIENTES_OLD.VCN_TARJ_CREDColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetVCN_TARJ_CREDNull()
            Me(Me.tableCONCAR_CLIENTES_OLD.VCN_TARJ_CREDColumn) = Global.System.Convert.DBNull
        End Sub
    End Class

    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class CONCAR_CLIENTESRow
        Inherits Global.System.Data.DataRow

        Private tableCONCAR_CLIENTES As CONCAR_CLIENTESDataTable

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableCONCAR_CLIENTES = CType(Me.Table, CONCAR_CLIENTESDataTable)
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property AVANEXO() As String
            Get
                Return CType(Me(Me.tableCONCAR_CLIENTES.AVANEXOColumn), String)
            End Get
            Set(value As String)
                Me(Me.tableCONCAR_CLIENTES.AVANEXOColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property ACODANE() As String
            Get
                Return CType(Me(Me.tableCONCAR_CLIENTES.ACODANEColumn), String)
            End Get
            Set(value As String)
                Me(Me.tableCONCAR_CLIENTES.ACODANEColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property ADESANE() As String
            Get
                Return CType(Me(Me.tableCONCAR_CLIENTES.ADESANEColumn), String)
            End Get
            Set(value As String)
                Me(Me.tableCONCAR_CLIENTES.ADESANEColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property AREFANE() As String
            Get
                Return CType(Me(Me.tableCONCAR_CLIENTES.AREFANEColumn), String)
            End Get
            Set(value As String)
                Me(Me.tableCONCAR_CLIENTES.AREFANEColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property ARUC_() As String
            Get
                Return CType(Me(Me.tableCONCAR_CLIENTES.ARUC_Column), String)
            End Get
            Set(value As String)
                Me(Me.tableCONCAR_CLIENTES.ARUC_Column) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property ACODMON() As String
            Get
                Return CType(Me(Me.tableCONCAR_CLIENTES.ACODMONColumn), String)
            End Get
            Set(value As String)
                Me(Me.tableCONCAR_CLIENTES.ACODMONColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property AESTADO() As String
            Get
                Return CType(Me(Me.tableCONCAR_CLIENTES.AESTADOColumn), String)
            End Get
            Set(value As String)
                Me(Me.tableCONCAR_CLIENTES.AESTADOColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property ATIPTRA() As String
            Get
                Return CType(Me(Me.tableCONCAR_CLIENTES.ATIPTRAColumn), String)
            End Get
            Set(value As String)
                Me(Me.tableCONCAR_CLIENTES.ATIPTRAColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property APATERNO() As String
            Get
                Return CType(Me(Me.tableCONCAR_CLIENTES.APATERNOColumn), String)
            End Get
            Set(value As String)
                Me(Me.tableCONCAR_CLIENTES.APATERNOColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property AMATERNO() As String
            Get
                Return CType(Me(Me.tableCONCAR_CLIENTES.AMATERNOColumn), String)
            End Get
            Set(value As String)
                Me(Me.tableCONCAR_CLIENTES.AMATERNOColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property ANOMBRE() As String
            Get
                Return CType(Me(Me.tableCONCAR_CLIENTES.ANOMBREColumn), String)
            End Get
            Set(value As String)
                Me(Me.tableCONCAR_CLIENTES.ANOMBREColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property AFORMSUS() As String
            Get
                Return CType(Me(Me.tableCONCAR_CLIENTES.AFORMSUSColumn), String)
            End Get
            Set(value As String)
                Me(Me.tableCONCAR_CLIENTES.AFORMSUSColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property ATELEFO() As String
            Get
                Return CType(Me(Me.tableCONCAR_CLIENTES.ATELEFOColumn), String)
            End Get
            Set(value As String)
                Me(Me.tableCONCAR_CLIENTES.ATELEFOColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property APROVIN() As String
            Get
                Return CType(Me(Me.tableCONCAR_CLIENTES.APROVINColumn), String)
            End Get
            Set(value As String)
                Me(Me.tableCONCAR_CLIENTES.APROVINColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property ADEPART() As String
            Get
                Return CType(Me(Me.tableCONCAR_CLIENTES.ADEPARTColumn), String)
            End Get
            Set(value As String)
                Me(Me.tableCONCAR_CLIENTES.ADEPARTColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property APAIS() As String
            Get
                Return CType(Me(Me.tableCONCAR_CLIENTES.APAISColumn), String)
            End Get
            Set(value As String)
                Me(Me.tableCONCAR_CLIENTES.APAISColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property AEMAIL() As String
            Get
                Return CType(Me(Me.tableCONCAR_CLIENTES.AEMAILColumn), String)
            End Get
            Set(value As String)
                Me(Me.tableCONCAR_CLIENTES.AEMAILColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property AHOST() As String
            Get
                Return CType(Me(Me.tableCONCAR_CLIENTES.AHOSTColumn), String)
            End Get
            Set(value As String)
                Me(Me.tableCONCAR_CLIENTES.AHOSTColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property ADOCIDE() As String
            Get
                Return CType(Me(Me.tableCONCAR_CLIENTES.ADOCIDEColumn), String)
            End Get
            Set(value As String)
                Me(Me.tableCONCAR_CLIENTES.ADOCIDEColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property ANUMIDE() As String
            Get
                Return CType(Me(Me.tableCONCAR_CLIENTES.ANUMIDEColumn), String)
            End Get
            Set(value As String)
                Me(Me.tableCONCAR_CLIENTES.ANUMIDEColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property AVRETE() As String
            Get
                Return CType(Me(Me.tableCONCAR_CLIENTES.AVRETEColumn), String)
            End Get
            Set(value As String)
                Me(Me.tableCONCAR_CLIENTES.AVRETEColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property APORRE() As Decimal
            Get
                Return CType(Me(Me.tableCONCAR_CLIENTES.APORREColumn), Decimal)
            End Get
            Set(value As Decimal)
                Me(Me.tableCONCAR_CLIENTES.APORREColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property ATARIFA() As Decimal
            Get
                Try
                    Return CType(Me(Me.tableCONCAR_CLIENTES.ATARIFAColumn), Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'ATARIFA' de la tabla 'CONCAR_CLIENTES' es DBNull.", e)
                End Try
            End Get
            Set(value As Decimal)
                Me(Me.tableCONCAR_CLIENTES.ATARIFAColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property ACIASEG() As String
            Get
                Try
                    Return CType(Me(Me.tableCONCAR_CLIENTES.ACIASEGColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'ACIASEG' de la tabla 'CONCAR_CLIENTES' es DBNull.", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tableCONCAR_CLIENTES.ACIASEGColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property USUARIO() As String
            Get
                Try
                    Return CType(Me(Me.tableCONCAR_CLIENTES.USUARIOColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'USUARIO' de la tabla 'CONCAR_CLIENTES' es DBNull.", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tableCONCAR_CLIENTES.USUARIOColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property MAQUINA() As String
            Get
                Try
                    Return CType(Me(Me.tableCONCAR_CLIENTES.MAQUINAColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'MAQUINA' de la tabla 'CONCAR_CLIENTES' es DBNull.", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tableCONCAR_CLIENTES.MAQUINAColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property CHEQUEO() As String
            Get
                Try
                    Return CType(Me(Me.tableCONCAR_CLIENTES.CHEQUEOColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'CHEQUEO' de la tabla 'CONCAR_CLIENTES' es DBNull.", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tableCONCAR_CLIENTES.CHEQUEOColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property AG_SIXT() As String
            Get
                Try
                    Return CType(Me(Me.tableCONCAR_CLIENTES.AG_SIXTColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'AG_SIXT' de la tabla 'CONCAR_CLIENTES' es DBNull.", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tableCONCAR_CLIENTES.AG_SIXTColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property CC_SIXT() As String
            Get
                Try
                    Return CType(Me(Me.tableCONCAR_CLIENTES.CC_SIXTColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'CC_SIXT' de la tabla 'CONCAR_CLIENTES' es DBNull.", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tableCONCAR_CLIENTES.CC_SIXTColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property KD_SIXT() As String
            Get
                Try
                    Return CType(Me(Me.tableCONCAR_CLIENTES.KD_SIXTColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'KD_SIXT' de la tabla 'CONCAR_CLIENTES' es DBNull.", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tableCONCAR_CLIENTES.KD_SIXTColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property LINK_SIXT() As String
            Get
                Try
                    Return CType(Me(Me.tableCONCAR_CLIENTES.LINK_SIXTColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'LINK_SIXT' de la tabla 'CONCAR_CLIENTES' es DBNull.", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tableCONCAR_CLIENTES.LINK_SIXTColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property FLAG_SIXT() As String
            Get
                Try
                    Return CType(Me(Me.tableCONCAR_CLIENTES.FLAG_SIXTColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'FLAG_SIXT' de la tabla 'CONCAR_CLIENTES' es DBNull.", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tableCONCAR_CLIENTES.FLAG_SIXTColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property CONTACTO() As String
            Get
                Try
                    Return CType(Me(Me.tableCONCAR_CLIENTES.CONTACTOColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'CONTACTO' de la tabla 'CONCAR_CLIENTES' es DBNull.", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tableCONCAR_CLIENTES.CONTACTOColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property EMAIL() As String
            Get
                Try
                    Return CType(Me(Me.tableCONCAR_CLIENTES.EMAILColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'EMAIL' de la tabla 'CONCAR_CLIENTES' es DBNull.", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tableCONCAR_CLIENTES.EMAILColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property TELEFONO1() As String
            Get
                Try
                    Return CType(Me(Me.tableCONCAR_CLIENTES.TELEFONO1Column), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'TELEFONO1' de la tabla 'CONCAR_CLIENTES' es DBNull.", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tableCONCAR_CLIENTES.TELEFONO1Column) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property TELEFONO2() As String
            Get
                Try
                    Return CType(Me(Me.tableCONCAR_CLIENTES.TELEFONO2Column), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'TELEFONO2' de la tabla 'CONCAR_CLIENTES' es DBNull.", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tableCONCAR_CLIENTES.TELEFONO2Column) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property NRO_TARJ_CRED() As String
            Get
                Try
                    Return CType(Me(Me.tableCONCAR_CLIENTES.NRO_TARJ_CREDColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'NRO_TARJ_CRED' de la tabla 'CONCAR_CLIENTES' es DBNull.", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tableCONCAR_CLIENTES.NRO_TARJ_CREDColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property VCN_TARJ_CRED() As String
            Get
                Try
                    Return CType(Me(Me.tableCONCAR_CLIENTES.VCN_TARJ_CREDColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'VCN_TARJ_CRED' de la tabla 'CONCAR_CLIENTES' es DBNull.", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tableCONCAR_CLIENTES.VCN_TARJ_CREDColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsATARIFANull() As Boolean
            Return Me.IsNull(Me.tableCONCAR_CLIENTES.ATARIFAColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetATARIFANull()
            Me(Me.tableCONCAR_CLIENTES.ATARIFAColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsACIASEGNull() As Boolean
            Return Me.IsNull(Me.tableCONCAR_CLIENTES.ACIASEGColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetACIASEGNull()
            Me(Me.tableCONCAR_CLIENTES.ACIASEGColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsUSUARIONull() As Boolean
            Return Me.IsNull(Me.tableCONCAR_CLIENTES.USUARIOColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetUSUARIONull()
            Me(Me.tableCONCAR_CLIENTES.USUARIOColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsMAQUINANull() As Boolean
            Return Me.IsNull(Me.tableCONCAR_CLIENTES.MAQUINAColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetMAQUINANull()
            Me(Me.tableCONCAR_CLIENTES.MAQUINAColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsCHEQUEONull() As Boolean
            Return Me.IsNull(Me.tableCONCAR_CLIENTES.CHEQUEOColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetCHEQUEONull()
            Me(Me.tableCONCAR_CLIENTES.CHEQUEOColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsAG_SIXTNull() As Boolean
            Return Me.IsNull(Me.tableCONCAR_CLIENTES.AG_SIXTColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetAG_SIXTNull()
            Me(Me.tableCONCAR_CLIENTES.AG_SIXTColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsCC_SIXTNull() As Boolean
            Return Me.IsNull(Me.tableCONCAR_CLIENTES.CC_SIXTColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetCC_SIXTNull()
            Me(Me.tableCONCAR_CLIENTES.CC_SIXTColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsKD_SIXTNull() As Boolean
            Return Me.IsNull(Me.tableCONCAR_CLIENTES.KD_SIXTColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetKD_SIXTNull()
            Me(Me.tableCONCAR_CLIENTES.KD_SIXTColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsLINK_SIXTNull() As Boolean
            Return Me.IsNull(Me.tableCONCAR_CLIENTES.LINK_SIXTColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetLINK_SIXTNull()
            Me(Me.tableCONCAR_CLIENTES.LINK_SIXTColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsFLAG_SIXTNull() As Boolean
            Return Me.IsNull(Me.tableCONCAR_CLIENTES.FLAG_SIXTColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetFLAG_SIXTNull()
            Me(Me.tableCONCAR_CLIENTES.FLAG_SIXTColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsCONTACTONull() As Boolean
            Return Me.IsNull(Me.tableCONCAR_CLIENTES.CONTACTOColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetCONTACTONull()
            Me(Me.tableCONCAR_CLIENTES.CONTACTOColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsEMAILNull() As Boolean
            Return Me.IsNull(Me.tableCONCAR_CLIENTES.EMAILColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetEMAILNull()
            Me(Me.tableCONCAR_CLIENTES.EMAILColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsTELEFONO1Null() As Boolean
            Return Me.IsNull(Me.tableCONCAR_CLIENTES.TELEFONO1Column)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetTELEFONO1Null()
            Me(Me.tableCONCAR_CLIENTES.TELEFONO1Column) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsTELEFONO2Null() As Boolean
            Return Me.IsNull(Me.tableCONCAR_CLIENTES.TELEFONO2Column)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetTELEFONO2Null()
            Me(Me.tableCONCAR_CLIENTES.TELEFONO2Column) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsNRO_TARJ_CREDNull() As Boolean
            Return Me.IsNull(Me.tableCONCAR_CLIENTES.NRO_TARJ_CREDColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetNRO_TARJ_CREDNull()
            Me(Me.tableCONCAR_CLIENTES.NRO_TARJ_CREDColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsVCN_TARJ_CREDNull() As Boolean
            Return Me.IsNull(Me.tableCONCAR_CLIENTES.VCN_TARJ_CREDColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetVCN_TARJ_CREDNull()
            Me(Me.tableCONCAR_CLIENTES.VCN_TARJ_CREDColumn) = Global.System.Convert.DBNull
        End Sub
    End Class

    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class GESNET_CLIENTESRow
        Inherits Global.System.Data.DataRow

        Private tableGESNET_CLIENTES As GESNET_CLIENTESDataTable

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableGESNET_CLIENTES = CType(Me.Table, GESNET_CLIENTESDataTable)
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property GestorId() As Integer
            Get
                Return CType(Me(Me.tableGESNET_CLIENTES.GestorIdColumn), Integer)
            End Get
            Set(value As Integer)
                Me(Me.tableGESNET_CLIENTES.GestorIdColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property EmpresaId() As Integer
            Get
                Return CType(Me(Me.tableGESNET_CLIENTES.EmpresaIdColumn), Integer)
            End Get
            Set(value As Integer)
                Me(Me.tableGESNET_CLIENTES.EmpresaIdColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property Codigo() As String
            Get
                Return CType(Me(Me.tableGESNET_CLIENTES.CodigoColumn), String)
            End Get
            Set(value As String)
                Me(Me.tableGESNET_CLIENTES.CodigoColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property Gestor() As String
            Get
                Return CType(Me(Me.tableGESNET_CLIENTES.GestorColumn), String)
            End Get
            Set(value As String)
                Me(Me.tableGESNET_CLIENTES.GestorColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property _Alias() As String
            Get
                Try
                    Return CType(Me(Me.tableGESNET_CLIENTES.AliasColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'Alias' de la tabla 'GESNET_CLIENTES' es DBNull.", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tableGESNET_CLIENTES.AliasColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property Contacto() As String
            Get
                Try
                    Return CType(Me(Me.tableGESNET_CLIENTES.ContactoColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'Contacto' de la tabla 'GESNET_CLIENTES' es DBNull.", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tableGESNET_CLIENTES.ContactoColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property Fax() As String
            Get
                Try
                    Return CType(Me(Me.tableGESNET_CLIENTES.FaxColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'Fax' de la tabla 'GESNET_CLIENTES' es DBNull.", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tableGESNET_CLIENTES.FaxColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property Email() As String
            Get
                Try
                    Return CType(Me(Me.tableGESNET_CLIENTES.EmailColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'Email' de la tabla 'GESNET_CLIENTES' es DBNull.", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tableGESNET_CLIENTES.EmailColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property DistritoId() As Integer
            Get
                Try
                    Return CType(Me(Me.tableGESNET_CLIENTES.DistritoIdColumn), Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'DistritoId' de la tabla 'GESNET_CLIENTES' es DBNull.", e)
                End Try
            End Get
            Set(value As Integer)
                Me(Me.tableGESNET_CLIENTES.DistritoIdColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property ProvinciaId() As Integer
            Get
                Try
                    Return CType(Me(Me.tableGESNET_CLIENTES.ProvinciaIdColumn), Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'ProvinciaId' de la tabla 'GESNET_CLIENTES' es DBNull.", e)
                End Try
            End Get
            Set(value As Integer)
                Me(Me.tableGESNET_CLIENTES.ProvinciaIdColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property DepartamentoId() As Integer
            Get
                Try
                    Return CType(Me(Me.tableGESNET_CLIENTES.DepartamentoIdColumn), Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'DepartamentoId' de la tabla 'GESNET_CLIENTES' es DBNull.", e)
                End Try
            End Get
            Set(value As Integer)
                Me(Me.tableGESNET_CLIENTES.DepartamentoIdColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property Nombre1() As String
            Get
                Try
                    Return CType(Me(Me.tableGESNET_CLIENTES.Nombre1Column), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'Nombre1' de la tabla 'GESNET_CLIENTES' es DBNull.", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tableGESNET_CLIENTES.Nombre1Column) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property Nombre2() As String
            Get
                Try
                    Return CType(Me(Me.tableGESNET_CLIENTES.Nombre2Column), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'Nombre2' de la tabla 'GESNET_CLIENTES' es DBNull.", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tableGESNET_CLIENTES.Nombre2Column) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property Apellido1() As String
            Get
                Try
                    Return CType(Me(Me.tableGESNET_CLIENTES.Apellido1Column), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'Apellido1' de la tabla 'GESNET_CLIENTES' es DBNull.", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tableGESNET_CLIENTES.Apellido1Column) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property Apellido2() As String
            Get
                Try
                    Return CType(Me(Me.tableGESNET_CLIENTES.Apellido2Column), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'Apellido2' de la tabla 'GESNET_CLIENTES' es DBNull.", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tableGESNET_CLIENTES.Apellido2Column) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property TipoDocumentoIdentidadId() As Integer
            Get
                Try
                    Return CType(Me(Me.tableGESNET_CLIENTES.TipoDocumentoIdentidadIdColumn), Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'TipoDocumentoIdentidadId' de la tabla 'GESNET_CLIENTES' e" & _
                            "s DBNull.", e)
                End Try
            End Get
            Set(value As Integer)
                Me(Me.tableGESNET_CLIENTES.TipoDocumentoIdentidadIdColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property DocumentoIdentidad() As String
            Get
                Try
                    Return CType(Me(Me.tableGESNET_CLIENTES.DocumentoIdentidadColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'DocumentoIdentidad' de la tabla 'GESNET_CLIENTES' es DBNu" & _
                            "ll.", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tableGESNET_CLIENTES.DocumentoIdentidadColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property RUC() As String
            Get
                Try
                    Return CType(Me(Me.tableGESNET_CLIENTES.RUCColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'RUC' de la tabla 'GESNET_CLIENTES' es DBNull.", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tableGESNET_CLIENTES.RUCColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property Personeria() As Integer
            Get
                Return CType(Me(Me.tableGESNET_CLIENTES.PersoneriaColumn), Integer)
            End Get
            Set(value As Integer)
                Me(Me.tableGESNET_CLIENTES.PersoneriaColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property Direccion() As String
            Get
                Try
                    Return CType(Me(Me.tableGESNET_CLIENTES.DireccionColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'Direccion' de la tabla 'GESNET_CLIENTES' es DBNull.", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tableGESNET_CLIENTES.DireccionColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property DireccionViaId() As Integer
            Get
                Try
                    Return CType(Me(Me.tableGESNET_CLIENTES.DireccionViaIdColumn), Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'DireccionViaId' de la tabla 'GESNET_CLIENTES' es DBNull.", e)
                End Try
            End Get
            Set(value As Integer)
                Me(Me.tableGESNET_CLIENTES.DireccionViaIdColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property DireccionNombreVia() As String
            Get
                Try
                    Return CType(Me(Me.tableGESNET_CLIENTES.DireccionNombreViaColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'DireccionNombreVia' de la tabla 'GESNET_CLIENTES' es DBNu" & _
                            "ll.", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tableGESNET_CLIENTES.DireccionNombreViaColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property DireccionNumero() As String
            Get
                Try
                    Return CType(Me(Me.tableGESNET_CLIENTES.DireccionNumeroColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'DireccionNumero' de la tabla 'GESNET_CLIENTES' es DBNull." & _
                            "", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tableGESNET_CLIENTES.DireccionNumeroColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property DireccionInterior() As String
            Get
                Try
                    Return CType(Me(Me.tableGESNET_CLIENTES.DireccionInteriorColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'DireccionInterior' de la tabla 'GESNET_CLIENTES' es DBNul" & _
                            "l.", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tableGESNET_CLIENTES.DireccionInteriorColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property DireccionZonaId() As Integer
            Get
                Try
                    Return CType(Me(Me.tableGESNET_CLIENTES.DireccionZonaIdColumn), Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'DireccionZonaId' de la tabla 'GESNET_CLIENTES' es DBNull." & _
                            "", e)
                End Try
            End Get
            Set(value As Integer)
                Me(Me.tableGESNET_CLIENTES.DireccionZonaIdColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property DireccionNombreZona() As String
            Get
                Try
                    Return CType(Me(Me.tableGESNET_CLIENTES.DireccionNombreZonaColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'DireccionNombreZona' de la tabla 'GESNET_CLIENTES' es DBN" & _
                            "ull.", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tableGESNET_CLIENTES.DireccionNombreZonaColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property DireccionReferencia() As String
            Get
                Try
                    Return CType(Me(Me.tableGESNET_CLIENTES.DireccionReferenciaColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'DireccionReferencia' de la tabla 'GESNET_CLIENTES' es DBN" & _
                            "ull.", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tableGESNET_CLIENTES.DireccionReferenciaColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property NacionalidadId() As Integer
            Get
                Try
                    Return CType(Me(Me.tableGESNET_CLIENTES.NacionalidadIdColumn), Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'NacionalidadId' de la tabla 'GESNET_CLIENTES' es DBNull.", e)
                End Try
            End Get
            Set(value As Integer)
                Me(Me.tableGESNET_CLIENTES.NacionalidadIdColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property FechaRegistro() As Date
            Get
                Try
                    Return CType(Me(Me.tableGESNET_CLIENTES.FechaRegistroColumn), Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'FechaRegistro' de la tabla 'GESNET_CLIENTES' es DBNull.", e)
                End Try
            End Get
            Set(value As Date)
                Me(Me.tableGESNET_CLIENTES.FechaRegistroColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property CorporacionId() As Integer
            Get
                Try
                    Return CType(Me(Me.tableGESNET_CLIENTES.CorporacionIdColumn), Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'CorporacionId' de la tabla 'GESNET_CLIENTES' es DBNull.", e)
                End Try
            End Get
            Set(value As Integer)
                Me(Me.tableGESNET_CLIENTES.CorporacionIdColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property TipoRelacionId() As Integer
            Get
                Try
                    Return CType(Me(Me.tableGESNET_CLIENTES.TipoRelacionIdColumn), Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'TipoRelacionId' de la tabla 'GESNET_CLIENTES' es DBNull.", e)
                End Try
            End Get
            Set(value As Integer)
                Me(Me.tableGESNET_CLIENTES.TipoRelacionIdColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function Is_AliasNull() As Boolean
            Return Me.IsNull(Me.tableGESNET_CLIENTES.AliasColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub Set_AliasNull()
            Me(Me.tableGESNET_CLIENTES.AliasColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsContactoNull() As Boolean
            Return Me.IsNull(Me.tableGESNET_CLIENTES.ContactoColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetContactoNull()
            Me(Me.tableGESNET_CLIENTES.ContactoColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsFaxNull() As Boolean
            Return Me.IsNull(Me.tableGESNET_CLIENTES.FaxColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetFaxNull()
            Me(Me.tableGESNET_CLIENTES.FaxColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsEmailNull() As Boolean
            Return Me.IsNull(Me.tableGESNET_CLIENTES.EmailColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetEmailNull()
            Me(Me.tableGESNET_CLIENTES.EmailColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsDistritoIdNull() As Boolean
            Return Me.IsNull(Me.tableGESNET_CLIENTES.DistritoIdColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetDistritoIdNull()
            Me(Me.tableGESNET_CLIENTES.DistritoIdColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsProvinciaIdNull() As Boolean
            Return Me.IsNull(Me.tableGESNET_CLIENTES.ProvinciaIdColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetProvinciaIdNull()
            Me(Me.tableGESNET_CLIENTES.ProvinciaIdColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsDepartamentoIdNull() As Boolean
            Return Me.IsNull(Me.tableGESNET_CLIENTES.DepartamentoIdColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetDepartamentoIdNull()
            Me(Me.tableGESNET_CLIENTES.DepartamentoIdColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsNombre1Null() As Boolean
            Return Me.IsNull(Me.tableGESNET_CLIENTES.Nombre1Column)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetNombre1Null()
            Me(Me.tableGESNET_CLIENTES.Nombre1Column) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsNombre2Null() As Boolean
            Return Me.IsNull(Me.tableGESNET_CLIENTES.Nombre2Column)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetNombre2Null()
            Me(Me.tableGESNET_CLIENTES.Nombre2Column) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsApellido1Null() As Boolean
            Return Me.IsNull(Me.tableGESNET_CLIENTES.Apellido1Column)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetApellido1Null()
            Me(Me.tableGESNET_CLIENTES.Apellido1Column) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsApellido2Null() As Boolean
            Return Me.IsNull(Me.tableGESNET_CLIENTES.Apellido2Column)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetApellido2Null()
            Me(Me.tableGESNET_CLIENTES.Apellido2Column) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsTipoDocumentoIdentidadIdNull() As Boolean
            Return Me.IsNull(Me.tableGESNET_CLIENTES.TipoDocumentoIdentidadIdColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetTipoDocumentoIdentidadIdNull()
            Me(Me.tableGESNET_CLIENTES.TipoDocumentoIdentidadIdColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsDocumentoIdentidadNull() As Boolean
            Return Me.IsNull(Me.tableGESNET_CLIENTES.DocumentoIdentidadColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetDocumentoIdentidadNull()
            Me(Me.tableGESNET_CLIENTES.DocumentoIdentidadColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsRUCNull() As Boolean
            Return Me.IsNull(Me.tableGESNET_CLIENTES.RUCColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetRUCNull()
            Me(Me.tableGESNET_CLIENTES.RUCColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsDireccionNull() As Boolean
            Return Me.IsNull(Me.tableGESNET_CLIENTES.DireccionColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetDireccionNull()
            Me(Me.tableGESNET_CLIENTES.DireccionColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsDireccionViaIdNull() As Boolean
            Return Me.IsNull(Me.tableGESNET_CLIENTES.DireccionViaIdColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetDireccionViaIdNull()
            Me(Me.tableGESNET_CLIENTES.DireccionViaIdColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsDireccionNombreViaNull() As Boolean
            Return Me.IsNull(Me.tableGESNET_CLIENTES.DireccionNombreViaColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetDireccionNombreViaNull()
            Me(Me.tableGESNET_CLIENTES.DireccionNombreViaColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsDireccionNumeroNull() As Boolean
            Return Me.IsNull(Me.tableGESNET_CLIENTES.DireccionNumeroColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetDireccionNumeroNull()
            Me(Me.tableGESNET_CLIENTES.DireccionNumeroColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsDireccionInteriorNull() As Boolean
            Return Me.IsNull(Me.tableGESNET_CLIENTES.DireccionInteriorColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetDireccionInteriorNull()
            Me(Me.tableGESNET_CLIENTES.DireccionInteriorColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsDireccionZonaIdNull() As Boolean
            Return Me.IsNull(Me.tableGESNET_CLIENTES.DireccionZonaIdColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetDireccionZonaIdNull()
            Me(Me.tableGESNET_CLIENTES.DireccionZonaIdColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsDireccionNombreZonaNull() As Boolean
            Return Me.IsNull(Me.tableGESNET_CLIENTES.DireccionNombreZonaColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetDireccionNombreZonaNull()
            Me(Me.tableGESNET_CLIENTES.DireccionNombreZonaColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsDireccionReferenciaNull() As Boolean
            Return Me.IsNull(Me.tableGESNET_CLIENTES.DireccionReferenciaColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetDireccionReferenciaNull()
            Me(Me.tableGESNET_CLIENTES.DireccionReferenciaColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsNacionalidadIdNull() As Boolean
            Return Me.IsNull(Me.tableGESNET_CLIENTES.NacionalidadIdColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetNacionalidadIdNull()
            Me(Me.tableGESNET_CLIENTES.NacionalidadIdColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsFechaRegistroNull() As Boolean
            Return Me.IsNull(Me.tableGESNET_CLIENTES.FechaRegistroColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetFechaRegistroNull()
            Me(Me.tableGESNET_CLIENTES.FechaRegistroColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsCorporacionIdNull() As Boolean
            Return Me.IsNull(Me.tableGESNET_CLIENTES.CorporacionIdColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetCorporacionIdNull()
            Me(Me.tableGESNET_CLIENTES.CorporacionIdColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsTipoRelacionIdNull() As Boolean
            Return Me.IsNull(Me.tableGESNET_CLIENTES.TipoRelacionIdColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetTipoRelacionIdNull()
            Me(Me.tableGESNET_CLIENTES.TipoRelacionIdColumn) = Global.System.Convert.DBNull
        End Sub
    End Class

    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class CLIENTES_COMPROBANTESRow
        Inherits Global.System.Data.DataRow

        Private tableCLIENTES_COMPROBANTES As CLIENTES_COMPROBANTESDataTable

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableCLIENTES_COMPROBANTES = CType(Me.Table, CLIENTES_COMPROBANTESDataTable)
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property CUENTA_COMERCIAL() As String
            Get
                Return CType(Me(Me.tableCLIENTES_COMPROBANTES.CUENTA_COMERCIALColumn), String)
            End Get
            Set(value As String)
                Me(Me.tableCLIENTES_COMPROBANTES.CUENTA_COMERCIALColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property RAZON_SOCIAL() As String
            Get
                Return CType(Me(Me.tableCLIENTES_COMPROBANTES.RAZON_SOCIALColumn), String)
            End Get
            Set(value As String)
                Me(Me.tableCLIENTES_COMPROBANTES.RAZON_SOCIALColumn) = value
            End Set
        End Property
    End Class

    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Public Class CLIENTESRowChangeEvent
        Inherits Global.System.EventArgs

        Private eventRow As CLIENTESRow

        Private eventAction As Global.System.Data.DataRowAction

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub New(ByVal row As CLIENTESRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New()
            Me.eventRow = row
            Me.eventAction = action
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property Row() As CLIENTESRow
            Get
                Return Me.eventRow
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class

    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Public Class CLIENTES_LISTARowChangeEvent
        Inherits Global.System.EventArgs

        Private eventRow As CLIENTES_LISTARow

        Private eventAction As Global.System.Data.DataRowAction

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub New(ByVal row As CLIENTES_LISTARow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New()
            Me.eventRow = row
            Me.eventAction = action
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property Row() As CLIENTES_LISTARow
            Get
                Return Me.eventRow
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class

    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Public Class CONSULTAR_DATOS_RUCRowChangeEvent
        Inherits Global.System.EventArgs

        Private eventRow As CONSULTAR_DATOS_RUCRow

        Private eventAction As Global.System.Data.DataRowAction

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub New(ByVal row As CONSULTAR_DATOS_RUCRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New()
            Me.eventRow = row
            Me.eventAction = action
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property Row() As CONSULTAR_DATOS_RUCRow
            Get
                Return Me.eventRow
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class

    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Public Class CONCAR_CLIENTES_OLDRowChangeEvent
        Inherits Global.System.EventArgs

        Private eventRow As CONCAR_CLIENTES_OLDRow

        Private eventAction As Global.System.Data.DataRowAction

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub New(ByVal row As CONCAR_CLIENTES_OLDRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New()
            Me.eventRow = row
            Me.eventAction = action
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property Row() As CONCAR_CLIENTES_OLDRow
            Get
                Return Me.eventRow
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class

    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Public Class CONCAR_CLIENTESRowChangeEvent
        Inherits Global.System.EventArgs

        Private eventRow As CONCAR_CLIENTESRow

        Private eventAction As Global.System.Data.DataRowAction

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub New(ByVal row As CONCAR_CLIENTESRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New()
            Me.eventRow = row
            Me.eventAction = action
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property Row() As CONCAR_CLIENTESRow
            Get
                Return Me.eventRow
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class

    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Public Class GESNET_CLIENTESRowChangeEvent
        Inherits Global.System.EventArgs

        Private eventRow As GESNET_CLIENTESRow

        Private eventAction As Global.System.Data.DataRowAction

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub New(ByVal row As GESNET_CLIENTESRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New()
            Me.eventRow = row
            Me.eventAction = action
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property Row() As GESNET_CLIENTESRow
            Get
                Return Me.eventRow
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class

    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Public Class CLIENTES_COMPROBANTESRowChangeEvent
        Inherits Global.System.EventArgs

        Private eventRow As CLIENTES_COMPROBANTESRow

        Private eventAction As Global.System.Data.DataRowAction

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub New(ByVal row As CLIENTES_COMPROBANTESRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New()
            Me.eventRow = row
            Me.eventAction = action
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property Row() As CLIENTES_COMPROBANTESRow
            Get
                Return Me.eventRow
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
End Class
